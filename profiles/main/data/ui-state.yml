alefragnani.Bookmarks: '{"Bookmarks.version":"13.4.1"}'
alefragnani.project-manager: '{"project-manager.version":"12.7.0","recent":"[\"APPSceneProjectURP\",\"APPGameUnity\",\"UnityCsReference-master\"]"}'
cweijan.vscode-office: '{"scrollTop_f:\\UnityProjects\\Lichanglong\\LcL-Soft-Render\\Library\\PackageCache\\com.unity.mathematics@1.2.6\\Documentation~\\mathematics.md":430,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnUnityShader\\README.md":8856,"scrollTop_f:\\UnityProjects\\Work\\APPSceneProjectURP\\Packages\\com.unity.render-pipelines.universal@12.1.6\\Documentation~\\whats-new\\urp-whats-new.md":430,"scrollTop_f:\\UnityProjects\\Lichanglong\\LcL-VisualEffectGraph\\README.md":671,"scrollTop_f:\\Tools\\hw_seckill\\README.md":2206,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnURP\\Packages\\com.unity.render-pipelines.universal@12.1.7\\Documentation~\\renderer-features\\how-to-fullscreen-blit-in-xr-spi.md":8096,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnURP\\Packages\\com.unity.render-pipelines.universal@12.1.7\\Documentation~\\renderer-features\\renderer-feature-render-objects.md":101,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnURP\\Packages\\com.unity.render-pipelines.universal@12.1.7\\Documentation~\\renderer-features\\create-custom-renderer-feature.md":29879,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnURP\\Packages\\com.unity.render-pipelines.core@12.1.7\\Documentation~\\render-graph-writing-a-render-pipeline.md":5634,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnURP\\Packages\\com.unity.render-pipelines.universal@12.1.7\\Documentation~\\VolumeOverrides.md":581,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnURP\\Packages\\com.unity.render-pipelines.universal@12.1.7\\Documentation~\\Volumes.md":1909,"scrollTop_f:\\UnityProjects\\Lichanglong\\LearnURP\\Packages\\com.unity.render-pipelines.universal@12.1.7\\Documentation~\\post-processing-ssao.md":5999,"scrollTop_f:\\UnityProjects\\Work\\ATSceneProject\\Packages\\com.unity.render-pipelines.core@12.1.7\\CHANGELOG.md":10680,"scrollTop_d:\\AI\\stable-diffusion-webui\\CHANGELOG.md":10476}'
donjayamanne.python-environment-manager: '{"LAST_EXTENSION_VERSION":"1.2.4","PYTHON:PACKAGE_MANAGER:ENVS_CACHE":[{"id":"C:\\USERS\\ADMINISTRATOR\\APPDATA\\LOCAL\\PROGRAMS\\PYTHON\\PYTHON310\\PYTHON.EXE","sysPrefix":"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310","envType":"Global","envName":"","envPath":"","path":"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310\\python.exe","architecture":3,"sysVersion":"3.10.4
  (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit
  (AMD64)]","version":{"raw":"3.10.4","major":3,"minor":10,"patch":4,"build":[],"prerelease":["final","0"]},"companyDisplayName":"PythonCore","displayName":"Python
  3.10.4 64-bit","detailedDisplayName":"Python 3.10.4
  64-bit"}],"PYTHON_GLOBAL_STORAGE_KEYS":[],"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\UNITYPROJECTS\\LICHANGLONG\\VSCODESETTING":false,"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\UNITYPROJECTS\\REFERENCE\\VSCODE-SYNC-SETTINGS":false,"PYTHON_ENV_INFO_CACHE":[{"name":"","location":"","kind":"global-other","executable":{"filename":"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310\\python.exe","sysPrefix":"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310","ctime":-1,"mtime":-1},"display":"Python
  3.10.4
  64-bit","version":{"major":3,"minor":10,"micro":4,"release":{"level":"final","serial":0},"sysVersion":"3.10.4
  (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit
  (AMD64)]"},"arch":3,"distro":{"org":"PythonCore","defaultDisplayName":"Python
  3.10 (64-bit)"},"source":["path env var","windows
  registry"],"id":"C:\\USERS\\ADMINISTRATOR\\APPDATA\\LOCAL\\PROGRAMS\\PYTHON\\PYTHON310\\PYTHON.EXE","detailedDisplayName":"Python
  3.10.4
  64-bit","hasCompleteInfo":true}],"PYTHON_EXTENSION_GLOBAL_STORAGE_KEYS":[]}'
eamodio.gitlens: '{"gitlens:synced:version":"14.6.1","gitlens:premium:subscription":{"v":1,"data":{"plan":{"actual":{"id":"free","name":"GitKraken","bundle":false,"cancelled":false,"trialReactivationCount":0,"startedOn":"2022-10-18T08:06:46.287Z"},"effective":{"id":"free","name":"GitKraken","bundle":false,"cancelled":false,"trialReactivationCount":0,"startedOn":"2022-10-18T08:06:46.287Z"}},"state":2,"previewTrial":{"startedOn":"2023-09-04T07:10:09.884Z","expiresOn":"2023-09-07T15:59:59.999Z"}}},"gitlens:version":"14.6.1","gitlens:plus:migratedAuthentication":true,"gitlens:home:status:pinned":true,"gitlens:usages":{"homeView:shown":{"count":1,"firstUsedAt":1685499440306,"lastUsedAt":1685499554017},"contributorsView:shown":{"count":0,"firstUsedAt":1685499554282,"lastUsedAt":1685499554282},"commitsView:shown":{"count":20,"firstUsedAt":1686534982773,"lastUsedAt":1701329806237},"fileHistoryView:shown":{"count":7,"firstUsedAt":1686535003843,"lastUsedAt":1702606554268},"commitDetailsView:shown":{"count":4,"firstUsedAt":1686535019211,"lastUsedAt":1702606554005},"branchesView:shown":{"count":8,"firstUsedAt":1686535086556,"lastUsedAt":1695370662754},"stashesView:shown":{"count":4,"firstUsedAt":1686535092971,"lastUsedAt":1697594051835},"remotesView:shown":{"count":8,"firstUsedAt":1686535094166,"lastUsedAt":1695370662755},"workspaceView:shown":{"count":2,"firstUsedAt":1686535096600,"lastUsedAt":1687174613340},"tagsView:shown":{"count":0,"firstUsedAt":1686535097688,"lastUsedAt":1686535097688},"searchAndCompareView:shown":{"count":6,"firstUsedAt":1686535099664,"lastUsedAt":1702606554268},"timelineView:shown":{"count":2,"firstUsedAt":1687174619711,"lastUsedAt":1702606554009},"draftsView:shown":{"count":0,"firstUsedAt":1702606541256,"lastUsedAt":1702606541256},"workspacesView:shown":{"count":0,"firstUsedAt":1702606541257,"lastUsedAt":1702606541257}},"gitlens:home:steps:completed":[],"gitlens:repoVisibility":[["f:/UnityProjects/Reference/SoftRender/URasterizer",{"visibility":"public","timestamp":1686207445348,"remotesHash":"github.com/happyfire/URasterizer"}],["f:/UnityProjects/Reference/SoftRender/SoftRenderer-Unity",{"visibility":"public","timestamp":1686223734545,"remotesHash":"github.com/Litmin/SoftRenderer-Unity"}],["vscode-vfs://github/MrZz233/tinyrenderer_notes",{"visibility":"public","timestamp":1686288339088,"remotesHash":"github.com/MrZz233/tinyrenderer_notes"}],["vscode-vfs://github/ssloy/tinyrenderer",{"visibility":"public","timestamp":1686288758337,"remotesHash":"github.com/ssloy/tinyrenderer"}],["f:/UnityProjects/Reference/SoftRender/SRender",{"visibility":"public","timestamp":1687175221934,"remotesHash":"github.com/SunXLei/SRender"}],["f:/UnityProjects/Reference/SoftRender/tinyrenderer",{"visibility":"public","timestamp":1687230577570,"remotesHash":"github.com/ssloy/tinyrenderer"}],["f:/UnityProjects/Reference/SoftRender/renderer",{"visibility":"public","timestamp":1687230961412,"remotesHash":"github.com/zauonlok/renderer"}],["f:/UnityProjects/Lichanglong/LcL-Built-In-Render",{"visibility":"private","timestamp":1688027718926,"remotesHash":"github.com/csdjk/LcL-Built-In-Render"}],["f:/UnityProjects/Reference/GPUInstance/Milk_Instancer_Standard",{"visibility":"public","timestamp":1689574502147,"remotesHash":"github.com/Milk-Drinker01/Milk_Instancer_Standard"}],["f:/UnityProjects/Lichanglong/LcL-VisualEffectGraph/Assets/LcL-Tools-Unity",{"visibility":"private","timestamp":1691722134713,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/URP/UniversalRenderingExamples",{"visibility":"public","timestamp":1692352427192,"remotesHash":"github.com/Unity-Technologies/UniversalRenderingExamples"}],["f:/UnityProjects/Work/T15ClientProject/Assets/LiChangLong/LcL-Tools-Unity",{"visibility":"public","timestamp":1693209983213,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/Work/T15ClientProject/HybridCLRData/hybridclr_repo",{"visibility":"private","timestamp":1693210002166,"remotesHash":"gitee.com/focus-creative-games/hybridclr"}],["f:/UnityProjects/Work/T15ClientProject/HybridCLRData/il2cpp_plus_repo",{"visibility":"private","timestamp":1693210002166,"remotesHash":"gitee.com/focus-creative-games/il2cpp_plus"}],["f:/UnityProjects/Work/T15SceneProject/Assets/LiChangLong/LcL-Tools-Unity",{"visibility":"public","timestamp":1693282892453,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/HoudiniProjects/libs/FeELib-for-Houdini",{"visibility":"private","timestamp":1693811383874,"remotesHash":"github.com.cnpmjs.org/Fe-Elf/FeELib-for-Houdini"}],["f:/Tools/dxbc_reader",{"visibility":"public","timestamp":1693991300274,"remotesHash":"github.com/luxuia/dxbc_reader"}],["f:/UnityProjects/Lichanglong/LcL-Soft-Render",{"visibility":"public","timestamp":1695299858696,"remotesHash":"github.com/csdjk/LcL-Soft-Render"}],["f:/UnityProjects/Work/ATSceneProject/Library/PackageCache/.tmp-27216-04qMh60XlfgL/clone",{"visibility":"public","timestamp":1695373367137,"remotesHash":"github.com/JasonMa0012/LWGUI"}],["f:/UnityProjects/Work/ATSceneProject/Library/PackageCache/.tmp-27216-iZ4dX4rvU5Rn/clone",{"visibility":"public","timestamp":1695373440303,"remotesHash":"github.com/JasonMa0012/LWGUI"}],["f:/UnityProjects/URPTest/Assets/Plugins/TexturePainter",{"visibility":"public","timestamp":1697008099700,"remotesHash":"github.com/wildchild756/TexturePainter"}],["f:/UnityProjects/Work/ATSceneProject/Library/PackageCache/.tmp-21512-0GC1VJhk6o5a/clone",{"visibility":"public","timestamp":1697016825611,"remotesHash":"github.com/JasonMa0012/LWGUI"}],["f:/Tools/hw_seckill",{"visibility":"public","timestamp":1697507773479,"remotesHash":"github.com/ancoka/hw_seckill"}],["f:/UnityProjects/Lichanglong/LcL-RenderPipeline",{"visibility":"public","timestamp":1697534682524,"remotesHash":"github.com/csdjk/LcL-RenderPipeline"}],["f:/UnityProjects/Reference/Unity-Cloud-Shadows",{"visibility":"public","timestamp":1697601239479,"remotesHash":"github.com/EntroPi-Games/Unity-Cloud-Shadows"}],["f:/Tools/ShaderMan",{"visibility":"public","timestamp":1697773604596,"remotesHash":"github.com/smkplus/ShaderMan"}],["f:/UnityProjects/Work/ATSceneProject/Assets/LiChangLong/Scene/SSRreflection",{"visibility":"private","timestamp":1698050048022,"remotesHash":"github.com/alen-cell/SSRreflection"}],["f:/UnityProjects/Reference/Editor/UnityToolchainsTrick",{"visibility":"public","timestamp":1698119258344,"remotesHash":"github.com/XINCGer/UnityToolchainsTrick"}],["f:/UnityProjects/Reference/SSR/Library/PackageCache/.tmp-59820-TSLi0CHXSHFM/clone",{"visibility":"public","timestamp":1698120067191,"remotesHash":"github.com/dbrizov/NaughtyAttributes"}],["f:/UnityProjects/Reference/UnityURP-MobileScreenSpacePlanarReflection-master/UnityURP-MobileScreenSpacePlanarReflection-master/Library/PackageCache/.tmp47368Od5ChoLKXLgF/clone",{"visibility":"private","timestamp":1698128680315,"remotesHash":"github.com/dbrizov/NaughtyAttributes"}],["f:/UnityProjects/Reference/UnityURP-MobileScreenSpacePlanarReflection-master/UnityURP-MobileScreenSpacePlanarReflection-master/Assets/SSRreflection",{"visibility":"private","timestamp":1698128816957,"remotesHash":"github.com/alen-cell/SSRreflection"}],["f:/UnityProjects/Reference/Unity-ScreenSpaceReflections-URP/Library/PackageCache/.tmp-101192-73kkK2Vncnh7/clone",{"visibility":"public","timestamp":1698289515659,"remotesHash":"github.com/JoshuaLim007/Unity-ScreenSpaceReflections-URP"}],["f:/UnityProjects/Reference/Unity-ScreenSpaceReflections-URP/Library/PackageCache/.tmp-101192-HShtCKtnO5nO/clone",{"visibility":"public","timestamp":1698289667185,"remotesHash":"github.com/JoshuaLim007/Unity-ScreenSpaceReflections-URP"}],["f:/UnityProjects/Reference/Unity-ScreenSpaceReflections-URP/Library/PackageCache/.tmp-103104-lf6GdL4uh6IH/clone",{"visibility":"public","timestamp":1698289988251,"remotesHash":"github.com/JoshuaLim007/Unity-ScreenSpaceReflections-URP"}],["f:/UnityProjects/Reference/Unity-ScreenSpaceReflections-URP/Packages/Unity-ScreenSpaceReflections-URP",{"visibility":"public","timestamp":1698300827922,"remotesHash":"github.com/JoshuaLim007/Unity-ScreenSpaceReflections-URP"}],["f:/UnityProjects/Reference/URP_ScreenSpacePlanarReflections",{"visibility":"public","timestamp":1698322396914,"remotesHash":"github.com/Steven-Cannavan/URP_ScreenSpacePlanarReflections"}],["f:/UnityProjects/Reference/UnityProj",{"visibility":"public","timestamp":1698646631550,"remotesHash":"github.com/idovelemon/UnityProj"}],["f:/UnityProjects/Work/ATSceneProject/Library/PackageCache/.tmp-12492-wcPMRFRvszvx/clone",{"visibility":"public","timestamp":1698652884529,"remotesHash":"github.com/Kink3d/kMirrors"}],["f:/UnityProjects/Reference/UnityURP-MobileScreenSpacePlanarReflection",{"visibility":"public","timestamp":1698721475914,"remotesHash":"github.com/ColinLeung-NiloCat/UnityURP-MobileScreenSpacePlanarReflection"}],["f:/UnityProjects/Reference/SRP-Demos",{"visibility":"public","timestamp":1699272757458,"remotesHash":"github.com/SardineFish/SRP-Demos"}],["f:/UnityProjects/Lichanglong/LcL-URP-Render",{"visibility":"private","timestamp":1699430853540,"remotesHash":"github.com/csdjk/LcL-URP-Render"}],["f:/UnityProjects/Reference/URP-WaterShaders",{"visibility":"public","timestamp":1699510599809,"remotesHash":"github.com/aniruddhahar/URP-WaterShaders"}],["f:/UnityProjects/Reference/AO_Project",{"visibility":"private","timestamp":1699860565753,"remotesHash":"github.com/VAherggoooooo/AO_Project"}],["f:/UnityProjects/Lichanglong/LcL-VisualEffectGraph",{"visibility":"private","timestamp":1699875839022,"remotesHash":"github.com/csdjk/LcL-VisualEffectGraph"}],["f:/UnityProjects/Work/ATGameProject/Assets/LiChangLong/LcL-Tools-Unity",{"visibility":"private","timestamp":1699949793516,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/Reference/URP-PostProcess/Library/PackageCache/.tmp-133640-ut4XHr37f0i8/clone",{"visibility":"private","timestamp":1699949852457,"remotesHash":"github.com/SleeplessOwl0102/URP-Custom-Post-Processing"}],["f:/UnityProjects/Reference/URP-PostProcess/Library/PackageCache/.tmp-133640-kWGN2nyyrgO0/clone",{"visibility":"private","timestamp":1699967165798,"remotesHash":"github.com/SleeplessOwl0102/URP-Custom-Post-Processing"}],["f:/UnityProjects/Reference/URP-PostProcess/Library/PackageCache/.tmp-133640-J5xoqt3V81AK/clone",{"visibility":"private","timestamp":1699967165798,"remotesHash":"github.com/SleeplessOwl0102/URP-Custom-Post-Processing"}],["f:/UnityProjects/Reference/URP-PostProcess/Library/PackageCache/.tmp-133640-X4VStKLj9TEQ/clone",{"visibility":"private","timestamp":1699967313007,"remotesHash":"github.com/SleeplessOwl0102/URP-Custom-Post-Processing"}],["f:/UnityProjects/Reference/URP-PostProcess/Library/PackageCache/.tmp-133640-ctByVngW6u1y/clone",{"visibility":"public","timestamp":1699967501830,"remotesHash":"github.com/SleeplessOwl0102/URP-Custom-Post-Processing"}],["f:/UnityProjects/Work/ATSceneProject/Assets/LiChangLong/LcL-Tools-Unity",{"visibility":"public","timestamp":1700565208323,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/Lichanglong/LearnUnityShader",{"visibility":"public","timestamp":1701079250946,"remotesHash":"github.com/csdjk/LearnUnityShader"}],["f:/UnityProjects/Reference/Unity-UI-SDF",{"visibility":"public","timestamp":1701085465905,"remotesHash":"github.com/BlenMiner/Unity-UI-SDF"}],["f:/UnityProjects/Reference/SDF/UnitySDF",{"visibility":"public","timestamp":1701088172313,"remotesHash":"github.com/Weesals/UnitySDF"}],["d:/AI/stable-diffusion-webui",{"visibility":"public","timestamp":1701155524326,"remotesHash":"github.com/AUTOMATIC1111/stable-diffusion-webui"}],["f:/UnityProjects/Work/APPSceneProjectURP/Assets/LiChangLong/LcL-Tools-Unity",{"visibility":"public","timestamp":1701310608773,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/Lichanglong/LcL-Tools-Unity",{"visibility":"public","timestamp":1701325778192,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/Reference/3DModelTo2DPixel-Unity",{"visibility":"public","timestamp":1701343898056,"remotesHash":"github.com/noobdawn/3DModelTo2DPixel-Unity"}],["d:/AI/DragGAN",{"visibility":"public","timestamp":1701654668767,"remotesHash":"github.com/XingangPan/DragGAN"}],["d:/AI/Auto-GPT",{"visibility":"private","timestamp":1701654685158,"remotesHash":"github.com/Significant-Gravitas/Auto-GPT"}],["f:/UnityProjects/Lichanglong/LearnUnityShader/Assets/LcL-Tools-Unity",{"visibility":"public","timestamp":1701680436594,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/URPTest/Assets/Scenes/Grass/Unity-URP-GlassShader",{"visibility":"public","timestamp":1701689588857,"remotesHash":"github.com/omid3098/Unity-URP-GlassShader"}],["f:/Other/D3D11-Wrapper",{"visibility":"public","timestamp":1701763968485,"remotesHash":"github.com/VestLee/D3D11-Wrapper"}],["d:/AI/ComfyUI_windows_portable/ComfyUI",{"visibility":"public","timestamp":1702261774129,"remotesHash":"github.com/comfyanonymous/ComfyUI"}],["f:/HoudiniProjects/libs/LcLLib-for-Houdini",{"visibility":"public","timestamp":1702293838342,"remotesHash":"github.com/csdjk/LcLLib-for-Houdini"}],["f:/UnityProjects/Lichanglong/huile8",{"visibility":"public","timestamp":1702546045795,"remotesHash":"github.com/mqycn/huile8"}],["f:/UnityProjects/Lichanglong/LearnURP",{"visibility":"public","timestamp":1702546153070,"remotesHash":"github.com/csdjk/LearnURP"}],["f:/UnityProjects/Reference/vscode-sync-settings",{"visibility":"public","timestamp":1702551203530,"remotesHash":"github.com/zokugun/vscode-sync-settings"}],["f:/UnityProjects/Work/APPGameUnity/Assets/LiChangLong/LcL-Tools-Unity",{"visibility":"public","timestamp":1702555554196,"remotesHash":"github.com/csdjk/LcL-Tools-Unity"}],["f:/UnityProjects/Lichanglong/VscodeSetting",{"visibility":"public","timestamp":1702556939216,"remotesHash":"github.com/csdjk/VscodeSetting"}],["f:/UnityProjects/Lichanglong/LcL-Data",{"visibility":"private","timestamp":1702622543508,"remotesHash":"github.com/csdjk/LcL-Data"}],["c:/Users/Administrator/AppData/Roaming/Code/User/globalStorage/zokugun.sync-settings/repository",{"visibility":"public","timestamp":1702626671844,"remotesHash":"github.com/csdjk/VscodeSetting"}]],"gitlens:avatars":[["249144b5c08ba239625fa36c8f7fdbf8:64",{"uri":"https://avatars.githubusercontent.com/u/33519787?s%3D64%26v%3D4","timestamp":1686304920570}],["249144b5c08ba239625fa36c8f7fdbf8:32",{"uri":"https://avatars.githubusercontent.com/u/33519787?s%3D32%26v%3D4","timestamp":1686534983481}],["23a6c23d22d591eb1ef62064a4fb49c6:64",{"uri":"https://avatars.githubusercontent.com/u/2919139?s%3D64%26v%3D4","timestamp":1686710756099}],["b166294608285081e6bc04f59cd2a947:64",{"uri":"https://avatars.githubusercontent.com/u/22699604?s%3D64%26v%3D4","timestamp":1686713953706}],["b03db079a7d8ec3538375ee8caa62553:64",{"uri":"https://avatars.githubusercontent.com/u/26202015?s%3D64%26v%3D4","timestamp":1687175228629}],["e3e5d1887f9fb2846b230e30393c4258:64",{"uri":"https://avatars.githubusercontent.com/u/1029298?s%3D64%26v%3D4","timestamp":1687230579877}],["f5988aa3f0a368615875423e1ade2cbd:64",{"uri":"https://avatars.githubusercontent.com/u/17644474?s%3D64%26v%3D4","timestamp":1687230967510}],["d0e600adfd0ff1e40956edf3af5927f7:64",{"uri":"https://avatars.githubusercontent.com/u/9811576?s%3D64%26v%3D4","timestamp":1687264555190}],["972d89b43facbf3badea259f1d13c592:64",{"uri":"https://avatars.githubusercontent.com/u/7453395?s%3D64%26v%3D4","timestamp":1687264597259}],["92a36fc3a06d855e0dd18029a0c8f477:64",{"uri":"https://avatars.githubusercontent.com/u/2693840?s%3D64%26v%3D4","timestamp":1687264599211}],["59cf5a4ba5c836abcb64f0d0607a829f:64",{"uri":"https://avatars.githubusercontent.com/u/59656122?s%3D64%26v%3D4","timestamp":1689574502842}],["95aa6d617f7e2f1d8cb92aa3cb1d7bd2:64",{"uri":"https://avatars.githubusercontent.com/u/1796573?s%3D64%26v%3D4","timestamp":1693991303797}],["1b9852ec754e1add995a0d82529c86c1:64",{"uri":"https://avatars.githubusercontent.com/robertsmieja?size%3D64","timestamp":0}],["478eefcbdcf53e52e5f562bac1b883e9:64",{"uri":"https://avatars.githubusercontent.com/u/20920490?s%3D64%26v%3D4","timestamp":1701658718994}],["0eaf839ae6c8c621d32424f12da7846c:64",{"uri":"https://avatars.githubusercontent.com/u/121283862?s%3D64%26v%3D4","timestamp":1702264402403}]],"gitlens:views:commitDetails:dismissed":["sidebar"],"gitlens:views:welcome:visible":true}'
GitHub.copilot: '{"installedVersion":"1.143.0"}'
GitHub.copilot-chat: '{"VSCode.ABExp.FeatureData":{"features":["aa_t_chat","account-aacf","config.editor.experimental.asyncTokenization","livesharecontinuousaacf","mindaroBinariesVersion","mindaroBinariesVersion-1.0.20210702","mindaroBinariesVersion-1.0.20210723","portForwardingServiceEnabled-development","portForwardingServiceEnabled-production","portForwardingServiceEnabled-staging","RemoveKernelToolbarInInteractiveWindowcf","reusableLinks","shouldUseGrpcService"],"assignmentContext":"vsliv368cf:30146710;vsreu685:30147344;python383cf:30185419;vspor879:30202332;vspor708:30202333;vspor363:30204092;binariesv615:30325510;bridge0708:30335490;bridge0723:30353136;vsaa593cf:30376535;c4g48928:30535728;asynctok:30898717;aa_t_chat:30882232;","configs":[{"Id":"vscode","Parameters":{"aa_t_chat":true,"account-aa":false,"config.editor.experimental.asyncTokenization":true,"livesharecontinuousaa":false,"mindaroBinariesVersion":"1.0.20210615.1","mindaroBinariesVersion-1.0.20210702":"1.0.20210708.15","mindaroBinariesVersion-1.0.20210723":"1.0.20210723.6","portForwardingServiceEnabled-development":true,"portForwardingServiceEnabled-production":true,"portForwardingServiceEnabled-staging":true,"RemoveKernelToolbarInInteractiveWindow":false,"reusableLinks":true,"shouldUseGrpcService":true}}]},"commandEmbeddings-version-remote":"1700519437414","commandEmbeddings-version":"1.85","settingEmbeddings-version-remote":"1698362609288","settingEmbeddings-version":"1.84"}'
GitHub.copilot-labs: "{}"
GitHub.remotehub: '{"2f812f81ad9cd3e13d3c775e7a6521f8/metadata/vscode-vfs://github/MrZz233/tinyrenderer_notes":"{\"schemaVersion\":1,\"revision\":\"82ef14c1c939923571e1be843055a941254da7fa\"}","workspaceRepositories":"{\"schemaVersion\":1,\"workspaceRepositories\":[[\"2f812f81ad9cd3e13d3c775e7a6521f8/vscode-vfs://github/MrZz233/tinyrenderer_notes\",{\"workspaceId\":\"2f812f81ad9cd3e13d3c775e7a6521f8\",\"uri\":{\"$mid\":1,\"path\":\"/MrZz233/tinyrenderer_notes\",\"scheme\":\"vscode-vfs\",\"authority\":\"github\"},\"canonicalUri\":{\"$mid\":1,\"path\":\"/MrZz233/tinyrenderer_notes\",\"scheme\":\"vscode-vfs\",\"authority\":\"github\"},\"name\":\"MrZz233/tinyrenderer_notes\",\"provider\":{\"id\":\"github\",\"name\":\"GitHub\"},\"ref\":{\"type\":0,\"name\":\"main\"},\"timestamp\":1686896196934}],[\"39f50151d3dfa4e031da36ff2402f790/vscode-vfs://github/ssloy/tinyrenderer\",{\"workspaceId\":\"39f50151d3dfa4e031da36ff2402f790\",\"uri\":{\"$mid\":1,\"fsPath\":\"\\\\ssloy\\\\tinyrenderer\",\"_sep\":1,\"external\":\"vscode-vfs://github/ssloy/tinyrenderer\",\"path\":\"/ssloy/tinyrenderer\",\"scheme\":\"vscode-vfs\",\"authority\":\"github\"},\"canonicalUri\":{\"$mid\":1,\"path\":\"/ssloy/tinyrenderer\",\"scheme\":\"vscode-vfs\",\"authority\":\"github\"},\"name\":\"ssloy/tinyrenderer\",\"provider\":{\"id\":\"github\",\"name\":\"GitHub\"},\"ref\":{\"type\":0,\"name\":\"master\"},\"timestamp\":1686896311628}]]}","39f50151d3dfa4e031da36ff2402f790/metadata/vscode-vfs://github/ssloy/tinyrenderer":"{\"schemaVersion\":1,\"revision\":\"6d3acdb9ee452449b528ef3900ef5528dad0f807\"}","b783b633f114886aedd27692b44ce0f4/metadata/vscode-vfs://github%2B7b2276223a312c22726566223a7b2274797065223a362c226964223a226d6173746572227d7d/ggu/3DAssetsToSprite":"{\"schemaVersion\":1,\"revision\":\"8bd62453127eb07df9a6a4564a3679697931e43d\"}"}'
kaiyi.qwerty-learner: '{"readOnlyMode":false,"order":9,"chapter":1}'
leodevbro.blockman: '{"blockman_data_iicounter":"1","blockman_data_iicounter2":"1","blockman_data_iicounter3":"1","blockman_data_atInstallEventUserAcceptedToChangeVSCodeSettings":"true"}'
ms-dotnettools.vscode-dotnet-runtime: "{\"releases\":\"{\\r\\n    \\\"$schema\\\
  \":
  \\\"https://json.schemastore.org/dotnet-releases-index.json\\\",\\r\\n    \\\
  \"releases-index\\\": [\\r\\n      {\\r\\n            \\\"channel-version\\\":
  \\\"8.0\\\",\\r\\n            \\\"latest-release\\\":
  \\\"8.0.0-preview.7\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2023-08-08\\\",\\r\\n            \\\"security\\\":
  false,\\r\\n            \\\"latest-runtime\\\":
  \\\"8.0.0-preview.7.23375.6\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"8.0.100-preview.7.23376.3\\\",\\r\\n            \\\"product\\\":
  \\\".NET\\\",\\r\\n            \\\"release-type\\\" :
  \\\"lts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"preview\\\",\\r\\n            \\\"eol-date\\\":
  null,\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/8.0/relea\
  ses.json\\\"\\r\\n        },\\r\\n          {\\r\\n            \\\"channel-ve\
  rsion\\\": \\\"7.0\\\",\\r\\n            \\\"latest-release\\\":
  \\\"7.0.10\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2023-08-08\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"7.0.10\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"7.0.400\\\",\\r\\n            \\\"product\\\":
  \\\".NET\\\",\\r\\n            \\\"release-type\\\" :
  \\\"sts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"active\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2024-05-24\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/7.0/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"6.0\\\",\\r\\n            \\\"latest-release\\\":
  \\\"6.0.21\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2023-08-08\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"6.0.21\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"6.0.413\\\",\\r\\n            \\\"product\\\":
  \\\".NET\\\",\\r\\n            \\\"release-type\\\" :
  \\\"lts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"active\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2024-11-12\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/6.0/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"5.0\\\",\\r\\n            \\\"latest-release\\\":
  \\\"5.0.17\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2022-05-10\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"5.0.17\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"5.0.408\\\",\\r\\n            \\\"product\\\":
  \\\".NET\\\",\\r\\n            \\\"release-type\\\" :
  \\\"sts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":\\\"2022-05-10\\\",\\r\\n            \
  \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/5.0/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"3.1\\\",\\r\\n            \\\"latest-release\\\":
  \\\"3.1.32\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2022-12-13\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"3.1.32\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"3.1.426\\\",\\r\\n            \\\"product\\\": \\\".NET
  Core\\\",\\r\\n            \\\"release-type\\\" :
  \\\"lts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2022-12-13\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/3.1/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"3.0\\\",\\r\\n            \\\"latest-release\\\":
  \\\"3.0.3\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2020-02-18\\\",\\r\\n            \\\"security\\\":
  false,\\r\\n            \\\"latest-runtime\\\":
  \\\"3.0.3\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"3.0.103\\\",\\r\\n            \\\"product\\\": \\\".NET
  Core\\\",\\r\\n            \\\"release-type\\\" :
  \\\"sts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2020-03-03\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/3.0/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"2.1\\\",\\r\\n            \\\"latest-release\\\":
  \\\"2.1.30\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2021-08-19\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"2.1.30\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"2.1.818\\\",\\r\\n            \\\"product\\\": \\\".NET
  Core\\\",\\r\\n            \\\"release-type\\\" :
  \\\"lts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2021-08-21\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.1/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"2.2\\\",\\r\\n            \\\"latest-release\\\":
  \\\"2.2.8\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2019-11-19\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"2.2.8\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"2.2.207\\\",\\r\\n            \\\"product\\\": \\\".NET
  Core\\\",\\r\\n            \\\"release-type\\\" :
  \\\"sts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2019-12-23\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/relea\
  ses.json\\\"\\r\\n          },\\r\\n        {\\r\\n            \\\"channel-ve\
  rsion\\\": \\\"2.0\\\",\\r\\n            \\\"latest-release\\\":
  \\\"2.0.9\\\",\\r\\n            \\\"latest-release-date\\\":\\\"2018-07-10\\\
  \",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"2.0.9\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"2.1.202\\\",\\r\\n            \\\"product\\\": \\\".NET
  Core\\\",\\r\\n            \\\"release-type\\\" :
  \\\"sts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2018-10-01\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.0/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"1.1\\\",\\r\\n            \\\"latest-release\\\":
  \\\"1.1.13\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2019-05-14\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"1.1.13\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"1.1.14\\\",\\r\\n            \\\"product\\\": \\\".NET
  Core\\\",\\r\\n            \\\"release-type\\\" :
  \\\"lts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2019-06-27\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/1.1/relea\
  ses.json\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"channel-vers\
  ion\\\": \\\"1.0\\\",\\r\\n            \\\"latest-release\\\":
  \\\"1.0.16\\\",\\r\\n            \\\"latest-release-date\\\":
  \\\"2019-05-14\\\",\\r\\n            \\\"security\\\":
  true,\\r\\n            \\\"latest-runtime\\\":
  \\\"1.0.16\\\",\\r\\n            \\\"latest-sdk\\\":
  \\\"1.1.14\\\",\\r\\n            \\\"product\\\": \\\".NET
  Core\\\",\\r\\n            \\\"release-type\\\" :
  \\\"lts\\\",\\r\\n            \\\"support-phase\\\":
  \\\"eol\\\",\\r\\n            \\\"eol-date\\\":
  \\\"2019-06-27\\\",\\r\\n            \\\"releases.json\\\":
  \\\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/1.0/relea\
  ses.json\\\"\\r\\n        }\\r\\n    ]\\r\\n}\\r\\n\",\"installing\":[],\"dot\
  net-installps1\":\"#\\r\\n# Copyright (c) .NET Foundation and contributors.
  All rights reserved.\\r\\n# Licensed under the MIT license. See LICENSE file
  in the project root for full license
  information.\\r\\n#\\r\\n\\r\\n<#\\r\\n.SYNOPSIS\\r\\n    Installs dotnet
  cli\\r\\n.DESCRIPTION\\r\\n    Installs dotnet cli. If dotnet installation
  already exists in the given directory\\r\\n    it will update it only if the
  requested version differs from the one already installed.\\r\\n\\r\\n    Note
  that the intended use of this script is for Continuous Integration (CI)
  scenarios, where:\\r\\n    - The SDK needs to be installed without user
  interaction and without admin rights.\\r\\n    - The SDK installation doesn't
  need to persist across multiple CI runs.\\r\\n    To set up a development
  environment or to run apps, use installers rather than this script. Visit
  https://dotnet.microsoft.com/download to get the
  installer.\\r\\n\\r\\n.PARAMETER Channel\\r\\n    Default:
  LTS\\r\\n    Download from the Channel specified. Possible values:\\r\\n    -
  STS - the most recent Standard Term Support release\\r\\n    - LTS - the most
  recent Long Term Support release\\r\\n    - 2-part version in a format A.B -
  represents a specific release\\r\\n          examples: 2.0, 1.0\\r\\n    -
  3-part version in a format A.B.Cxx - represents a specific SDK
  release\\r\\n          examples: 5.0.1xx, 5.0.2xx\\r\\n          Supported
  since 5.0 release\\r\\n    Warning: Value \\\"Current\\\" is deprecated for
  the Channel parameter. Use \\\"STS\\\" instead.\\r\\n    Note: The version
  parameter overrides the channel parameter when any version other than 'latest'
  is used.\\r\\n.PARAMETER Quality\\r\\n    Download the latest build of
  specified quality in the channel. The possible values are: daily, signed,
  validated, preview, GA.\\r\\n    Works only in combination with channel. Not
  applicable for STS and LTS channels and will be ignored if those channels are
  used. \\r\\n    For SDK use channel in A.B.Cxx format: using quality together
  with channel in A.B format is not supported.\\r\\n    Supported since 5.0
  release.\\r\\n    Note: The version parameter overrides the channel parameter
  when any version other than 'latest' is used, and therefore overrides the
  quality.     \\r\\n.PARAMETER Version\\r\\n    Default:
  latest\\r\\n    Represents a build version on specific channel. Possible
  values:\\r\\n    - latest - the latest build on specific channel\\r\\n    -
  3-part version in a format A.B.C - represents specific version of
  build\\r\\n          examples: 2.0.0-preview2-006120, 1.1.0\\r\\n.PARAMETER
  Internal\\r\\n    Download internal builds. Requires providing credentials via
  -FeedCredential parameter.\\r\\n.PARAMETER FeedCredential\\r\\n    Token to
  access Azure feed. Used as a query string to append to the Azure
  feed.\\r\\n    This parameter typically is not specified.\\r\\n.PARAMETER
  InstallDir\\r\\n    Default:
  %LocalAppData%\\\\Microsoft\\\\dotnet\\r\\n    Path to where to install
  dotnet. Note that binaries will be placed directly in a given
  directory.\\r\\n.PARAMETER Architecture\\r\\n    Default: <auto> - this value
  represents currently running OS architecture\\r\\n    Architecture of dotnet
  binaries to be installed.\\r\\n    Possible values are: <auto>, amd64, x64,
  x86, arm64, arm\\r\\n.PARAMETER SharedRuntime\\r\\n    This parameter is
  obsolete and may be removed in a future version of this script.\\r\\n    The
  recommended alternative is '-Runtime dotnet'.\\r\\n    Installs just the
  shared runtime bits, not the entire SDK.\\r\\n.PARAMETER
  Runtime\\r\\n    Installs just a shared runtime, not the entire
  SDK.\\r\\n    Possible values:\\r\\n        - dotnet     - the
  Microsoft.NETCore.App shared runtime\\r\\n        - aspnetcore - the
  Microsoft.AspNetCore.App shared runtime\\r\\n        - windowsdesktop - the
  Microsoft.WindowsDesktop.App shared runtime\\r\\n.PARAMETER DryRun\\r\\n    If
  set it will not perform installation but instead display what command line to
  use to consistently install\\r\\n    currently requested version of dotnet
  cli. In example if you specify version 'latest' it will display a
  link\\r\\n    with specific version so that this command can be used
  deterministicly in a build script.\\r\\n    It also displays binaries location
  if you prefer to install or download it yourself.\\r\\n.PARAMETER
  NoPath\\r\\n    By default this script will set environment variable PATH for
  the current process to the binaries folder inside installation
  folder.\\r\\n    If set it will display binaries location but not set any
  environment variable.\\r\\n.PARAMETER Verbose\\r\\n    Displays diagnostics
  information.\\r\\n.PARAMETER AzureFeed\\r\\n    Default:
  https://dotnetcli.azureedge.net/dotnet\\r\\n    For internal use
  only.\\r\\n    Allows using a different storage to download SDK archives
  from.\\r\\n    This parameter is only used if $NoCdn is false.\\r\\n.PARAMETER
  UncachedFeed\\r\\n    For internal use only.\\r\\n    Allows using a different
  storage to download SDK archives from.\\r\\n    This parameter is only used if
  $NoCdn is true.\\r\\n.PARAMETER ProxyAddress\\r\\n    If set, the installer
  will use the proxy when making web requests\\r\\n.PARAMETER
  ProxyUseDefaultCredentials\\r\\n    Default: false\\r\\n    Use default
  credentials, when using proxy address.\\r\\n.PARAMETER
  ProxyBypassList\\r\\n    If set with ProxyAddress, will provide the list of
  comma separated urls that will bypass the proxy\\r\\n.PARAMETER
  SkipNonVersionedFiles\\r\\n    Default: false\\r\\n    Skips installing
  non-versioned files if they already exist, such as dotnet.exe.\\r\\n.PARAMETER
  NoCdn\\r\\n    Disable downloading from the Azure CDN, and use the uncached
  feed directly.\\r\\n.PARAMETER JSonFile\\r\\n    Determines the SDK version
  from a user specified global.json file\\r\\n    Note: global.json must have a
  value for 'SDK:Version'\\r\\n.PARAMETER DownloadTimeout\\r\\n    Determines
  timeout duration in seconds for dowloading of the SDK file\\r\\n    Default:
  1200 seconds (20
  minutes)\\r\\n#>\\r\\n[cmdletbinding()]\\r\\nparam(\\r\\n   [string]$Channel=\
  \\\"LTS\\\",\\r\\n   [string]$Quality,\\r\\n   [string]$Version=\\\"Latest\\\
  \",\\r\\n   [switch]$Internal,\\r\\n   [string]$JSonFile,\\r\\n   [Alias('i')\
  ][string]$InstallDir=\\\"<auto>\\\",\\r\\n   [string]$Architecture=\\\"<auto>\
  \\\",\\r\\n   [string]$Runtime,\\r\\n   [Obsolete(\\\"This parameter may be
  removed in a future version of this script. The recommended alternative is
  '-Runtime
  dotnet'.\\\")]\\r\\n   [switch]$SharedRuntime,\\r\\n   [switch]$DryRun,\\r\\n   \
  [switch]$NoPath,\\r\\n   [string]$AzureFeed,\\r\\n   [string]$UncachedFeed,\\r\
  \\n   [string]$FeedCredential,\\r\\n   [string]$ProxyAddress,\\r\\n   [switch\
  ]$ProxyUseDefaultCredentials,\\r\\n   [string[]]$ProxyBypassList=@(),\\r\\n   \
  [switch]$SkipNonVersionedFiles,\\r\\n   [switch]$NoCdn,\\r\\n   [int]$Downloa\
  dTimeout=1200\\r\\n)\\r\\n\\r\\nSet-StrictMode -Version
  Latest\\r\\n$ErrorActionPreference=\\\"Stop\\\"\\r\\n$ProgressPreference=\\\"\
  SilentlyContinue\\\"\\r\\n\\r\\nfunction Say($str) {\\r\\n    try
  {\\r\\n        Write-Host \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n    catch {\\r\\n        # Some platforms cannot
  utilize Write-Host (Azure Functions, for instance). Fall back to
  Write-Output\\r\\n        Write-Output \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction Say-Warning($str)
  {\\r\\n    try {\\r\\n        Write-Warning \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n    catch {\\r\\n        # Some platforms cannot
  utilize Write-Warning (Azure Functions, for instance). Fall back to
  Write-Output\\r\\n        Write-Output \\\"dotnet-install: Warning:
  $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\n# Writes a line with error style
  settings.\\r\\n# Use this function to show a human-readable comment along with
  an exception.\\r\\nfunction Say-Error($str) {\\r\\n    try {\\r\\n        #
  Write-Error is quite oververbose for the purpose of the function, let's write
  one line with error style
  settings.\\r\\n        $Host.UI.WriteErrorLine(\\\"dotnet-install:
  $str\\\")\\r\\n    }\\r\\n    catch {\\r\\n        Write-Output
  \\\"dotnet-install: Error: $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Say-Verbose($str) {\\r\\n    try {\\r\\n        Write-Verbose
  \\\"dotnet-install: $str\\\"\\r\\n    }\\r\\n    catch {\\r\\n        # Some
  platforms cannot utilize Write-Verbose (Azure Functions, for instance). Fall
  back to Write-Output\\r\\n        Write-Output \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction Measure-Action($name, $block)
  {\\r\\n    $time = Measure-Command $block\\r\\n    $totalSeconds =
  $time.TotalSeconds\\r\\n    Say-Verbose \\\"⏱ Action '$name' took
  $totalSeconds seconds\\\"\\r\\n}\\r\\n\\r\\nfunction
  Say-Invocation($Invocation) {\\r\\n    $command =
  $Invocation.MyCommand;\\r\\n    $args = (($Invocation.BoundParameters.Keys |
  foreach { \\\"-$_ `\\\"$($Invocation.BoundParameters[$_])`\\\"\\\" }) -join
  \\\" \\\")\\r\\n    Say-Verbose \\\"$command
  $args\\\"\\r\\n}\\r\\n\\r\\nfunction
  Invoke-With-Retry([ScriptBlock]$ScriptBlock,
  [System.Threading.CancellationToken]$cancellationToken =
  [System.Threading.CancellationToken]::None, [int]$MaxAttempts = 3,
  [int]$SecondsBetweenAttempts = 1) {\\r\\n    $Attempts =
  0\\r\\n    $local:startTime = $(get-date)\\r\\n\\r\\n    while ($true)
  {\\r\\n        try {\\r\\n            return &
  $ScriptBlock\\r\\n        }\\r\\n        catch
  {\\r\\n            $Attempts++\\r\\n            if (($Attempts -lt
  $MaxAttempts) -and -not $cancellationToken.IsCancellationRequested)
  {\\r\\n                Start-Sleep
  $SecondsBetweenAttempts\\r\\n            }\\r\\n            else
  {\\r\\n                $local:elapsedTime = $(get-date) -
  $local:startTime\\r\\n                if (($local:elapsedTime.TotalSeconds -
  $DownloadTimeout) -gt 0 -and -not $cancellationToken.IsCancellationRequested)
  {\\r\\n                    throw New-Object System.TimeoutException(\\\"Failed
  to reach the server: connection timeout: default timeout is $DownloadTimeout
  second(s)\\\");\\r\\n                }\\r\\n                throw;\\r\\n            \
  }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-Machine-Architecture() {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    # On PS x86, PROCESSOR_ARCHITECTURE reports x86
  even on x64 systems.\\r\\n    # To get the correct architecture, we need to
  use PROCESSOR_ARCHITEW6432.\\r\\n    # PS x64 doesn't define this, so we fall
  back to PROCESSOR_ARCHITECTURE.\\r\\n    # Possible values: amd64, x64, x86,
  arm64, arm\\r\\n    if( $ENV:PROCESSOR_ARCHITEW6432 -ne $null )
  {\\r\\n        return
  $ENV:PROCESSOR_ARCHITEW6432\\r\\n    }\\r\\n\\r\\n    try
  {        \\r\\n        if( ((Get-CimInstance -ClassName
  CIM_OperatingSystem).OSArchitecture) -like \\\"ARM*\\\")
  {\\r\\n            if( [Environment]::Is64BitOperatingSystem
  )\\r\\n            {\\r\\n                return
  \\\"arm64\\\"\\r\\n            }  \\r\\n            return
  \\\"arm\\\"\\r\\n        }\\r\\n    }\\r\\n    catch {\\r\\n        # Machine
  doesn't support Get-CimInstance\\r\\n    }\\r\\n\\r\\n    return
  $ENV:PROCESSOR_ARCHITECTURE\\r\\n}\\r\\n\\r\\nfunction
  Get-CLIArchitecture-From-Architecture([string]$Architecture)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    if ($Architecture -eq
  \\\"<auto>\\\") {\\r\\n        $Architecture =
  Get-Machine-Architecture\\r\\n    }\\r\\n\\r\\n    switch
  ($Architecture.ToLowerInvariant()) {\\r\\n        { ($_ -eq \\\"amd64\\\") -or
  ($_ -eq \\\"x64\\\") } { return \\\"x64\\\" }\\r\\n        { $_ -eq
  \\\"x86\\\" } { return \\\"x86\\\" }\\r\\n        { $_ -eq \\\"arm\\\" } {
  return \\\"arm\\\" }\\r\\n        { $_ -eq \\\"arm64\\\" } { return
  \\\"arm64\\\" }\\r\\n        default { throw \\\"Architecture '$Architecture'
  not supported. If you think this is a bug, report it at
  https://github.com/dotnet/install-scripts/issues\\\"
  }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction ValidateFeedCredential([string]
  $FeedCredential)\\r\\n{\\r\\n    if ($Internal -and
  [string]::IsNullOrWhitespace($FeedCredential)) {\\r\\n        $message =
  \\\"Provide credentials via -FeedCredential parameter.\\\"\\r\\n        if
  ($DryRun) {\\r\\n            Say-Warning \\\"$message\\\"\\r\\n        } else
  {\\r\\n            throw
  \\\"$message\\\"\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    #FeedCredential
  should start with \\\"?\\\", for it to be added to the end of the
  link.\\r\\n    #adding \\\"?\\\" at the beginning of the FeedCredential if
  needed.\\r\\n    if ((![string]::IsNullOrWhitespace($FeedCredential)) -and
  ($FeedCredential[0] -ne '?')) {\\r\\n        $FeedCredential = \\\"?\\\" +
  $FeedCredential\\r\\n    }\\r\\n\\r\\n    return
  $FeedCredential\\r\\n}\\r\\nfunction Get-NormalizedQuality([string]$Quality)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    if
  ([string]::IsNullOrEmpty($Quality)) {\\r\\n        return
  \\\"\\\"\\r\\n    }\\r\\n\\r\\n    switch ($Quality) {\\r\\n        {
  @(\\\"daily\\\", \\\"signed\\\", \\\"validated\\\", \\\"preview\\\") -contains
  $_ } { return $Quality.ToLowerInvariant() }\\r\\n        #ga quality is
  available without specifying quality, so normalizing it to
  empty\\r\\n        { $_ -eq \\\"ga\\\" } { return \\\"\\\"
  }\\r\\n        default { throw \\\"'$Quality' is not a supported value for
  -Quality option. Supported values are: daily, signed, validated, preview, ga.
  If you think this is a bug, report it at
  https://github.com/dotnet/install-scripts/issues.\\\"
  }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-NormalizedChannel([string]$Channel) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if ([string]::IsNullOrEmpty($Channel))
  {\\r\\n        return \\\"\\\"\\r\\n    }\\r\\n\\r\\n    if
  ($Channel.Contains(\\\"Current\\\")) {\\r\\n        Say-Warning 'Value
  \\\"Current\\\" is deprecated for -Channel option. Use \\\"STS\\\"
  instead.'\\r\\n    }\\r\\n\\r\\n    if ($Channel.StartsWith('release/'))
  {\\r\\n        Say-Warning 'Using branch name with -Channel option is no
  longer supported with newer releases. Use -Quality option with a channel in
  X.Y format instead, such as \\\"-Channel 5.0 -Quality
  Daily.\\\"'\\r\\n    }\\r\\n\\r\\n    switch ($Channel) {\\r\\n        { $_
  -eq \\\"lts\\\" } { return \\\"LTS\\\" }\\r\\n        { $_ -eq \\\"sts\\\" } {
  return \\\"STS\\\" }\\r\\n        { $_ -eq \\\"current\\\" } { return
  \\\"STS\\\" }\\r\\n        default { return $Channel.ToLowerInvariant()
  }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-NormalizedProduct([string]$Runtime) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    switch ($Runtime) {\\r\\n        { $_ -eq
  \\\"dotnet\\\" } { return \\\"dotnet-runtime\\\" }\\r\\n        { $_ -eq
  \\\"aspnetcore\\\" } { return \\\"aspnetcore-runtime\\\" }\\r\\n        { $_
  -eq \\\"windowsdesktop\\\" } { return \\\"windowsdesktop-runtime\\\"
  }\\r\\n        { [string]::IsNullOrEmpty($_) } { return \\\"dotnet-sdk\\\"
  }\\r\\n        default { throw \\\"'$Runtime' is not a supported value for
  -Runtime option, supported values are: dotnet, aspnetcore, windowsdesktop. If
  you think this is a bug, report it at
  https://github.com/dotnet/install-scripts/issues.\\\"
  }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n# The version text returned from the
  feeds is a 1-line or 2-line string:\\r\\n# For the SDK and the dotnet runtime
  (2 lines):\\r\\n# Line 1: # commit_hash\\r\\n# Line 2: # 4-part version\\r\\n#
  For the aspnetcore runtime (1 line):\\r\\n# Line 1: # 4-part
  version\\r\\nfunction
  Get-Version-From-LatestVersion-File-Content([string]$VersionText)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    $Data = -split
  $VersionText\\r\\n\\r\\n    $VersionInfo = @{\\r\\n        CommitHash = $(if
  ($Data.Count -gt 1) { $Data[0] })\\r\\n        Version = $Data[-1] # last line
  is always the version number.\\r\\n    }\\r\\n    return
  $VersionInfo\\r\\n}\\r\\n\\r\\nfunction Load-Assembly([string] $Assembly)
  {\\r\\n    try {\\r\\n        Add-Type -Assembly $Assembly |
  Out-Null\\r\\n    }\\r\\n    catch {\\r\\n        # On Nano Server, Powershell
  Core Edition is used.  Add-Type is unable to resolve base class assemblies
  because they are not GAC'd.\\r\\n        # Loading the base class assemblies
  is not unnecessary as the types will automatically get
  resolved.\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction GetHTTPResponse([Uri] $Uri,
  [bool]$HeaderOnly, [bool]$DisableRedirect,
  [bool]$DisableFeedCredential)\\r\\n{\\r\\n    $cts = New-Object
  System.Threading.CancellationTokenSource\\r\\n\\r\\n    $downloadScript =
  {\\r\\n\\r\\n        $HttpClient = $null\\r\\n\\r\\n        try
  {\\r\\n            # HttpClient is used vs Invoke-WebRequest in order to
  support Nano Server which doesn't support the Invoke-WebRequest
  cmdlet.\\r\\n            Load-Assembly -Assembly
  System.Net.Http\\r\\n\\r\\n            if(-not $ProxyAddress)
  {\\r\\n                try {\\r\\n                    # Despite no proxy being
  explicitly specified, we may still be behind a default
  proxy\\r\\n                    $DefaultProxy =
  [System.Net.WebRequest]::DefaultWebProxy;\\r\\n                    if($Defaul\
  tProxy -and (-not $DefaultProxy.IsBypassed($Uri)))
  {\\r\\n                        if ($null -ne $DefaultProxy.GetProxy($Uri))
  {\\r\\n                            $ProxyAddress =
  $DefaultProxy.GetProxy($Uri).OriginalString\\r\\n                        }
  else {\\r\\n                            $ProxyAddress =
  $null\\r\\n                        }\\r\\n                        $ProxyUseDe\
  faultCredentials = $true\\r\\n                    }\\r\\n                }
  catch {\\r\\n                    # Eat the exception and move forward as the
  above code is an attempt\\r\\n                    #    at resolving the
  DefaultProxy that may not have been a
  problem.\\r\\n                    $ProxyAddress =
  $null\\r\\n                    Say-Verbose(\\\"Exception ignored:
  $_.Exception.Message - moving
  forward...\\\")\\r\\n                }\\r\\n            }\\r\\n\\r\\n            \
  $HttpClientHandler = New-Object
  System.Net.Http.HttpClientHandler\\r\\n            if($ProxyAddress)
  {\\r\\n                $HttpClientHandler.Proxy =  New-Object
  System.Net.WebProxy -Property
  @{\\r\\n                    Address=$ProxyAddress;\\r\\n                    U\
  seDefaultCredentials=$ProxyUseDefaultCredentials;\\r\\n                    By\
  passList =
  $ProxyBypassList;\\r\\n                }\\r\\n            }       \\r\\n            \
  if
  ($DisableRedirect)\\r\\n            {\\r\\n                $HttpClientHandler\
  .AllowAutoRedirect = $false\\r\\n            }\\r\\n            $HttpClient =
  New-Object System.Net.Http.HttpClient -ArgumentList
  $HttpClientHandler\\r\\n\\r\\n            # Default timeout for HttpClient is
  100s.  For a 50 MB download this assumes 500 KB/s average, any less will time
  out\\r\\n            # Defaulting to 20 minutes allows it to work over much
  slower connections.\\r\\n            $HttpClient.Timeout = New-TimeSpan
  -Seconds $DownloadTimeout\\r\\n\\r\\n            if
  ($HeaderOnly){\\r\\n                $completionOption =
  [System.Net.Http.HttpCompletionOption]::ResponseHeadersRead\\r\\n            }\
  \\r\\n            else {\\r\\n                $completionOption =
  [System.Net.Http.HttpCompletionOption]::ResponseContentRead\\r\\n            }\
  \\r\\n\\r\\n            if ($DisableFeedCredential)
  {\\r\\n                $UriWithCredential =
  $Uri\\r\\n            }\\r\\n            else
  {\\r\\n                $UriWithCredential =
  \\\"${Uri}${FeedCredential}\\\"\\r\\n            }\\r\\n\\r\\n            $Ta\
  sk = $HttpClient.GetAsync(\\\"$UriWithCredential\\\",
  $completionOption).ConfigureAwait(\\\"false\\\");\\r\\n            $Response =
  $Task.GetAwaiter().GetResult();\\r\\n\\r\\n            if (($null -eq
  $Response) -or ((-not $HeaderOnly) -and (-not
  ($Response.IsSuccessStatusCode)))) {\\r\\n                # The feed
  credential is potentially sensitive info. Do not log FeedCredential to console
  output.\\r\\n                $DownloadException = [System.Exception]
  \\\"Unable to download $Uri.\\\"\\r\\n\\r\\n                if ($null -ne
  $Response)
  {\\r\\n                    $DownloadException.Data[\\\"StatusCode\\\"] = [int]
  $Response.StatusCode\\r\\n                    $DownloadException.Data[\\\"Err\
  orMessage\\\"] = \\\"Unable to download $Uri. Returned HTTP status code: \\\"
  +
  $DownloadException.Data[\\\"StatusCode\\\"]\\r\\n\\r\\n                    if
  (404 -eq [int]
  $Response.StatusCode)\\r\\n                    {\\r\\n                        \
  $cts.Cancel()\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                \
  throw $DownloadException\\r\\n            }\\r\\n\\r\\n            return
  $Response\\r\\n        }\\r\\n        catch
  [System.Net.Http.HttpRequestException] {\\r\\n            $DownloadException =
  [System.Exception] \\\"Unable to download $Uri.\\\"\\r\\n\\r\\n            #
  Pick up the exception message and inner exceptions' messages if they
  exist\\r\\n            $CurrentException =
  $PSItem.Exception\\r\\n            $ErrorMsg = $CurrentException.Message +
  \\\"`r`n\\\"\\r\\n            while ($CurrentException.InnerException)
  {\\r\\n              $CurrentException =
  $CurrentException.InnerException\\r\\n              $ErrorMsg +=
  $CurrentException.Message +
  \\\"`r`n\\\"\\r\\n            }\\r\\n\\r\\n            # Check if there is an
  issue concerning TLS.\\r\\n            if ($ErrorMsg -like \\\"*SSL/TLS*\\\")
  {\\r\\n                $ErrorMsg += \\\"Ensure that TLS 1.2 or higher is
  enabled to use this
  script.`r`n\\\"\\r\\n            }\\r\\n\\r\\n            $DownloadException.\
  Data[\\\"ErrorMessage\\\"] = $ErrorMsg\\r\\n            throw
  $DownloadException\\r\\n        }\\r\\n        finally {\\r\\n             if
  ($null -ne $HttpClient)
  {\\r\\n                $HttpClient.Dispose()\\r\\n            }\\r\\n        }\
  \\r\\n    }\\r\\n\\r\\n    try {\\r\\n        return Invoke-With-Retry
  $downloadScript
  $cts.Token\\r\\n    }\\r\\n    finally\\r\\n    {\\r\\n        if ($null -ne
  $cts)\\r\\n        {\\r\\n            $cts.Dispose()\\r\\n        }\\r\\n    }\
  \\r\\n}\\r\\n\\r\\nfunction
  Get-Version-From-LatestVersion-File([string]$AzureFeed, [string]$Channel)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    $VersionFileUrl =
  $null\\r\\n    if ($Runtime -eq \\\"dotnet\\\") {\\r\\n        $VersionFileUrl
  =
  \\\"$AzureFeed/Runtime/$Channel/latest.version\\\"\\r\\n    }\\r\\n    elseif
  ($Runtime -eq \\\"aspnetcore\\\") {\\r\\n        $VersionFileUrl =
  \\\"$AzureFeed/aspnetcore/Runtime/$Channel/latest.version\\\"\\r\\n    }\\r\\\
  n    elseif ($Runtime -eq \\\"windowsdesktop\\\")
  {\\r\\n        $VersionFileUrl =
  \\\"$AzureFeed/WindowsDesktop/$Channel/latest.version\\\"\\r\\n    }\\r\\n    \
  elseif (-not $Runtime) {\\r\\n        $VersionFileUrl =
  \\\"$AzureFeed/Sdk/$Channel/latest.version\\\"\\r\\n    }\\r\\n    else
  {\\r\\n        throw \\\"Invalid value for
  `$Runtime\\\"\\r\\n    }\\r\\n\\r\\n    Say-Verbose \\\"Constructed
  latest.version URL: $VersionFileUrl\\\"\\r\\n\\r\\n    try
  {\\r\\n        $Response = GetHTTPResponse -Uri
  $VersionFileUrl\\r\\n    }\\r\\n    catch {\\r\\n        Say-Verbose
  \\\"Failed to download latest.version
  file.\\\"\\r\\n        throw\\r\\n    }\\r\\n    $StringContent =
  $Response.Content.ReadAsStringAsync().Result\\r\\n\\r\\n    switch
  ($Response.Content.Headers.ContentType) {\\r\\n        { ($_ -eq
  \\\"application/octet-stream\\\") } { $VersionText = $StringContent
  }\\r\\n        { ($_ -eq \\\"text/plain\\\") } { $VersionText = $StringContent
  }\\r\\n        { ($_ -eq \\\"text/plain; charset=UTF-8\\\") } { $VersionText =
  $StringContent }\\r\\n        default { throw
  \\\"``$Response.Content.Headers.ContentType`` is an unknown .version file
  content type.\\\" }\\r\\n    }\\r\\n\\r\\n    $VersionInfo =
  Get-Version-From-LatestVersion-File-Content $VersionText\\r\\n\\r\\n    return
  $VersionInfo\\r\\n}\\r\\n\\r\\nfunction
  Parse-Jsonfile-For-Version([string]$JSonFile) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    If (-Not (Test-Path $JSonFile))
  {\\r\\n        throw \\\"Unable to find
  '$JSonFile'\\\"\\r\\n    }\\r\\n    try {\\r\\n        $JSonContent =
  Get-Content($JSonFile) -Raw | ConvertFrom-Json | Select-Object -expand
  \\\"sdk\\\" -ErrorAction SilentlyContinue\\r\\n    }\\r\\n    catch
  {\\r\\n        Say-Error \\\"Json file unreadable:
  '$JSonFile'\\\"\\r\\n        throw\\r\\n    }\\r\\n    if ($JSonContent)
  {\\r\\n        try {\\r\\n            $JSonContent.PSObject.Properties |
  ForEach-Object {\\r\\n                $PropertyName =
  $_.Name\\r\\n                if ($PropertyName -eq \\\"version\\\")
  {\\r\\n                    $Version =
  $_.Value\\r\\n                    Say-Verbose \\\"Version =
  $Version\\\"\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        \
  catch {\\r\\n            Say-Error \\\"Unable to parse the SDK node in
  '$JSonFile'\\\"\\r\\n            throw\\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        throw \\\"Unable to find the SDK node in
  '$JSonFile'\\\"\\r\\n    }\\r\\n    If ($Version -eq $null)
  {\\r\\n        throw \\\"Unable to find the SDK:version node in
  '$JSonFile'\\\"\\r\\n    }\\r\\n    return $Version\\r\\n}\\r\\n\\r\\nfunction
  Get-Specific-Version-From-Version([string]$AzureFeed, [string]$Channel,
  [string]$Version, [string]$JSonFile) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if (-not $JSonFile) {\\r\\n        if
  ($Version.ToLowerInvariant() -eq \\\"latest\\\")
  {\\r\\n            $LatestVersionInfo = Get-Version-From-LatestVersion-File
  -AzureFeed $AzureFeed -Channel $Channel\\r\\n            return
  $LatestVersionInfo.Version\\r\\n        }\\r\\n        else
  {\\r\\n            return $Version \\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        return Parse-Jsonfile-For-Version
  $JSonFile\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-Download-Link([string]$AzureFeed, [string]$SpecificVersion,
  [string]$CLIArchitecture) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    # If anything fails in this lookup it will
  default to $SpecificVersion\\r\\n    $SpecificProductVersion =
  Get-Product-Version -AzureFeed $AzureFeed -SpecificVersion
  $SpecificVersion\\r\\n\\r\\n    if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/dotnet-runtime-$SpecificProductVersio\
  n-win-$CLIArchitecture.zip\\\"\\r\\n    }\\r\\n    elseif ($Runtime -eq
  \\\"aspnetcore\\\") {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/aspnetcore/Runtime/$SpecificVersion/aspnetcore-runtime-$Specif\
  icProductVersion-win-$CLIArchitecture.zip\\\"\\r\\n    }\\r\\n    elseif
  ($Runtime -eq \\\"windowsdesktop\\\") {\\r\\n        # The windows desktop
  runtime is part of the core runtime layout prior to
  5.0\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/windowsdesktop-runtime-$SpecificProdu\
  ctVersion-win-$CLIArchitecture.zip\\\"\\r\\n        if ($SpecificVersion
  -match '^(\\\\d+)\\\\.(.*)$')\\r\\n        {\\r\\n            $majorVersion =
  [int]$Matches[1]\\r\\n            if ($majorVersion -ge
  5)\\r\\n            {\\r\\n                $PayloadURL =
  \\\"$AzureFeed/WindowsDesktop/$SpecificVersion/windowsdesktop-runtime-$Specif\
  icProductVersion-win-$CLIArchitecture.zip\\\"\\r\\n            }\\r\\n        \
  }\\r\\n    }\\r\\n    elseif (-not $Runtime) {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Sdk/$SpecificVersion/dotnet-sdk-$SpecificProductVersion-win-$C\
  LIArchitecture.zip\\\"\\r\\n    }\\r\\n    else {\\r\\n        throw
  \\\"Invalid value for `$Runtime\\\"\\r\\n    }\\r\\n\\r\\n    Say-Verbose
  \\\"Constructed primary named payload URL:
  $PayloadURL\\\"\\r\\n\\r\\n    return $PayloadURL,
  $SpecificProductVersion\\r\\n}\\r\\n\\r\\nfunction
  Get-LegacyDownload-Link([string]$AzureFeed, [string]$SpecificVersion,
  [string]$CLIArchitecture) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if (-not $Runtime) {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Sdk/$SpecificVersion/dotnet-dev-win-$CLIArchitecture.$Specific\
  Version.zip\\\"\\r\\n    }\\r\\n    elseif ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/dotnet-win-$CLIArchitecture.$Specific\
  Version.zip\\\"\\r\\n    }\\r\\n    else {\\r\\n        return
  $null\\r\\n    }\\r\\n\\r\\n    Say-Verbose \\\"Constructed legacy named
  payload URL: $PayloadURL\\\"\\r\\n\\r\\n    return
  $PayloadURL\\r\\n}\\r\\n\\r\\nfunction Get-Product-Version([string]$AzureFeed,
  [string]$SpecificVersion, [string]$PackageDownloadLink)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    # Try to get the
  version number, using the productVersion.txt file located next to the
  installer file.\\r\\n    $ProductVersionTxtURLs = (Get-Product-Version-Url
  $AzureFeed $SpecificVersion $PackageDownloadLink -Flattened
  $true),\\r\\n                             (Get-Product-Version-Url $AzureFeed
  $SpecificVersion $PackageDownloadLink -Flattened
  $false)\\r\\n    \\r\\n    Foreach ($ProductVersionTxtURL in
  $ProductVersionTxtURLs) {\\r\\n        Say-Verbose \\\"Checking for the
  existence of $ProductVersionTxtURL\\\"\\r\\n\\r\\n        try
  {\\r\\n            $productVersionResponse =
  GetHTTPResponse($productVersionTxtUrl)\\r\\n\\r\\n            if
  ($productVersionResponse.StatusCode -eq 200)
  {\\r\\n                $productVersion =
  $productVersionResponse.Content.ReadAsStringAsync().Result.Trim()\\r\\n                \
  if ($productVersion -ne
  $SpecificVersion)\\r\\n                {\\r\\n                    Say
  \\\"Using alternate version $productVersion found in
  $ProductVersionTxtURL\\\"\\r\\n                }\\r\\n                return
  $productVersion\\r\\n            }\\r\\n            else
  {\\r\\n                Say-Verbose \\\"Got StatusCode
  $($productVersionResponse.StatusCode) when trying to get productVersion.txt at
  $productVersionTxtUrl.\\\"\\r\\n            }\\r\\n        }
  \\r\\n        catch {\\r\\n            Say-Verbose \\\"Could not read
  productVersion.txt at $productVersionTxtUrl (Exception:
  '$($_.Exception.Message)'. )\\\"\\r\\n        }\\r\\n    }\\r\\n\\r\\n    #
  Getting the version number with productVersion.txt has failed. Try parsing the
  download link for a version number.\\r\\n    if
  ([string]::IsNullOrEmpty($PackageDownloadLink))\\r\\n    {\\r\\n        Say-V\
  erbose \\\"Using the default value '$SpecificVersion' as the product
  version.\\\"\\r\\n        return
  $SpecificVersion\\r\\n    }\\r\\n\\r\\n    $productVersion =
  Get-ProductVersionFromDownloadLink $PackageDownloadLink
  $SpecificVersion\\r\\n    return $productVersion\\r\\n}\\r\\n\\r\\nfunction
  Get-Product-Version-Url([string]$AzureFeed, [string]$SpecificVersion,
  [string]$PackageDownloadLink, [bool]$Flattened) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    $majorVersion=$null\\r\\n    if ($SpecificVersion
  -match '^(\\\\d+)\\\\.(.*)') {\\r\\n        $majorVersion = $Matches[1]
  -as[int]\\r\\n    }\\r\\n\\r\\n    $pvFileName='productVersion.txt'\\r\\n    \
  if($Flattened) {\\r\\n        if(-not $Runtime)
  {\\r\\n            $pvFileName='sdk-productVersion.txt'\\r\\n        }\\r\\n        \
  elseif($Runtime -eq \\\"dotnet\\\")
  {\\r\\n            $pvFileName='runtime-productVersion.txt'\\r\\n        }\\r\
  \\n        else
  {\\r\\n            $pvFileName=\\\"$Runtime-productVersion.txt\\\"\\r\\n        \
  }\\r\\n    }\\r\\n\\r\\n    if ([string]::IsNullOrEmpty($PackageDownloadLink))
  {\\r\\n        if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/$pvFileName\\\"\\r\\n        }\\r\\n        \
  elseif ($Runtime -eq \\\"aspnetcore\\\")
  {\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/aspnetcore/Runtime/$SpecificVersion/$pvFileName\\\"\\r\\n        \
  }\\r\\n        elseif ($Runtime -eq \\\"windowsdesktop\\\")
  {\\r\\n            # The windows desktop runtime is part of the core runtime
  layout prior to 5.0\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/$pvFileName\\\"\\r\\n            if
  ($majorVersion -ne $null -and $majorVersion -ge 5)
  {\\r\\n                $ProductVersionTxtURL =
  \\\"$AzureFeed/WindowsDesktop/$SpecificVersion/$pvFileName\\\"\\r\\n            \
  }\\r\\n        }\\r\\n        elseif (-not $Runtime)
  {\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/Sdk/$SpecificVersion/$pvFileName\\\"\\r\\n        }\\r\\n        \
  else {\\r\\n            throw \\\"Invalid value '$Runtime' specified for
  `$Runtime\\\"\\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        $ProductVersionTxtURL = $PackageDownloadLink.Substring(0,
  $PackageDownloadLink.LastIndexOf(\\\"/\\\"))  +
  \\\"/$pvFileName\\\"\\r\\n    }\\r\\n\\r\\n    Say-Verbose \\\"Constructed
  productVersion link: $ProductVersionTxtURL\\\"\\r\\n\\r\\n    return
  $ProductVersionTxtURL\\r\\n}\\r\\n\\r\\nfunction
  Get-ProductVersionFromDownloadLink([string]$PackageDownloadLink,
  [string]$SpecificVersion)\\r\\n{\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    #product specific version follows the product
  name\\r\\n    #for filename 'dotnet-sdk-3.1.404-win-x64.zip': the product
  version is 3.1.400\\r\\n    $filename =
  $PackageDownloadLink.Substring($PackageDownloadLink.LastIndexOf(\\\"/\\\") +
  1)\\r\\n    $filenameParts = $filename.Split('-')\\r\\n    if
  ($filenameParts.Length -gt 2)\\r\\n    {\\r\\n        $productVersion =
  $filenameParts[2]\\r\\n        Say-Verbose \\\"Extracted product version
  '$productVersion' from download link
  '$PackageDownloadLink'.\\\"\\r\\n    }\\r\\n    else
  {\\r\\n        Say-Verbose \\\"Using the default value '$SpecificVersion' as
  the product version.\\\"\\r\\n        $productVersion =
  $SpecificVersion\\r\\n    }\\r\\n    return $productVersion
  \\r\\n}\\r\\n\\r\\nfunction Get-User-Share-Path() {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    $InstallRoot =
  $env:DOTNET_INSTALL_DIR\\r\\n    if (!$InstallRoot)
  {\\r\\n        $InstallRoot =
  \\\"$env:LocalAppData\\\\Microsoft\\\\dotnet\\\"\\r\\n    }\\r\\n    return
  $InstallRoot\\r\\n}\\r\\n\\r\\nfunction
  Resolve-Installation-Path([string]$InstallDir) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if ($InstallDir -eq \\\"<auto>\\\")
  {\\r\\n        return Get-User-Share-Path\\r\\n    }\\r\\n    return
  $InstallDir\\r\\n}\\r\\n\\r\\nfunction
  Is-Dotnet-Package-Installed([string]$InstallRoot,
  [string]$RelativePathToPackage, [string]$SpecificVersion)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    $DotnetPackagePath =
  Join-Path -Path $InstallRoot -ChildPath $RelativePathToPackage | Join-Path
  -ChildPath $SpecificVersion\\r\\n    Say-Verbose
  \\\"Is-Dotnet-Package-Installed:
  DotnetPackagePath=$DotnetPackagePath\\\"\\r\\n    return Test-Path
  $DotnetPackagePath -PathType Container\\r\\n}\\r\\n\\r\\nfunction
  Get-Absolute-Path([string]$RelativeOrAbsolutePath) {\\r\\n    # Too much
  spam\\r\\n    # Say-Invocation $MyInvocation\\r\\n\\r\\n    return
  $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($Rela\
  tiveOrAbsolutePath)\\r\\n}\\r\\n\\r\\nfunction
  Get-Path-Prefix-With-Version($path) {\\r\\n    # example path with regex:
  shared/1.0.0-beta-12345/somepath\\r\\n    $match = [regex]::match($path,
  \\\"/\\\\d+\\\\.\\\\d+[^/]+/\\\")\\r\\n    if ($match.Success)
  {\\r\\n        return $entry.FullName.Substring(0, $match.Index +
  $match.Length)\\r\\n    }\\r\\n\\r\\n    return
  $null\\r\\n}\\r\\n\\r\\nfunction
  Get-List-Of-Directories-And-Versions-To-Unpack-From-Dotnet-Package([System.IO\
  .Compression.ZipArchive]$Zip, [string]$OutPath) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    $ret = @()\\r\\n    foreach ($entry in
  $Zip.Entries) {\\r\\n        $dir = Get-Path-Prefix-With-Version
  $entry.FullName\\r\\n        if ($null -ne $dir) {\\r\\n            $path =
  Get-Absolute-Path $(Join-Path -Path $OutPath -ChildPath
  $dir)\\r\\n            if (-Not (Test-Path $path -PathType Container))
  {\\r\\n                $ret +=
  $dir\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    $ret = $ret |
  Sort-Object | Get-Unique\\r\\n\\r\\n    $values = ($ret | foreach { \\\"$_\\\"
  }) -join \\\";\\\"\\r\\n    Say-Verbose \\\"Directories to unpack:
  $values\\\"\\r\\n\\r\\n    return $ret\\r\\n}\\r\\n\\r\\n# Example zip content
  and extraction algorithm:\\r\\n# Rule: files if extracted are always being
  extracted to the same relative path locally\\r\\n#
  .\\\\\\r\\n#       a.exe   # file does not exist locally,
  extract\\r\\n#       b.dll   # file exists locally, override only if
  $OverrideFiles set\\r\\n#       aaa\\\\    # same rules as for
  files\\r\\n#           ...\\r\\n#       abc\\\\1.0.0\\\\  # directory contains
  version and exists locally\\r\\n#           ...     # do not extract content
  under versioned part\\r\\n#       abc\\\\asd\\\\    # same rules as for
  files\\r\\n#            ...\\r\\n#       def\\\\ghi\\\\1.0.1\\\\  # directory
  contains version and does not exist locally\\r\\n#           ...         #
  extract content\\r\\nfunction Extract-Dotnet-Package([string]$ZipPath,
  [string]$OutPath) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    Load-Assembly -Assembly
  System.IO.Compression.FileSystem\\r\\n    Set-Variable -Name Zip\\r\\n    try
  {\\r\\n        $Zip =
  [System.IO.Compression.ZipFile]::OpenRead($ZipPath)\\r\\n\\r\\n        $Direc\
  toriesToUnpack =
  Get-List-Of-Directories-And-Versions-To-Unpack-From-Dotnet-Package -Zip $Zip
  -OutPath $OutPath\\r\\n\\r\\n        foreach ($entry in $Zip.Entries)
  {\\r\\n            $PathWithVersion = Get-Path-Prefix-With-Version
  $entry.FullName\\r\\n            if (($null -eq $PathWithVersion) -Or
  ($DirectoriesToUnpack -contains $PathWithVersion))
  {\\r\\n                $DestinationPath = Get-Absolute-Path $(Join-Path -Path
  $OutPath -ChildPath $entry.FullName)\\r\\n                $DestinationDir =
  Split-Path -Parent
  $DestinationPath\\r\\n                $OverrideFiles=$OverrideNonVersionedFil\
  es -Or (-Not (Test-Path $DestinationPath))\\r\\n                if ((-Not
  $DestinationPath.EndsWith(\\\"\\\\\\\")) -And $OverrideFiles)
  {\\r\\n                    New-Item -ItemType Directory -Force -Path
  $DestinationDir |
  Out-Null\\r\\n                    [System.IO.Compression.ZipFileExtensions]::\
  ExtractToFile($entry, $DestinationPath,
  $OverrideNonVersionedFiles)\\r\\n                }\\r\\n            }\\r\\n        \
  }\\r\\n    }\\r\\n    catch\\r\\n    {\\r\\n        Say-Error \\\"Failed to
  extract package. Exception:
  $_\\\"\\r\\n        throw;\\r\\n    }\\r\\n    finally {\\r\\n        if
  ($null -ne $Zip)
  {\\r\\n            $Zip.Dispose()\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\\
  nfunction DownloadFile($Source, [string]$OutPath) {\\r\\n    if ($Source
  -notlike \\\"http*\\\") {\\r\\n        #  Using System.IO.Path.GetFullPath to
  get the current directory\\r\\n        #    does not work in this context -
  $pwd gives the current directory\\r\\n        if
  (![System.IO.Path]::IsPathRooted($Source)) {\\r\\n            $Source =
  $(Join-Path -Path $pwd -ChildPath $Source)\\r\\n        }\\r\\n        $Source
  = Get-Absolute-Path $Source\\r\\n        Say \\\"Copying file from $Source to
  $OutPath\\\"\\r\\n        Copy-Item $Source
  $OutPath\\r\\n        return\\r\\n    }\\r\\n\\r\\n    $Stream =
  $null\\r\\n\\r\\n    try {\\r\\n        $Response = GetHTTPResponse -Uri
  $Source\\r\\n        $Stream =
  $Response.Content.ReadAsStreamAsync().Result\\r\\n        $File =
  [System.IO.File]::Create($OutPath)\\r\\n        $Stream.CopyTo($File)\\r\\n        \
  $File.Close()\\r\\n    }\\r\\n    finally {\\r\\n        if ($null -ne
  $Stream)
  {\\r\\n            $Stream.Dispose()\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\
  \\nfunction SafeRemoveFile($Path) {\\r\\n    try {\\r\\n        if (Test-Path
  $Path) {\\r\\n            Remove-Item $Path\\r\\n            Say-Verbose
  \\\"The temporary file `\\\"$Path`\\\" was
  removed.\\\"\\r\\n        }\\r\\n        else\\r\\n        {\\r\\n            \
  Say-Verbose \\\"The temporary file `\\\"$Path`\\\" does not exist, therefore
  is not
  removed.\\\"\\r\\n        }\\r\\n    }\\r\\n    catch\\r\\n    {\\r\\n        \
  Say-Warning \\\"Failed to remove the temporary file: `\\\"$Path`\\\", remove
  it manually.\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Prepend-Sdk-InstallRoot-To-Path([string]$InstallRoot) {\\r\\n    $BinPath =
  Get-Absolute-Path $(Join-Path -Path $InstallRoot -ChildPath
  \\\"\\\")\\r\\n    if (-Not $NoPath) {\\r\\n        $SuffixedBinPath =
  \\\"$BinPath;\\\"\\r\\n        if (-Not $env:path.Contains($SuffixedBinPath))
  {\\r\\n            Say \\\"Adding to current process PATH: `\\\"$BinPath`\\\".
  Note: This change will not be visible if PowerShell was run as a child
  process.\\\"\\r\\n            $env:path = $SuffixedBinPath +
  $env:path\\r\\n        } else {\\r\\n            Say-Verbose \\\"Current
  process PATH already contains
  `\\\"$BinPath`\\\"\\\"\\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        Say \\\"Binaries of dotnet can be found in
  $BinPath\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  PrintDryRunOutput($Invocation, $DownloadLinks)\\r\\n{\\r\\n    Say \\\"Payload
  URLs:\\\"\\r\\n    \\r\\n    for ($linkIndex=0; $linkIndex -lt
  $DownloadLinks.count; $linkIndex++) {\\r\\n        Say \\\"URL #$linkIndex -
  $($DownloadLinks[$linkIndex].type):
  $($DownloadLinks[$linkIndex].downloadLink)\\\"\\r\\n    }\\r\\n    $Repeatabl\
  eCommand = \\\".\\\\$ScriptName -Version `\\\"$SpecificVersion`\\\"
  -InstallDir `\\\"$InstallRoot`\\\" -Architecture
  `\\\"$CLIArchitecture`\\\"\\\"\\r\\n    if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n       $RepeatableCommand+=\\\" -Runtime
  `\\\"dotnet`\\\"\\\"\\r\\n    }\\r\\n    elseif ($Runtime -eq
  \\\"aspnetcore\\\") {\\r\\n       $RepeatableCommand+=\\\" -Runtime
  `\\\"aspnetcore`\\\"\\\"\\r\\n    }\\r\\n\\r\\n    foreach ($key in
  $Invocation.BoundParameters.Keys) {\\r\\n        if (-not
  (@(\\\"Architecture\\\",\\\"Channel\\\",\\\"DryRun\\\",\\\"InstallDir\\\",\\\
  \"Runtime\\\",\\\"SharedRuntime\\\",\\\"Version\\\",\\\"Quality\\\",\\\"FeedC\
  redential\\\") -contains $key)) {\\r\\n            $RepeatableCommand+=\\\"
  -$key
  `\\\"$($Invocation.BoundParameters[$key])`\\\"\\\"\\r\\n        }\\r\\n    }\
  \\r\\n    if ($Invocation.BoundParameters.Keys -contains
  \\\"FeedCredential\\\") {\\r\\n        $RepeatableCommand+=\\\"
  -FeedCredential `\\\"<feedCredential>`\\\"\\\"\\r\\n    }\\r\\n    Say
  \\\"Repeatable invocation: $RepeatableCommand\\\"\\r\\n    if
  ($SpecificVersion -ne $EffectiveVersion)\\r\\n    {\\r\\n        Say \\\"NOTE:
  Due to finding a version manifest with this runtime, it would actually install
  with version '$EffectiveVersion'\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-AkaMSDownloadLink([string]$Channel, [string]$Quality, [bool]$Internal,
  [string]$Product, [string]$Architecture) {\\r\\n    Say-Invocation
  $MyInvocation \\r\\n\\r\\n    #quality is not supported for LTS or STS
  channel\\r\\n    if (![string]::IsNullOrEmpty($Quality) -and (@(\\\"LTS\\\",
  \\\"STS\\\") -contains $Channel)) {\\r\\n        $Quality =
  \\\"\\\"\\r\\n        Say-Warning \\\"Specifying quality for STS or LTS
  channel is not supported, the quality will be
  ignored.\\\"\\r\\n    }\\r\\n    Say-Verbose \\\"Retrieving primary payload
  URL from aka.ms link for channel: '$Channel', quality: '$Quality' product:
  '$Product', os: 'win', architecture: '$Architecture'.\\\"
  \\r\\n   \\r\\n    #construct aka.ms link\\r\\n    $akaMsLink =
  \\\"https://aka.ms/dotnet\\\"\\r\\n    if ($Internal)
  {\\r\\n        $akaMsLink += \\\"/internal\\\"\\r\\n    }\\r\\n    $akaMsLink
  += \\\"/$Channel\\\"\\r\\n    if (-not [string]::IsNullOrEmpty($Quality))
  {\\r\\n        $akaMsLink +=\\\"/$Quality\\\"\\r\\n    }\\r\\n    $akaMsLink
  +=\\\"/$Product-win-$Architecture.zip\\\"\\r\\n    Say-Verbose  \\\"Construct\
  ed aka.ms link:
  '$akaMsLink'.\\\"\\r\\n    $akaMsDownloadLink=$null\\r\\n\\r\\n    for
  ($maxRedirections = 9; $maxRedirections -ge 0;
  $maxRedirections--)\\r\\n    {\\r\\n        #get HTTP
  response\\r\\n        #do not pass credentials as a part of the $akaMsLink and
  do not apply credentials in the GetHTTPResponse
  function\\r\\n        #otherwise the redirect link would have credentials as
  well\\r\\n        #it would result in applying credentials twice to the
  resulting link and thus breaking it, and in echoing credentials to the output
  as a part of redirect link\\r\\n        $Response= GetHTTPResponse -Uri
  $akaMsLink -HeaderOnly $true -DisableRedirect $true -DisableFeedCredential
  $true\\r\\n        Say-Verbose \\\"Received
  response:`n$Response\\\"\\r\\n\\r\\n        if
  ([string]::IsNullOrEmpty($Response)) {\\r\\n            Say-Verbose \\\"The
  link '$akaMsLink' is not valid: failed to get redirect location. The resource
  is not available.\\\"\\r\\n            return
  $null\\r\\n        }\\r\\n\\r\\n        #if HTTP code is 301 (Moved
  Permanently), the redirect link exists\\r\\n        if  ($Response.StatusCode
  -eq 301)\\r\\n        {\\r\\n            try
  {\\r\\n                $akaMsDownloadLink =
  $Response.Headers.GetValues(\\\"Location\\\")[0]\\r\\n\\r\\n                if
  ([string]::IsNullOrEmpty($akaMsDownloadLink))
  {\\r\\n                    Say-Verbose \\\"The link '$akaMsLink' is not valid:
  server returned 301 (Moved Permanently), but the headers do not contain the
  redirect location.\\\"\\r\\n                    return
  $null\\r\\n                }\\r\\n\\r\\n                Say-Verbose \\\"The
  redirect location retrieved: '$akaMsDownloadLink'.\\\"\\r\\n                #
  This may yet be a link to another redirection. Attempt to retrieve the page
  again.\\r\\n                $akaMsLink =
  $akaMsDownloadLink\\r\\n                continue\\r\\n            }\\r\\n            \
  catch {\\r\\n                Say-Verbose \\\"The link '$akaMsLink' is not
  valid: failed to get redirect location.\\\"\\r\\n                return
  $null\\r\\n            }\\r\\n        }\\r\\n        elseif
  ((($Response.StatusCode -lt 300) -or ($Response.StatusCode -ge 400)) -and
  (-not
  [string]::IsNullOrEmpty($akaMsDownloadLink)))\\r\\n        {\\r\\n            \
  # Redirections have ended.\\r\\n            return
  $akaMsDownloadLink\\r\\n        }\\r\\n\\r\\n        Say-Verbose \\\"The link
  '$akaMsLink' is not valid: failed to retrieve the redirection
  location.\\\"\\r\\n        return $null\\r\\n    }\\r\\n\\r\\n    Say-Verbose
  \\\"Aka.ms links have redirected more than the maximum allowed redirections.
  This may be caused by a cyclic redirection of aka.ms
  links.\\\"\\r\\n    return $null\\r\\n\\r\\n}\\r\\n\\r\\nfunction
  Get-AkaMsLink-And-Version([string] $NormalizedChannel, [string]
  $NormalizedQuality, [bool] $Internal, [string] $ProductName, [string]
  $Architecture) {\\r\\n    $AkaMsDownloadLink = Get-AkaMSDownloadLink -Channel
  $NormalizedChannel -Quality $NormalizedQuality -Internal $Internal -Product
  $ProductName -Architecture $Architecture\\r\\n   \\r\\n    if
  ([string]::IsNullOrEmpty($AkaMsDownloadLink)){\\r\\n        if (-not
  [string]::IsNullOrEmpty($NormalizedQuality)) {\\r\\n            # if quality
  is specified - exit with error - there is no fallback
  approach\\r\\n            Say-Error \\\"Failed to locate the latest version in
  the channel '$NormalizedChannel' with '$NormalizedQuality' quality for
  '$ProductName', os: 'win', architecture:
  '$Architecture'.\\\"\\r\\n            Say-Error \\\"Refer to:
  https://aka.ms/dotnet-os-lifecycle for information on .NET Core
  support.\\\"\\r\\n            throw \\\"aka.ms link resolution
  failure\\\"\\r\\n        }\\r\\n        Say-Verbose \\\"Falling back to
  latest.version file approach.\\\"\\r\\n        return ($null, $null,
  $null)\\r\\n    }\\r\\n    else {\\r\\n        Say-Verbose \\\"Retrieved
  primary named payload URL from aka.ms link:
  '$AkaMsDownloadLink'.\\\"\\r\\n        Say-Verbose  \\\"Downloading using
  legacy url will not be attempted.\\\"\\r\\n\\r\\n        #get version from the
  path\\r\\n        $pathParts = $AkaMsDownloadLink.Split('/')\\r\\n        if
  ($pathParts.Length -ge 2) { \\r\\n            $SpecificVersion =
  $pathParts[$pathParts.Length - 2]\\r\\n            Say-Verbose \\\"Version:
  '$SpecificVersion'.\\\"\\r\\n        }\\r\\n        else
  {\\r\\n            Say-Error \\\"Failed to extract the version from download
  link '$AkaMsDownloadLink'.\\\"\\r\\n            return ($null, $null,
  $null)\\r\\n        }\\r\\n\\r\\n        #retrieve effective (product)
  version\\r\\n        $EffectiveVersion = Get-Product-Version -SpecificVersion
  $SpecificVersion -PackageDownloadLink
  $AkaMsDownloadLink\\r\\n        Say-Verbose \\\"Product version:
  '$EffectiveVersion'.\\\"\\r\\n\\r\\n        return ($AkaMsDownloadLink,
  $SpecificVersion, $EffectiveVersion);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-Feeds-To-Use()\\r\\n{\\r\\n    $feeds =
  @(\\r\\n    \\\"https://dotnetcli.azureedge.net/dotnet\\\",\\r\\n    \\\"http\
  s://dotnetbuilds.azureedge.net/public\\\"\\r\\n    )\\r\\n\\r\\n    if (-not
  [string]::IsNullOrEmpty($AzureFeed)) {\\r\\n        $feeds =
  @($AzureFeed)\\r\\n    }\\r\\n\\r\\n    if ($NoCdn) {\\r\\n        $feeds =
  @(\\r\\n        \\\"https://dotnetcli.blob.core.windows.net/dotnet\\\",\\r\\n        \
  \\\"https://dotnetbuilds.blob.core.windows.net/public\\\"\\r\\n        )\\r\\n\
  \\r\\n        if (-not [string]::IsNullOrEmpty($UncachedFeed))
  {\\r\\n            $feeds =
  @($UncachedFeed)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return
  $feeds\\r\\n}\\r\\n\\r\\nfunction Resolve-AssetName-And-RelativePath([string]
  $Runtime) {\\r\\n    \\r\\n    if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n        $assetName = \\\".NET Core
  Runtime\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"shared\\\\Microsoft.NETCore.App\\\"\\r\\n    }\\r\\n    elseif ($Runtime
  -eq \\\"aspnetcore\\\") {\\r\\n        $assetName = \\\"ASP.NET Core
  Runtime\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"shared\\\\Microsoft.AspNetCore.App\\\"\\r\\n    }\\r\\n    elseif
  ($Runtime -eq \\\"windowsdesktop\\\") {\\r\\n        $assetName = \\\".NET
  Core Windows Desktop Runtime\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"shared\\\\Microsoft.WindowsDesktop.App\\\"\\r\\n    }\\r\\n    elseif
  (-not $Runtime) {\\r\\n        $assetName = \\\".NET Core
  SDK\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"sdk\\\"\\r\\n    }\\r\\n    else {\\r\\n        throw \\\"Invalid value
  for `$Runtime\\\"\\r\\n    }\\r\\n\\r\\n    return ($assetName,
  $dotnetPackageRelativePath)\\r\\n}\\r\\n\\r\\nfunction
  Prepare-Install-Directory {\\r\\n    New-Item -ItemType Directory -Force -Path
  $InstallRoot | Out-Null\\r\\n\\r\\n    $installDrive = $((Get-Item
  $InstallRoot -Force).PSDrive.Name);\\r\\n    $diskInfo =
  $null\\r\\n    try{\\r\\n        $diskInfo = Get-PSDrive -Name
  $installDrive\\r\\n    }\\r\\n    catch{\\r\\n        Say-Warning \\\"Failed
  to check the disk space. Installation will continue, but it may fail if you do
  not have enough disk space.\\\"\\r\\n    }\\r\\n    \\r\\n    if ( ($null -ne
  $diskInfo) -and ($diskInfo.Free / 1MB -le 100)) {\\r\\n        throw \\\"There
  is not enough disk space on drive
  ${installDrive}:\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nSay-Verbose \\\"Note that
  the intended use of this script is for Continuous Integration (CI) scenarios,
  where:\\\"\\r\\nSay-Verbose \\\"- The SDK needs to be installed without user
  interaction and without admin rights.\\\"\\r\\nSay-Verbose \\\"- The SDK
  installation doesn't need to persist across multiple CI
  runs.\\\"\\r\\nSay-Verbose \\\"To set up a development environment or to run
  apps, use installers rather than this script. Visit
  https://dotnet.microsoft.com/download to get the
  installer.`r`n\\\"\\r\\n\\r\\nif ($SharedRuntime -and (-not $Runtime))
  {\\r\\n    $Runtime =
  \\\"dotnet\\\"\\r\\n}\\r\\n\\r\\n$OverrideNonVersionedFiles =
  !$SkipNonVersionedFiles\\r\\n\\r\\nMeasure-Action \\\"Product discovery\\\"
  {\\r\\n    $script:CLIArchitecture = Get-CLIArchitecture-From-Architecture
  $Architecture\\r\\n    $script:NormalizedQuality = Get-NormalizedQuality
  $Quality\\r\\n    Say-Verbose \\\"Normalized quality:
  '$NormalizedQuality'\\\"\\r\\n    $script:NormalizedChannel =
  Get-NormalizedChannel $Channel\\r\\n    Say-Verbose \\\"Normalized channel:
  '$NormalizedChannel'\\\"\\r\\n    $script:NormalizedProduct =
  Get-NormalizedProduct $Runtime\\r\\n    Say-Verbose \\\"Normalized product:
  '$NormalizedProduct'\\\"\\r\\n    $script:FeedCredential =
  ValidateFeedCredential $FeedCredential\\r\\n}\\r\\n\\r\\n$InstallRoot =
  Resolve-Installation-Path $InstallDir\\r\\nSay-Verbose \\\"InstallRoot:
  $InstallRoot\\\"\\r\\n$ScriptName =
  $MyInvocation.MyCommand.Name\\r\\n($assetName, $dotnetPackageRelativePath) =
  Resolve-AssetName-And-RelativePath -Runtime $Runtime\\r\\n\\r\\n$feeds =
  Get-Feeds-To-Use\\r\\n$DownloadLinks = @()\\r\\n\\r\\nif
  ($Version.ToLowerInvariant() -ne \\\"latest\\\" -and -not
  [string]::IsNullOrEmpty($Quality)) {\\r\\n    throw \\\"Quality and Version
  options are not allowed to be specified simultaneously. See https://
  learn.microsoft.com/dotnet/core/tools/dotnet-install-script#options for
  details.\\\"\\r\\n}\\r\\n\\r\\n# aka.ms links can only be used if the user did
  not request a specific version via the command line or a global.json
  file.\\r\\nif ([string]::IsNullOrEmpty($JSonFile) -and ($Version -eq
  \\\"latest\\\")) {\\r\\n    ($DownloadLink, $SpecificVersion,
  $EffectiveVersion) = Get-AkaMsLink-And-Version $NormalizedChannel
  $NormalizedQuality $Internal $NormalizedProduct
  $CLIArchitecture\\r\\n    \\r\\n    if ($null -ne $DownloadLink)
  {\\r\\n        $DownloadLinks += New-Object PSObject -Property
  @{downloadLink=\\\"$DownloadLink\\\";specificVersion=\\\"$SpecificVersion\\\"\
  ;effectiveVersion=\\\"$EffectiveVersion\\\";type='aka.ms'}\\r\\n        Say-V\
  erbose \\\"Generated aka.ms link $DownloadLink with version
  $EffectiveVersion\\\"\\r\\n        \\r\\n        if (-Not $DryRun)
  {\\r\\n            Say-Verbose \\\"Checking if the version $EffectiveVersion
  is already installed\\\"\\r\\n            if (Is-Dotnet-Package-Installed
  -InstallRoot $InstallRoot -RelativePathToPackage $dotnetPackageRelativePath
  -SpecificVersion
  $EffectiveVersion)\\r\\n            {\\r\\n                Say \\\"$assetName
  with version '$EffectiveVersion' is already
  installed.\\\"\\r\\n                Prepend-Sdk-InstallRoot-To-Path
  -InstallRoot
  $InstallRoot\\r\\n                return\\r\\n            }\\r\\n        }\\r\
  \\n    }\\r\\n}\\r\\n\\r\\n# Primary and legacy links cannot be used if a
  quality was specified.\\r\\n# If we already have an aka.ms link, no need to
  search the blob feeds.\\r\\nif ([string]::IsNullOrEmpty($NormalizedQuality)
  -and 0 -eq $DownloadLinks.count)\\r\\n{\\r\\n    foreach ($feed in $feeds)
  {\\r\\n        try {\\r\\n            $SpecificVersion =
  Get-Specific-Version-From-Version -AzureFeed $feed -Channel $Channel -Version
  $Version -JSonFile $JSonFile\\r\\n            $DownloadLink, $EffectiveVersion
  = Get-Download-Link -AzureFeed $feed -SpecificVersion $SpecificVersion
  -CLIArchitecture $CLIArchitecture\\r\\n            $LegacyDownloadLink =
  Get-LegacyDownload-Link -AzureFeed $feed -SpecificVersion $SpecificVersion
  -CLIArchitecture
  $CLIArchitecture\\r\\n            \\r\\n            $DownloadLinks +=
  New-Object PSObject -Property
  @{downloadLink=\\\"$DownloadLink\\\";specificVersion=\\\"$SpecificVersion\\\"\
  ;effectiveVersion=\\\"$EffectiveVersion\\\";type='primary'}\\r\\n            \
  Say-Verbose \\\"Generated primary link $DownloadLink with version
  $EffectiveVersion\\\"\\r\\n    \\r\\n            if (-not
  [string]::IsNullOrEmpty($LegacyDownloadLink))
  {\\r\\n                $DownloadLinks += New-Object PSObject -Property
  @{downloadLink=\\\"$LegacyDownloadLink\\\";specificVersion=\\\"$SpecificVersi\
  on\\\";effectiveVersion=\\\"$EffectiveVersion\\\";type='legacy'}\\r\\n                \
  Say-Verbose \\\"Generated legacy link $LegacyDownloadLink with version
  $EffectiveVersion\\\"\\r\\n            }\\r\\n    \\r\\n            if (-Not
  $DryRun) {\\r\\n                Say-Verbose \\\"Checking if the version
  $EffectiveVersion is already installed\\\"\\r\\n                if
  (Is-Dotnet-Package-Installed -InstallRoot $InstallRoot -RelativePathToPackage
  $dotnetPackageRelativePath -SpecificVersion
  $EffectiveVersion)\\r\\n                {\\r\\n                    Say
  \\\"$assetName with version '$EffectiveVersion' is already
  installed.\\\"\\r\\n                    Prepend-Sdk-InstallRoot-To-Path
  -InstallRoot
  $InstallRoot\\r\\n                    return\\r\\n                }\\r\\n            \
  }\\r\\n        }\\r\\n        catch\\r\\n        {\\r\\n            Say-Verbo\
  se \\\"Failed to acquire download links from feed $feed. Exception:
  $_\\\"\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nif ($DownloadLinks.count
  -eq 0) {\\r\\n    throw \\\"Failed to resolve the exact version
  number.\\\"\\r\\n}\\r\\n\\r\\nif ($DryRun) {\\r\\n    PrintDryRunOutput
  $MyInvocation $DownloadLinks\\r\\n    return\\r\\n}\\r\\n\\r\\nMeasure-Action
  \\\"Installation directory preparation\\\" { Prepare-Install-Directory
  }\\r\\n\\r\\n$ZipPath =
  [System.IO.Path]::combine([System.IO.Path]::GetTempPath(),
  [System.IO.Path]::GetRandomFileName())\\r\\nSay-Verbose \\\"Zip path:
  $ZipPath\\\"\\r\\n\\r\\n$DownloadSucceeded = $false\\r\\n$DownloadedLink =
  $null\\r\\n$ErrorMessages = @()\\r\\n\\r\\nforeach ($link in
  $DownloadLinks)\\r\\n{\\r\\n    Say-Verbose \\\"Downloading
  `\\\"$($link.type)`\\\" link $($link.downloadLink)\\\"\\r\\n\\r\\n    try
  {\\r\\n        Measure-Action \\\"Package download\\\" { DownloadFile -Source
  $link.downloadLink -OutPath $ZipPath }\\r\\n        Say-Verbose \\\"Download
  succeeded.\\\"\\r\\n        $DownloadSucceeded =
  $true\\r\\n        $DownloadedLink =
  $link\\r\\n        break\\r\\n    }\\r\\n    catch {\\r\\n        $StatusCode
  = $null\\r\\n        $ErrorMessage = $null\\r\\n\\r\\n        if
  ($PSItem.Exception.Data.Contains(\\\"StatusCode\\\"))
  {\\r\\n            $StatusCode =
  $PSItem.Exception.Data[\\\"StatusCode\\\"]\\r\\n        }\\r\\n    \\r\\n        \
  if ($PSItem.Exception.Data.Contains(\\\"ErrorMessage\\\"))
  {\\r\\n            $ErrorMessage =
  $PSItem.Exception.Data[\\\"ErrorMessage\\\"]\\r\\n        } else
  {\\r\\n            $ErrorMessage =
  $PSItem.Exception.Message\\r\\n        }\\r\\n\\r\\n        Say-Verbose
  \\\"Download failed with status code $StatusCode. Error message:
  $ErrorMessage\\\"\\r\\n        $ErrorMessages += \\\"Downloading from
  `\\\"$($link.type)`\\\" link has failed with error:`nUri:
  $($link.downloadLink)`nStatusCode: $StatusCode`nError:
  $ErrorMessage\\\"\\r\\n    }\\r\\n\\r\\n    # This link failed. Clean up
  before trying the next one.\\r\\n    SafeRemoveFile -Path
  $ZipPath\\r\\n}\\r\\n\\r\\nif (-not $DownloadSucceeded) {\\r\\n    foreach
  ($ErrorMessage in $ErrorMessages) {\\r\\n        Say-Error
  $ErrorMessages\\r\\n    }\\r\\n\\r\\n    throw \\\"Could not find
  `\\\"$assetName`\\\" with version =
  $($DownloadLinks[0].effectiveVersion)`nRefer to:
  https://aka.ms/dotnet-os-lifecycle for information on .NET
  support\\\"\\r\\n}\\r\\n\\r\\nSay \\\"Extracting the
  archive.\\\"\\r\\nMeasure-Action \\\"Package extraction\\\" {
  Extract-Dotnet-Package -ZipPath $ZipPath -OutPath $InstallRoot
  }\\r\\n\\r\\n#  Check if the SDK version is installed; if not, fail the
  installation.\\r\\n$isAssetInstalled = $false\\r\\n\\r\\n# if the version
  contains \\\"RTM\\\" or \\\"servicing\\\"; check if a 'release-type' SDK
  version is installed.\\r\\nif ($DownloadedLink.effectiveVersion -Match
  \\\"rtm\\\" -or $DownloadedLink.effectiveVersion -Match \\\"servicing\\\")
  {\\r\\n    $ReleaseVersion =
  $DownloadedLink.effectiveVersion.Split(\\\"-\\\")[0]\\r\\n    Say-Verbose
  \\\"Checking installation: version =
  $ReleaseVersion\\\"\\r\\n    $isAssetInstalled = Is-Dotnet-Package-Installed
  -InstallRoot $InstallRoot -RelativePathToPackage $dotnetPackageRelativePath
  -SpecificVersion $ReleaseVersion\\r\\n}\\r\\n\\r\\n#  Check if the SDK version
  is installed.\\r\\nif (!$isAssetInstalled) {\\r\\n    Say-Verbose \\\"Checking
  installation: version =
  $($DownloadedLink.effectiveVersion)\\\"\\r\\n    $isAssetInstalled =
  Is-Dotnet-Package-Installed -InstallRoot $InstallRoot -RelativePathToPackage
  $dotnetPackageRelativePath -SpecificVersion
  $DownloadedLink.effectiveVersion\\r\\n}\\r\\n\\r\\n# Version verification
  failed. More likely something is wrong either with the downloaded content or
  with the verification algorithm.\\r\\nif (!$isAssetInstalled)
  {\\r\\n    Say-Error \\\"Failed to verify the version of installed
  `\\\"$assetName`\\\".`nInstallation source:
  $($DownloadedLink.downloadLink).`nInstallation location: $InstallRoot.`nReport
  the bug at
  https://github.com/dotnet/install-scripts/issues.\\\"\\r\\n    throw
  \\\"`\\\"$assetName`\\\" with version = $($DownloadedLink.effectiveVersion)
  failed to install with an unknown error.\\\"\\r\\n}\\r\\n\\r\\nSafeRemoveFile
  -Path $ZipPath\\r\\n\\r\\nMeasure-Action \\\"Setting up shell environment\\\"
  { Prepend-Sdk-InstallRoot-To-Path -InstallRoot $InstallRoot }\\r\\n\\r\\nSay
  \\\"Note that the script does not resolve dependencies during
  installation.\\\"\\r\\nSay \\\"To check the list of dependencies, go to
  https://learn.microsoft.com/dotnet/core/install/windows#dependencies\\\"\\r\\\
  nSay \\\"Installed version is $($DownloadedLink.effectiveVersion)\\\"\\r\\nSay
  \\\"Installation finished\\\"\\r\\n# SIG # Begin signature block\\r\\n#
  MIInvwYJKoZIhvcNAQcCoIInsDCCJ6wCAQExDzANBglghkgBZQMEAgEFADB5Bgor\\r\\n#
  BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG\\r\\n#
  KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCBhfTi3SRn7+vyy\\r\\n#
  uCXKPjhiawegWZ493EcaOEycbgkZcKCCDXYwggX0MIID3KADAgECAhMzAAACy7d1\\r\\n#
  OfsCcUI2AAAAAALLMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNVBAYTAlVTMRMwEQYD\\r\\n#
  VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy\\r\\n#
  b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p\\r\\n#
  bmcgUENBIDIwMTEwHhcNMjIwNTEyMjA0NTU5WhcNMjMwNTExMjA0NTU5WjB0MQsw\\r\\n#
  CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u\\r\\n#
  ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMR4wHAYDVQQDExVNaWNy\\r\\n#
  b3NvZnQgQ29ycG9yYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\r\\n#
  AQC3sN0WcdGpGXPZIb5iNfFB0xZ8rnJvYnxD6Uf2BHXglpbTEfoe+mO//oLWkRxA\\r\\n#
  wppditsSVOD0oglKbtnh9Wp2DARLcxbGaW4YanOWSB1LyLRpHnnQ5POlh2U5trg4\\r\\n#
  3gQjvlNZlQB3lL+zrPtbNvMA7E0Wkmo+Z6YFnsf7aek+KGzaGboAeFO4uKZjQXY5\\r\\n#
  RmMzE70Bwaz7hvA05jDURdRKH0i/1yK96TDuP7JyRFLOvA3UXNWz00R9w7ppMDcN\\r\\n#
  lXtrmbPigv3xE9FfpfmJRtiOZQKd73K72Wujmj6/Su3+DBTpOq7NgdntW2lJfX3X\\r\\n#
  a6oe4F9Pk9xRhkwHsk7Ju9E/AgMBAAGjggFzMIIBbzAfBgNVHSUEGDAWBgorBgEE\\r\\n#
  AYI3TAgBBggrBgEFBQcDAzAdBgNVHQ4EFgQUrg/nt/gj+BBLd1jZWYhok7v5/w4w\\r\\n#
  RQYDVR0RBD4wPKQ6MDgxHjAcBgNVBAsTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEW\\r\\n#
  MBQGA1UEBRMNMjMwMDEyKzQ3MDUyODAfBgNVHSMEGDAWgBRIbmTlUAXTgqoXNzci\\r\\n#
  tW2oynUClTBUBgNVHR8ETTBLMEmgR6BFhkNodHRwOi8vd3d3Lm1pY3Jvc29mdC5j\\r\\n#
  b20vcGtpb3BzL2NybC9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3JsMGEG\\r\\n#
  CCsGAQUFBwEBBFUwUzBRBggrBgEFBQcwAoZFaHR0cDovL3d3dy5taWNyb3NvZnQu\\r\\n#
  Y29tL3BraW9wcy9jZXJ0cy9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3J0\\r\\n#
  MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIBAJL5t6pVjIRlQ8j4dAFJ\\r\\n#
  ZnMke3rRHeQDOPFxswM47HRvgQa2E1jea2aYiMk1WmdqWnYw1bal4IzRlSVf4czf\\r\\n#
  zx2vjOIOiaGllW2ByHkfKApngOzJmAQ8F15xSHPRvNMmvpC3PFLvKMf3y5SyPJxh\\r\\n#
  922TTq0q5epJv1SgZDWlUlHL/Ex1nX8kzBRhHvc6D6F5la+oAO4A3o/ZC05OOgm4\\r\\n#
  EJxZP9MqUi5iid2dw4Jg/HvtDpCcLj1GLIhCDaebKegajCJlMhhxnDXrGFLJfX8j\\r\\n#
  7k7LUvrZDsQniJZ3D66K+3SZTLhvwK7dMGVFuUUJUfDifrlCTjKG9mxsPDllfyck\\r\\n#
  4zGnRZv8Jw9RgE1zAghnU14L0vVUNOzi/4bE7wIsiRyIcCcVoXRneBA3n/frLXvd\\r\\n#
  jDsbb2lpGu78+s1zbO5N0bhHWq4j5WMutrspBxEhqG2PSBjC5Ypi+jhtfu3+x76N\\r\\n#
  mBvsyKuxx9+Hm/ALnlzKxr4KyMR3/z4IRMzA1QyppNk65Ui+jB14g+w4vole33M1\\r\\n#
  pVqVckrmSebUkmjnCshCiH12IFgHZF7gRwE4YZrJ7QjxZeoZqHaKsQLRMp653beB\\r\\n#
  fHfeva9zJPhBSdVcCW7x9q0c2HVPLJHX9YCUU714I+qtLpDGrdbZxD9mikPqL/To\\r\\n#
  /1lDZ0ch8FtePhME7houuoPcMIIHejCCBWKgAwIBAgIKYQ6Q0gAAAAAAAzANBgkq\\r\\n#
  hkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x\\r\\n#
  EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv\\r\\n#
  bjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5\\r\\n#
  IDIwMTEwHhcNMTEwNzA4MjA1OTA5WhcNMjYwNzA4MjEwOTA5WjB+MQswCQYDVQQG\\r\\n#
  EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG\\r\\n#
  A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQg\\r\\n#
  Q29kZSBTaWduaW5nIFBDQSAyMDExMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\r\\n#
  CgKCAgEAq/D6chAcLq3YbqqCEE00uvK2WCGfQhsqa+laUKq4BjgaBEm6f8MMHt03\\r\\n#
  a8YS2AvwOMKZBrDIOdUBFDFC04kNeWSHfpRgJGyvnkmc6Whe0t+bU7IKLMOv2akr\\r\\n#
  rnoJr9eWWcpgGgXpZnboMlImEi/nqwhQz7NEt13YxC4Ddato88tt8zpcoRb0Rrrg\\r\\n#
  OGSsbmQ1eKagYw8t00CT+OPeBw3VXHmlSSnnDb6gE3e+lD3v++MrWhAfTVYoonpy\\r\\n#
  4BI6t0le2O3tQ5GD2Xuye4Yb2T6xjF3oiU+EGvKhL1nkkDstrjNYxbc+/jLTswM9\\r\\n#
  sbKvkjh+0p2ALPVOVpEhNSXDOW5kf1O6nA+tGSOEy/S6A4aN91/w0FK/jJSHvMAh\\r\\n#
  dCVfGCi2zCcoOCWYOUo2z3yxkq4cI6epZuxhH2rhKEmdX4jiJV3TIUs+UsS1Vz8k\\r\\n#
  A/DRelsv1SPjcF0PUUZ3s/gA4bysAoJf28AVs70b1FVL5zmhD+kjSbwYuER8ReTB\\r\\n#
  w3J64HLnJN+/RpnF78IcV9uDjexNSTCnq47f7Fufr/zdsGbiwZeBe+3W7UvnSSmn\\r\\n#
  Eyimp31ngOaKYnhfsi+E11ecXL93KCjx7W3DKI8sj0A3T8HhhUSJxAlMxdSlQy90\\r\\n#
  lfdu+HggWCwTXWCVmj5PM4TasIgX3p5O9JawvEagbJjS4NaIjAsCAwEAAaOCAe0w\\r\\n#
  ggHpMBAGCSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBRIbmTlUAXTgqoXNzcitW2o\\r\\n#
  ynUClTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNVHQ8EBAMCAYYwDwYD\\r\\n#
  VR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBRyLToCMZBDuRQFTuHqp8cx0SOJNDBa\\r\\n#
  BgNVHR8EUzBRME+gTaBLhklodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2Ny\\r\\n#
  bC9wcm9kdWN0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3JsMF4GCCsG\\r\\n#
  AQUFBwEBBFIwUDBOBggrBgEFBQcwAoZCaHR0cDovL3d3dy5taWNyb3NvZnQuY29t\\r\\n#
  L3BraS9jZXJ0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3J0MIGfBgNV\\r\\n#
  HSAEgZcwgZQwgZEGCSsGAQQBgjcuAzCBgzA/BggrBgEFBQcCARYzaHR0cDovL3d3\\r\\n#
  dy5taWNyb3NvZnQuY29tL3BraW9wcy9kb2NzL3ByaW1hcnljcHMuaHRtMEAGCCsG\\r\\n#
  AQUFBwICMDQeMiAdAEwAZQBnAGEAbABfAHAAbwBsAGkAYwB5AF8AcwB0AGEAdABl\\r\\n#
  AG0AZQBuAHQALiAdMA0GCSqGSIb3DQEBCwUAA4ICAQBn8oalmOBUeRou09h0ZyKb\\r\\n#
  C5YR4WOSmUKWfdJ5DJDBZV8uLD74w3LRbYP+vj/oCso7v0epo/Np22O/IjWll11l\\r\\n#
  hJB9i0ZQVdgMknzSGksc8zxCi1LQsP1r4z4HLimb5j0bpdS1HXeUOeLpZMlEPXh6\\r\\n#
  I/MTfaaQdION9MsmAkYqwooQu6SpBQyb7Wj6aC6VoCo/KmtYSWMfCWluWpiW5IP0\\r\\n#
  wI/zRive/DvQvTXvbiWu5a8n7dDd8w6vmSiXmE0OPQvyCInWH8MyGOLwxS3OW560\\r\\n#
  STkKxgrCxq2u5bLZ2xWIUUVYODJxJxp/sfQn+N4sOiBpmLJZiWhub6e3dMNABQam\\r\\n#
  ASooPoI/E01mC8CzTfXhj38cbxV9Rad25UAqZaPDXVJihsMdYzaXht/a8/jyFqGa\\r\\n#
  J+HNpZfQ7l1jQeNbB5yHPgZ3BtEGsXUfFL5hYbXw3MYbBL7fQccOKO7eZS/sl/ah\\r\\n#
  XJbYANahRr1Z85elCUtIEJmAH9AAKcWxm6U/RXceNcbSoqKfenoi+kiVH6v7RyOA\\r\\n#
  9Z74v2u3S5fi63V4GuzqN5l5GEv/1rMjaHXmr/r8i+sLgOppO6/8MO0ETI7f33Vt\\r\\n#
  Y5E90Z1WTk+/gFcioXgRMiF670EKsT/7qMykXcGhiJtXcVZOSEXAQsmbdlsKgEhr\\r\\n#
  /Xmfwb1tbWrJUnMTDXpQzTGCGZ8wghmbAgEBMIGVMH4xCzAJBgNVBAYTAlVTMRMw\\r\\n#
  EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN\\r\\n#
  aWNyb3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNp\\r\\n#
  Z25pbmcgUENBIDIwMTECEzMAAALLt3U5+wJxQjYAAAAAAsswDQYJYIZIAWUDBAIB\\r\\n#
  BQCgga4wGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEO\\r\\n#
  MAwGCisGAQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEIFmuaTXYQ37AFvsEol24fdW+\\r\\n#
  nRqHcc1fr+VQVdqhXc/vMEIGCisGAQQBgjcCAQwxNDAyoBSAEgBNAGkAYwByAG8A\\r\\n#
  cwBvAGYAdKEagBhodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20wDQYJKoZIhvcNAQEB\\r\\n#
  BQAEggEAjY5XW5Ly7TJ1OTbeIR98xU+2dmtw7L71ws+ICnQCGhj2xJDUK+5yrTfO\\r\\n#
  8C98l/P4ynFi33Dl8z2YElqUCuqEXbiCzz06lIL4NuibC5DV/X80ZmICR/NYd2v1\\r\\n#
  ww7IH+7dpsHAowBBindCYpVwQ3Ea3kDWgsjPAinAysFFushSOnNWFvrF6vi2smrs\\r\\n#
  smbrAAhEhSfLd1Pxxdw73hQ0YjM/D3F3opaybMQ0blpHhOaqtbiyYzvk0doIzBEc\\r\\n#
  trSH4NDIc3yLNj5VbjSczpexE+hyQNY4xCtwco4bVtXhONUihv08AIKR8+sIaI7A\\r\\n#
  mM/SWrrwGYSSSxydKqDei7biKG4jDqGCFykwghclBgorBgEEAYI3AwMBMYIXFTCC\\r\\n#
  FxEGCSqGSIb3DQEHAqCCFwIwghb+AgEDMQ8wDQYJYIZIAWUDBAIBBQAwggFZBgsq\\r\\n#
  hkiG9w0BCRABBKCCAUgEggFEMIIBQAIBAQYKKwYBBAGEWQoDATAxMA0GCWCGSAFl\\r\\n#
  AwQCAQUABCB6Hzt2gUb/WZK8fvVnOocriE4rYr6mscZi3gZnBCpiigIGZBr2iMZU\\r\\n#
  GBMyMDIzMDMzMTE1MjEwNi41MTZaMASAAgH0oIHYpIHVMIHSMQswCQYDVQQGEwJV\\r\\n#
  UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE\\r\\n#
  ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJl\\r\\n#
  bGFuZCBPcGVyYXRpb25zIExpbWl0ZWQxJjAkBgNVBAsTHVRoYWxlcyBUU1MgRVNO\\r\\n#
  OjA4NDItNEJFNi1DMjlBMSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBT\\r\\n#
  ZXJ2aWNloIIReDCCBycwggUPoAMCAQICEzMAAAGybkADf26plJIAAQAAAbIwDQYJ\\r\\n#
  KoZIhvcNAQELBQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x\\r\\n#
  EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv\\r\\n#
  bjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwHhcNMjIw\\r\\n#
  OTIwMjAyMjAxWhcNMjMxMjE0MjAyMjAxWjCB0jELMAkGA1UEBhMCVVMxEzARBgNV\\r\\n#
  BAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv\\r\\n#
  c29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0IElyZWxhbmQgT3Bl\\r\\n#
  cmF0aW9ucyBMaW1pdGVkMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjowODQyLTRC\\r\\n#
  RTYtQzI5QTElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZTCC\\r\\n#
  AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMqiZTIde/lQ4rC+Bml5f/Wu\\r\\n#
  q/xKTxrfbG23HofmQ+qZAN4GyO73PF3y9OAfpt7Qf2jcldWOGUB+HzBuwllYyP3f\\r\\n#
  x4MY8zvuAuB37FvoytnNC2DKnVrVlHOVcGUL9CnmhDNMA2/nskjIf2IoiG9J0qLY\\r\\n#
  r8duvHdQJ9Li2Pq9guySb9mvUL60ogslCO9gkh6FiEDwMrwUr8Wja6jFpUTny8tg\\r\\n#
  0N0cnCN2w4fKkp5qZcbUYFYicLSb/6A7pHCtX6xnjqwhmJoib3vkKJyVxbuFLRhV\\r\\n#
  XxH95b0LHeNhifn3jvo2j+/4QV10jEpXVW+iC9BsTtR69xvTjU51ZgP7BR4YDEWq\\r\\n#
  7JsylSOv5B5THTDXRf184URzFhTyb8OZQKY7mqMh7c8J8w1sEM4XDUF2UZNy829N\\r\\n#
  VCzG2tfdEXZaHxF8RmxpQYBxyhZwY1rotuIS+gfN2eq+hkAT3ipGn8/KmDwDtzAb\\r\\n#
  nfuXjApgeZqwgcYJ8pDJ+y/xU6ouzJz1Bve5TTihkiA7wQsQe6R60Zk9dPdNzw0M\\r\\n#
  K5niRzuQZAt4GI96FhjhlUWcUZOCkv/JXM/OGu/rgSplYwdmPLzzfDtXyuy/GCU5\\r\\n#
  I4l08g6iifXypMgoYkkceOAAz4vx1x0BOnZWfI3fSwqNUvoN7ncTT+MB4Vpvf1QB\\r\\n#
  ppjBAQUuvui6eCG0MCVNAgMBAAGjggFJMIIBRTAdBgNVHQ4EFgQUmfIngFzZEZlP\\r\\n#
  kjDOVluBSDDaanEwHwYDVR0jBBgwFoAUn6cVXQBeYl2D9OXSZacbUzUZ6XIwXwYD\\r\\n#
  VR0fBFgwVjBUoFKgUIZOaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9j\\r\\n#
  cmwvTWljcm9zb2Z0JTIwVGltZS1TdGFtcCUyMFBDQSUyMDIwMTAoMSkuY3JsMGwG\\r\\n#
  CCsGAQUFBwEBBGAwXjBcBggrBgEFBQcwAoZQaHR0cDovL3d3dy5taWNyb3NvZnQu\\r\\n#
  Y29tL3BraW9wcy9jZXJ0cy9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENBJTIw\\r\\n#
  MjAxMCgxKS5jcnQwDAYDVR0TAQH/BAIwADAWBgNVHSUBAf8EDDAKBggrBgEFBQcD\\r\\n#
  CDAOBgNVHQ8BAf8EBAMCB4AwDQYJKoZIhvcNAQELBQADggIBANxHtu3FzIabaDbW\\r\\n#
  qswdKBlAhKXRCN+5CSMiv2TYa4i2QuWIm+99piwAhDhADfbqor1zyLi95Y6GQnvI\\r\\n#
  WUgdeC7oL1ZtZye92zYK+EIfwYZmhS+CH4infAzUvscHZF3wlrJUfPUIDGVP0lCY\\r\\n#
  Vse9mguvG0dqkY4ayQPEHOvJubgZZaOdg/N8dInd6fGeOc+0DoGzB+LieObJ2Q0A\\r\\n#
  tEt3XN3iX8Cp6+dZTX8xwE/LvhRwPpb/+nKshO7TVuvenwdTwqB/LT6CNPaElwFe\\r\\n#
  KxKrqRTPMbHeg+i+KnBLfwmhEXsMg2s1QX7JIxfvT96md0eiMjiMEO22LbOzmLMN\\r\\n#
  d3LINowAnRBAJtX+3/e390B9sMGMHp+a1V+hgs62AopBl0p/00li30DN5wEQ5If3\\r\\n#
  5Zk7b/T6pEx6rJUDYCti7zCbikjKTanBnOc99zGMlej5X+fC/k5ExUCrOs3/VzGR\\r\\n#
  CZt5LvVQSdWqq/QMzTEmim4sbzASK9imEkjNtZZyvC1CsUcD1voFktld4mKMjE+u\\r\\n#
  DEV3IddD+DrRk94nVzNPSuZXewfVOnXHSeqG7xM3V7fl2aL4v1OhL2+JwO1Tx3B0\\r\\n#
  irO1O9qbNdJk355bntd1RSVKgM22KFBHnoL7Js7pRhBiaKmVTQGoOb+j1Qa7q+ci\\r\\n#
  xGo48Vh9k35BDsJS/DLoXFSPDl4mMIIHcTCCBVmgAwIBAgITMwAAABXF52ueAptJ\\r\\n#
  mQAAAAAAFTANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgT\\r\\n#
  Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m\\r\\n#
  dCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNh\\r\\n#
  dGUgQXV0aG9yaXR5IDIwMTAwHhcNMjEwOTMwMTgyMjI1WhcNMzAwOTMwMTgzMjI1\\r\\n#
  WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH\\r\\n#
  UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD\\r\\n#
  Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCCAiIwDQYJKoZIhvcNAQEB\\r\\n#
  BQADggIPADCCAgoCggIBAOThpkzntHIhC3miy9ckeb0O1YLT/e6cBwfSqWxOdcjK\\r\\n#
  NVf2AX9sSuDivbk+F2Az/1xPx2b3lVNxWuJ+Slr+uDZnhUYjDLWNE893MsAQGOhg\\r\\n#
  fWpSg0S3po5GawcU88V29YZQ3MFEyHFcUTE3oAo4bo3t1w/YJlN8OWECesSq/XJp\\r\\n#
  rx2rrPY2vjUmZNqYO7oaezOtgFt+jBAcnVL+tuhiJdxqD89d9P6OU8/W7IVWTe/d\\r\\n#
  vI2k45GPsjksUZzpcGkNyjYtcI4xyDUoveO0hyTD4MmPfrVUj9z6BVWYbWg7mka9\\r\\n#
  7aSueik3rMvrg0XnRm7KMtXAhjBcTyziYrLNueKNiOSWrAFKu75xqRdbZ2De+JKR\\r\\n#
  Hh09/SDPc31BmkZ1zcRfNN0Sidb9pSB9fvzZnkXftnIv231fgLrbqn427DZM9itu\\r\\n#
  qBJR6L8FA6PRc6ZNN3SUHDSCD/AQ8rdHGO2n6Jl8P0zbr17C89XYcz1DTsEzOUyO\\r\\n#
  ArxCaC4Q6oRRRuLRvWoYWmEBc8pnol7XKHYC4jMYctenIPDC+hIK12NvDMk2ZItb\\r\\n#
  oKaDIV1fMHSRlJTYuVD5C4lh8zYGNRiER9vcG9H9stQcxWv2XFJRXRLbJbqvUAV6\\r\\n#
  bMURHXLvjflSxIUXk8A8FdsaN8cIFRg/eKtFtvUeh17aj54WcmnGrnu3tz5q4i6t\\r\\n#
  AgMBAAGjggHdMIIB2TASBgkrBgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQW\\r\\n#
  BBQqp1L+ZMSavoKRPEY1Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cVXQBeYl2D9OXSZacb\\r\\n#
  UzUZ6XIwXAYDVR0gBFUwUzBRBgwrBgEEAYI3TIN9AQEwQTA/BggrBgEFBQcCARYz\\r\\n#
  aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9Eb2NzL1JlcG9zaXRvcnku\\r\\n#
  aHRtMBMGA1UdJQQMMAoGCCsGAQUFBwMIMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIA\\r\\n#
  QwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2\\r\\n#
  VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwu\\r\\n#
  bWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEw\\r\\n#
  LTA2LTIzLmNybDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93\\r\\n#
  d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYt\\r\\n#
  MjMuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQCdVX38Kq3hLB9nATEkW+Geckv8qW/q\\r\\n#
  XBS2Pk5HZHixBpOXPTEztTnXwnE2P9pkbHzQdTltuw8x5MKP+2zRoZQYIu7pZmc6\\r\\n#
  U03dmLq2HnjYNi6cqYJWAAOwBb6J6Gngugnue99qb74py27YP0h1AdkY3m2CDPVt\\r\\n#
  I1TkeFN1JFe53Z/zjj3G82jfZfakVqr3lbYoVSfQJL1AoL8ZthISEV09J+BAljis\\r\\n#
  9/kpicO8F7BUhUKz/AyeixmJ5/ALaoHCgRlCGVJ1ijbCHcNhcy4sa3tuPywJeBTp\\r\\n#
  kbKpW99Jo3QMvOyRgNI95ko+ZjtPu4b6MhrZlvSP9pEB9s7GdP32THJvEKt1MMU0\\r\\n#
  sHrYUP4KWN1APMdUbZ1jdEgssU5HLcEUBHG/ZPkkvnNtyo4JvbMBV0lUZNlz138e\\r\\n#
  W0QBjloZkWsNn6Qo3GcZKCS6OEuabvshVGtqRRFHqfG3rsjoiV5PndLQTHa1V1QJ\\r\\n#
  sWkBRH58oWFsc/4Ku+xBZj1p/cvBQUl+fpO+y/g75LcVv7TOPqUxUYS8vwLBgqJ7\\r\\n#
  Fx0ViY1w/ue10CgaiQuPNtq6TPmb/wrpNPgkNWcr4A245oyZ1uEi6vAnQj0llOZ0\\r\\n#
  dFtq0Z4+7X6gMTN9vMvpe784cETRkPHIqzqKOghif9lwY1NNje6CbaUFEMFxBmoQ\\r\\n#
  tB1VM1izoXBm8qGCAtQwggI9AgEBMIIBAKGB2KSB1TCB0jELMAkGA1UEBhMCVVMx\\r\\n#
  EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT\\r\\n#
  FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0IElyZWxh\\r\\n#
  bmQgT3BlcmF0aW9ucyBMaW1pdGVkMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjow\\r\\n#
  ODQyLTRCRTYtQzI5QTElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2Vy\\r\\n#
  dmljZaIjCgEBMAcGBSsOAwIaAxUAjhJ+EeySRfn2KCNsjn9cF9AUSTqggYMwgYCk\\r\\n#
  fjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH\\r\\n#
  UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD\\r\\n#
  Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQUFAAIF\\r\\n#
  AOfRUdUwIhgPMjAyMzAzMzEyMDM0MjlaGA8yMDIzMDQwMTIwMzQyOVowdDA6Bgor\\r\\n#
  BgEEAYRZCgQBMSwwKjAKAgUA59FR1QIBADAHAgEAAgIKJDAHAgEAAgIRLzAKAgUA\\r\\n#
  59KjVQIBADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIBAAID\\r\\n#
  B6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBBQUAA4GBAJlOESCa/uRR1x6GunE8\\r\\n#
  K/WgHWTpSE31EITDOfTMvDcF4ptngCS5aOc4gfzmhNNehWfP6EOrgoSQzJYZ4YCh\\r\\n#
  fYbHNMk56f18sq8t7y2hgR7KixcEo/4HVzeSdaOclHNc4Gn7kCGpMvpT3Xz9Lzc7\\r\\n#
  UKWDZ0zkNKnbS8TZLNueVQwfMYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMx\\r\\n#
  EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT\\r\\n#
  FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt\\r\\n#
  U3RhbXAgUENBIDIwMTACEzMAAAGybkADf26plJIAAQAAAbIwDQYJYIZIAWUDBAIB\\r\\n#
  BQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQx\\r\\n#
  IgQgXhJRuHCXk3arJvifIY3DBe9Ce9EmlP1y6U4XkgL31DkwgfoGCyqGSIb3DQEJ\\r\\n#
  EAIvMYHqMIHnMIHkMIG9BCBTeM485+E+t4PEVieUoFKX7PVyLo/nzu+htJPCG04+\\r\\n#
  NTCBmDCBgKR+MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw\\r\\n#
  DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x\\r\\n#
  JjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAABsm5A\\r\\n#
  A39uqZSSAAEAAAGyMCIEIGGWlnNnYHrB5HguWG0/nJd/WvSrCogze+QCpenu3IM5\\r\\n#
  MA0GCSqGSIb3DQEBCwUABIICADVOLTuNxeEnBOfZpb7Nv4uf91W/Ho5i99zenDSJ\\r\\n#
  x5QHVs+bKXmgc3a7/SSsliAT3zygHc7cH4zARbCZePLTivByKmeG08Ka35eyR+FK\\r\\n#
  awSNrI/X+eVIC6nw/egCwviBC1NAG8jHGkuScbHeiiGajvS6lp3ORML7UexMuE4w\\r\\n#
  9SEumoghljCLZMwCSvw+3WxhQoBEZroR8u+PID2RdD0vi85FjKPWcZZijVLqHeFi\\r\\n#
  TnuFqwRCLTV0MV+dDCbjwXneIqV+AVlnqb9iDMr3ZhISlRcy9XJNpY5vQBj/wqUW\\r\\n#
  vefrmpdz0LNkdtXYThPkyl3mha2KsoQi5SA9zSjlAjFgY3ppmXvi3Frbfqk+iL+f\\r\\n#
  l/Qc4+B71jG4t28lTWKteJiHqo+6AUXK2rlAl0d74yvhO6N8lMMtXhdJc8JABYn1\\r\\n#
  v2/KKZn5RvPFF8QP7Ac1saIe1+gUFNcsYOLaMm/xl8E6kefWwZnm5Rhm606g1AC/\\r\\n#
  N5Wo08aAs0ymTPH91dEbmOURXLbA3vCyG7kbfgnhCs/j7oQHWaFDzEYuXDIA4ICT\\r\\n#
  dxPUTltbq3OWdp0PAS8JSEKPQFaOoQEnPa4adrXWxMvOmel8IGqJiQ+BPOaLQG64\\r\\n#
  Qu2tMkH/5szb1fsEnCe8SJmy5ESF+kmpnLBtJ17Y9o+9nJHF5ddFmvzy+LUaIqDN\\r\\n#
  cOfH\\r\\n# SIG # End signature
  block\\r\\n\",\"installed\":[\"7.0.14~x64\"],\"axios-cache:-811074893\":{\"st\
  ate\":\"stale\",\"createdAt\":1700016533372,\"data\":{\"data\":\"#\\r\\n#
  Copyright (c) .NET Foundation and contributors. All rights reserved.\\r\\n#
  Licensed under the MIT license. See LICENSE file in the project root for full
  license information.\\r\\n#\\r\\n\\r\\n<#\\r\\n.SYNOPSIS\\r\\n    Installs
  dotnet cli\\r\\n.DESCRIPTION\\r\\n    Installs dotnet cli. If dotnet
  installation already exists in the given directory\\r\\n    it will update it
  only if the requested version differs from the one already
  installed.\\r\\n\\r\\n    Note that the intended use of this script is for
  Continuous Integration (CI) scenarios, where:\\r\\n    - The SDK needs to be
  installed without user interaction and without admin rights.\\r\\n    - The
  SDK installation doesn't need to persist across multiple CI runs.\\r\\n    To
  set up a development environment or to run apps, use installers rather than
  this script. Visit https://dotnet.microsoft.com/download to get the
  installer.\\r\\n\\r\\n.PARAMETER Channel\\r\\n    Default:
  LTS\\r\\n    Download from the Channel specified. Possible values:\\r\\n    -
  STS - the most recent Standard Term Support release\\r\\n    - LTS - the most
  recent Long Term Support release\\r\\n    - 2-part version in a format A.B -
  represents a specific release\\r\\n          examples: 2.0, 1.0\\r\\n    -
  3-part version in a format A.B.Cxx - represents a specific SDK
  release\\r\\n          examples: 5.0.1xx, 5.0.2xx\\r\\n          Supported
  since 5.0 release\\r\\n    Warning: Value \\\"Current\\\" is deprecated for
  the Channel parameter. Use \\\"STS\\\" instead.\\r\\n    Note: The version
  parameter overrides the channel parameter when any version other than 'latest'
  is used.\\r\\n.PARAMETER Quality\\r\\n    Download the latest build of
  specified quality in the channel. The possible values are: daily, signed,
  validated, preview, GA.\\r\\n    Works only in combination with channel. Not
  applicable for STS and LTS channels and will be ignored if those channels are
  used. \\r\\n    For SDK use channel in A.B.Cxx format: using quality together
  with channel in A.B format is not supported.\\r\\n    Supported since 5.0
  release.\\r\\n    Note: The version parameter overrides the channel parameter
  when any version other than 'latest' is used, and therefore overrides the
  quality.     \\r\\n.PARAMETER Version\\r\\n    Default:
  latest\\r\\n    Represents a build version on specific channel. Possible
  values:\\r\\n    - latest - the latest build on specific channel\\r\\n    -
  3-part version in a format A.B.C - represents specific version of
  build\\r\\n          examples: 2.0.0-preview2-006120, 1.1.0\\r\\n.PARAMETER
  Internal\\r\\n    Download internal builds. Requires providing credentials via
  -FeedCredential parameter.\\r\\n.PARAMETER FeedCredential\\r\\n    Token to
  access Azure feed. Used as a query string to append to the Azure
  feed.\\r\\n    This parameter typically is not specified.\\r\\n.PARAMETER
  InstallDir\\r\\n    Default:
  %LocalAppData%\\\\Microsoft\\\\dotnet\\r\\n    Path to where to install
  dotnet. Note that binaries will be placed directly in a given
  directory.\\r\\n.PARAMETER Architecture\\r\\n    Default: <auto> - this value
  represents currently running OS architecture\\r\\n    Architecture of dotnet
  binaries to be installed.\\r\\n    Possible values are: <auto>, amd64, x64,
  x86, arm64, arm\\r\\n.PARAMETER SharedRuntime\\r\\n    This parameter is
  obsolete and may be removed in a future version of this script.\\r\\n    The
  recommended alternative is '-Runtime dotnet'.\\r\\n    Installs just the
  shared runtime bits, not the entire SDK.\\r\\n.PARAMETER
  Runtime\\r\\n    Installs just a shared runtime, not the entire
  SDK.\\r\\n    Possible values:\\r\\n        - dotnet     - the
  Microsoft.NETCore.App shared runtime\\r\\n        - aspnetcore - the
  Microsoft.AspNetCore.App shared runtime\\r\\n        - windowsdesktop - the
  Microsoft.WindowsDesktop.App shared runtime\\r\\n.PARAMETER DryRun\\r\\n    If
  set it will not perform installation but instead display what command line to
  use to consistently install\\r\\n    currently requested version of dotnet
  cli. In example if you specify version 'latest' it will display a
  link\\r\\n    with specific version so that this command can be used
  deterministicly in a build script.\\r\\n    It also displays binaries location
  if you prefer to install or download it yourself.\\r\\n.PARAMETER
  NoPath\\r\\n    By default this script will set environment variable PATH for
  the current process to the binaries folder inside installation
  folder.\\r\\n    If set it will display binaries location but not set any
  environment variable.\\r\\n.PARAMETER Verbose\\r\\n    Displays diagnostics
  information.\\r\\n.PARAMETER AzureFeed\\r\\n    Default:
  https://dotnetcli.azureedge.net/dotnet\\r\\n    For internal use
  only.\\r\\n    Allows using a different storage to download SDK archives
  from.\\r\\n    This parameter is only used if $NoCdn is false.\\r\\n.PARAMETER
  UncachedFeed\\r\\n    For internal use only.\\r\\n    Allows using a different
  storage to download SDK archives from.\\r\\n    This parameter is only used if
  $NoCdn is true.\\r\\n.PARAMETER ProxyAddress\\r\\n    If set, the installer
  will use the proxy when making web requests\\r\\n.PARAMETER
  ProxyUseDefaultCredentials\\r\\n    Default: false\\r\\n    Use default
  credentials, when using proxy address.\\r\\n.PARAMETER
  ProxyBypassList\\r\\n    If set with ProxyAddress, will provide the list of
  comma separated urls that will bypass the proxy\\r\\n.PARAMETER
  SkipNonVersionedFiles\\r\\n    Default: false\\r\\n    Skips installing
  non-versioned files if they already exist, such as dotnet.exe.\\r\\n.PARAMETER
  NoCdn\\r\\n    Disable downloading from the Azure CDN, and use the uncached
  feed directly.\\r\\n.PARAMETER JSonFile\\r\\n    Determines the SDK version
  from a user specified global.json file\\r\\n    Note: global.json must have a
  value for 'SDK:Version'\\r\\n.PARAMETER DownloadTimeout\\r\\n    Determines
  timeout duration in seconds for dowloading of the SDK file\\r\\n    Default:
  1200 seconds (20 minutes)\\r\\n.PARAMETER KeepZip\\r\\n    If set, downloaded
  file is kept\\r\\n.PARAMETER ZipPath\\r\\n    Use that path to store
  installer, generated by
  default\\r\\n#>\\r\\n[cmdletbinding()]\\r\\nparam(\\r\\n   [string]$Channel=\\\
  \"LTS\\\",\\r\\n   [string]$Quality,\\r\\n   [string]$Version=\\\"Latest\\\",\
  \\r\\n   [switch]$Internal,\\r\\n   [string]$JSonFile,\\r\\n   [Alias('i')][s\
  tring]$InstallDir=\\\"<auto>\\\",\\r\\n   [string]$Architecture=\\\"<auto>\\\
  \",\\r\\n   [string]$Runtime,\\r\\n   [Obsolete(\\\"This parameter may be
  removed in a future version of this script. The recommended alternative is
  '-Runtime
  dotnet'.\\\")]\\r\\n   [switch]$SharedRuntime,\\r\\n   [switch]$DryRun,\\r\\n   \
  [switch]$NoPath,\\r\\n   [string]$AzureFeed,\\r\\n   [string]$UncachedFeed,\\r\
  \\n   [string]$FeedCredential,\\r\\n   [string]$ProxyAddress,\\r\\n   [switch\
  ]$ProxyUseDefaultCredentials,\\r\\n   [string[]]$ProxyBypassList=@(),\\r\\n   \
  [switch]$SkipNonVersionedFiles,\\r\\n   [switch]$NoCdn,\\r\\n   [int]$Downloa\
  dTimeout=1200,\\r\\n   [switch]$KeepZip,\\r\\n   [string]$ZipPath=[System.IO.\
  Path]::combine([System.IO.Path]::GetTempPath(),
  [System.IO.Path]::GetRandomFileName())\\r\\n)\\r\\n\\r\\nSet-StrictMode
  -Version
  Latest\\r\\n$ErrorActionPreference=\\\"Stop\\\"\\r\\n$ProgressPreference=\\\"\
  SilentlyContinue\\\"\\r\\n\\r\\nfunction Say($str) {\\r\\n    try
  {\\r\\n        Write-Host \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n    catch {\\r\\n        # Some platforms cannot
  utilize Write-Host (Azure Functions, for instance). Fall back to
  Write-Output\\r\\n        Write-Output \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction Say-Warning($str)
  {\\r\\n    try {\\r\\n        Write-Warning \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n    catch {\\r\\n        # Some platforms cannot
  utilize Write-Warning (Azure Functions, for instance). Fall back to
  Write-Output\\r\\n        Write-Output \\\"dotnet-install: Warning:
  $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\n# Writes a line with error style
  settings.\\r\\n# Use this function to show a human-readable comment along with
  an exception.\\r\\nfunction Say-Error($str) {\\r\\n    try {\\r\\n        #
  Write-Error is quite oververbose for the purpose of the function, let's write
  one line with error style
  settings.\\r\\n        $Host.UI.WriteErrorLine(\\\"dotnet-install:
  $str\\\")\\r\\n    }\\r\\n    catch {\\r\\n        Write-Output
  \\\"dotnet-install: Error: $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Say-Verbose($str) {\\r\\n    try {\\r\\n        Write-Verbose
  \\\"dotnet-install: $str\\\"\\r\\n    }\\r\\n    catch {\\r\\n        # Some
  platforms cannot utilize Write-Verbose (Azure Functions, for instance). Fall
  back to Write-Output\\r\\n        Write-Output \\\"dotnet-install:
  $str\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction Measure-Action($name, $block)
  {\\r\\n    $time = Measure-Command $block\\r\\n    $totalSeconds =
  $time.TotalSeconds\\r\\n    Say-Verbose \\\"⏱ Action '$name' took
  $totalSeconds seconds\\\"\\r\\n}\\r\\n\\r\\nfunction
  Get-Remote-File-Size($zipUri) {\\r\\n    try {\\r\\n        $response =
  Invoke-WebRequest -Uri $zipUri -Method Head\\r\\n        $fileSize =
  $response.Headers[\\\"Content-Length\\\"]\\r\\n        if
  ((![string]::IsNullOrEmpty($fileSize))) {\\r\\n            Say \\\"Remote file
  $zipUri size is $fileSize bytes.\\\"\\r\\n        \\r\\n            return
  $fileSize\\r\\n        }\\r\\n    }\\r\\n    catch {\\r\\n        Say-Verbose
  \\\"Content-Length header was not extracted for
  $zipUri.\\\"\\r\\n    }\\r\\n\\r\\n    return $null\\r\\n}\\r\\n\\r\\nfunction
  Say-Invocation($Invocation) {\\r\\n    $command =
  $Invocation.MyCommand;\\r\\n    $args = (($Invocation.BoundParameters.Keys |
  foreach { \\\"-$_ `\\\"$($Invocation.BoundParameters[$_])`\\\"\\\" }) -join
  \\\" \\\")\\r\\n    Say-Verbose \\\"$command
  $args\\\"\\r\\n}\\r\\n\\r\\nfunction
  Invoke-With-Retry([ScriptBlock]$ScriptBlock,
  [System.Threading.CancellationToken]$cancellationToken =
  [System.Threading.CancellationToken]::None, [int]$MaxAttempts = 3,
  [int]$SecondsBetweenAttempts = 1) {\\r\\n    $Attempts =
  0\\r\\n    $local:startTime = $(get-date)\\r\\n\\r\\n    while ($true)
  {\\r\\n        try {\\r\\n            return &
  $ScriptBlock\\r\\n        }\\r\\n        catch
  {\\r\\n            $Attempts++\\r\\n            if (($Attempts -lt
  $MaxAttempts) -and -not $cancellationToken.IsCancellationRequested)
  {\\r\\n                Start-Sleep
  $SecondsBetweenAttempts\\r\\n            }\\r\\n            else
  {\\r\\n                $local:elapsedTime = $(get-date) -
  $local:startTime\\r\\n                if (($local:elapsedTime.TotalSeconds -
  $DownloadTimeout) -gt 0 -and -not $cancellationToken.IsCancellationRequested)
  {\\r\\n                    throw New-Object System.TimeoutException(\\\"Failed
  to reach the server: connection timeout: default timeout is $DownloadTimeout
  second(s)\\\");\\r\\n                }\\r\\n                throw;\\r\\n            \
  }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-Machine-Architecture() {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    # On PS x86, PROCESSOR_ARCHITECTURE reports x86
  even on x64 systems.\\r\\n    # To get the correct architecture, we need to
  use PROCESSOR_ARCHITEW6432.\\r\\n    # PS x64 doesn't define this, so we fall
  back to PROCESSOR_ARCHITECTURE.\\r\\n    # Possible values: amd64, x64, x86,
  arm64, arm\\r\\n    if( $ENV:PROCESSOR_ARCHITEW6432 -ne $null )
  {\\r\\n        return
  $ENV:PROCESSOR_ARCHITEW6432\\r\\n    }\\r\\n\\r\\n    try
  {        \\r\\n        if( ((Get-CimInstance -ClassName
  CIM_OperatingSystem).OSArchitecture) -like \\\"ARM*\\\")
  {\\r\\n            if( [Environment]::Is64BitOperatingSystem
  )\\r\\n            {\\r\\n                return
  \\\"arm64\\\"\\r\\n            }  \\r\\n            return
  \\\"arm\\\"\\r\\n        }\\r\\n    }\\r\\n    catch {\\r\\n        # Machine
  doesn't support Get-CimInstance\\r\\n    }\\r\\n\\r\\n    return
  $ENV:PROCESSOR_ARCHITECTURE\\r\\n}\\r\\n\\r\\nfunction
  Get-CLIArchitecture-From-Architecture([string]$Architecture)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    if ($Architecture -eq
  \\\"<auto>\\\") {\\r\\n        $Architecture =
  Get-Machine-Architecture\\r\\n    }\\r\\n\\r\\n    switch
  ($Architecture.ToLowerInvariant()) {\\r\\n        { ($_ -eq \\\"amd64\\\") -or
  ($_ -eq \\\"x64\\\") } { return \\\"x64\\\" }\\r\\n        { $_ -eq
  \\\"x86\\\" } { return \\\"x86\\\" }\\r\\n        { $_ -eq \\\"arm\\\" } {
  return \\\"arm\\\" }\\r\\n        { $_ -eq \\\"arm64\\\" } { return
  \\\"arm64\\\" }\\r\\n        default { throw \\\"Architecture '$Architecture'
  not supported. If you think this is a bug, report it at
  https://github.com/dotnet/install-scripts/issues\\\"
  }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction ValidateFeedCredential([string]
  $FeedCredential)\\r\\n{\\r\\n    if ($Internal -and
  [string]::IsNullOrWhitespace($FeedCredential)) {\\r\\n        $message =
  \\\"Provide credentials via -FeedCredential parameter.\\\"\\r\\n        if
  ($DryRun) {\\r\\n            Say-Warning \\\"$message\\\"\\r\\n        } else
  {\\r\\n            throw
  \\\"$message\\\"\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    #FeedCredential
  should start with \\\"?\\\", for it to be added to the end of the
  link.\\r\\n    #adding \\\"?\\\" at the beginning of the FeedCredential if
  needed.\\r\\n    if ((![string]::IsNullOrWhitespace($FeedCredential)) -and
  ($FeedCredential[0] -ne '?')) {\\r\\n        $FeedCredential = \\\"?\\\" +
  $FeedCredential\\r\\n    }\\r\\n\\r\\n    return
  $FeedCredential\\r\\n}\\r\\nfunction Get-NormalizedQuality([string]$Quality)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    if
  ([string]::IsNullOrEmpty($Quality)) {\\r\\n        return
  \\\"\\\"\\r\\n    }\\r\\n\\r\\n    switch ($Quality) {\\r\\n        {
  @(\\\"daily\\\", \\\"signed\\\", \\\"validated\\\", \\\"preview\\\") -contains
  $_ } { return $Quality.ToLowerInvariant() }\\r\\n        #ga quality is
  available without specifying quality, so normalizing it to
  empty\\r\\n        { $_ -eq \\\"ga\\\" } { return \\\"\\\"
  }\\r\\n        default { throw \\\"'$Quality' is not a supported value for
  -Quality option. Supported values are: daily, signed, validated, preview, ga.
  If you think this is a bug, report it at
  https://github.com/dotnet/install-scripts/issues.\\\"
  }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-NormalizedChannel([string]$Channel) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if ([string]::IsNullOrEmpty($Channel))
  {\\r\\n        return \\\"\\\"\\r\\n    }\\r\\n\\r\\n    if
  ($Channel.Contains(\\\"Current\\\")) {\\r\\n        Say-Warning 'Value
  \\\"Current\\\" is deprecated for -Channel option. Use \\\"STS\\\"
  instead.'\\r\\n    }\\r\\n\\r\\n    if ($Channel.StartsWith('release/'))
  {\\r\\n        Say-Warning 'Using branch name with -Channel option is no
  longer supported with newer releases. Use -Quality option with a channel in
  X.Y format instead, such as \\\"-Channel 5.0 -Quality
  Daily.\\\"'\\r\\n    }\\r\\n\\r\\n    switch ($Channel) {\\r\\n        { $_
  -eq \\\"lts\\\" } { return \\\"LTS\\\" }\\r\\n        { $_ -eq \\\"sts\\\" } {
  return \\\"STS\\\" }\\r\\n        { $_ -eq \\\"current\\\" } { return
  \\\"STS\\\" }\\r\\n        default { return $Channel.ToLowerInvariant()
  }\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-NormalizedProduct([string]$Runtime) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    switch ($Runtime) {\\r\\n        { $_ -eq
  \\\"dotnet\\\" } { return \\\"dotnet-runtime\\\" }\\r\\n        { $_ -eq
  \\\"aspnetcore\\\" } { return \\\"aspnetcore-runtime\\\" }\\r\\n        { $_
  -eq \\\"windowsdesktop\\\" } { return \\\"windowsdesktop-runtime\\\"
  }\\r\\n        { [string]::IsNullOrEmpty($_) } { return \\\"dotnet-sdk\\\"
  }\\r\\n        default { throw \\\"'$Runtime' is not a supported value for
  -Runtime option, supported values are: dotnet, aspnetcore, windowsdesktop. If
  you think this is a bug, report it at
  https://github.com/dotnet/install-scripts/issues.\\\"
  }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n# The version text returned from the
  feeds is a 1-line or 2-line string:\\r\\n# For the SDK and the dotnet runtime
  (2 lines):\\r\\n# Line 1: # commit_hash\\r\\n# Line 2: # 4-part version\\r\\n#
  For the aspnetcore runtime (1 line):\\r\\n# Line 1: # 4-part
  version\\r\\nfunction
  Get-Version-From-LatestVersion-File-Content([string]$VersionText)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    $Data = -split
  $VersionText\\r\\n\\r\\n    $VersionInfo = @{\\r\\n        CommitHash = $(if
  ($Data.Count -gt 1) { $Data[0] })\\r\\n        Version = $Data[-1] # last line
  is always the version number.\\r\\n    }\\r\\n    return
  $VersionInfo\\r\\n}\\r\\n\\r\\nfunction Load-Assembly([string] $Assembly)
  {\\r\\n    try {\\r\\n        Add-Type -Assembly $Assembly |
  Out-Null\\r\\n    }\\r\\n    catch {\\r\\n        # On Nano Server, Powershell
  Core Edition is used.  Add-Type is unable to resolve base class assemblies
  because they are not GAC'd.\\r\\n        # Loading the base class assemblies
  is not unnecessary as the types will automatically get
  resolved.\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction GetHTTPResponse([Uri] $Uri,
  [bool]$HeaderOnly, [bool]$DisableRedirect,
  [bool]$DisableFeedCredential)\\r\\n{\\r\\n    $cts = New-Object
  System.Threading.CancellationTokenSource\\r\\n\\r\\n    $downloadScript =
  {\\r\\n\\r\\n        $HttpClient = $null\\r\\n\\r\\n        try
  {\\r\\n            # HttpClient is used vs Invoke-WebRequest in order to
  support Nano Server which doesn't support the Invoke-WebRequest
  cmdlet.\\r\\n            Load-Assembly -Assembly
  System.Net.Http\\r\\n\\r\\n            if(-not $ProxyAddress)
  {\\r\\n                try {\\r\\n                    # Despite no proxy being
  explicitly specified, we may still be behind a default
  proxy\\r\\n                    $DefaultProxy =
  [System.Net.WebRequest]::DefaultWebProxy;\\r\\n                    if($Defaul\
  tProxy -and (-not $DefaultProxy.IsBypassed($Uri)))
  {\\r\\n                        if ($null -ne $DefaultProxy.GetProxy($Uri))
  {\\r\\n                            $ProxyAddress =
  $DefaultProxy.GetProxy($Uri).OriginalString\\r\\n                        }
  else {\\r\\n                            $ProxyAddress =
  $null\\r\\n                        }\\r\\n                        $ProxyUseDe\
  faultCredentials = $true\\r\\n                    }\\r\\n                }
  catch {\\r\\n                    # Eat the exception and move forward as the
  above code is an attempt\\r\\n                    #    at resolving the
  DefaultProxy that may not have been a
  problem.\\r\\n                    $ProxyAddress =
  $null\\r\\n                    Say-Verbose(\\\"Exception ignored:
  $_.Exception.Message - moving
  forward...\\\")\\r\\n                }\\r\\n            }\\r\\n\\r\\n            \
  $HttpClientHandler = New-Object
  System.Net.Http.HttpClientHandler\\r\\n            if($ProxyAddress)
  {\\r\\n                $HttpClientHandler.Proxy =  New-Object
  System.Net.WebProxy -Property
  @{\\r\\n                    Address=$ProxyAddress;\\r\\n                    U\
  seDefaultCredentials=$ProxyUseDefaultCredentials;\\r\\n                    By\
  passList =
  $ProxyBypassList;\\r\\n                }\\r\\n            }       \\r\\n            \
  if
  ($DisableRedirect)\\r\\n            {\\r\\n                $HttpClientHandler\
  .AllowAutoRedirect = $false\\r\\n            }\\r\\n            $HttpClient =
  New-Object System.Net.Http.HttpClient -ArgumentList
  $HttpClientHandler\\r\\n\\r\\n            # Default timeout for HttpClient is
  100s.  For a 50 MB download this assumes 500 KB/s average, any less will time
  out\\r\\n            # Defaulting to 20 minutes allows it to work over much
  slower connections.\\r\\n            $HttpClient.Timeout = New-TimeSpan
  -Seconds $DownloadTimeout\\r\\n\\r\\n            if
  ($HeaderOnly){\\r\\n                $completionOption =
  [System.Net.Http.HttpCompletionOption]::ResponseHeadersRead\\r\\n            }\
  \\r\\n            else {\\r\\n                $completionOption =
  [System.Net.Http.HttpCompletionOption]::ResponseContentRead\\r\\n            }\
  \\r\\n\\r\\n            if ($DisableFeedCredential)
  {\\r\\n                $UriWithCredential =
  $Uri\\r\\n            }\\r\\n            else
  {\\r\\n                $UriWithCredential =
  \\\"${Uri}${FeedCredential}\\\"\\r\\n            }\\r\\n\\r\\n            $Ta\
  sk = $HttpClient.GetAsync(\\\"$UriWithCredential\\\",
  $completionOption).ConfigureAwait(\\\"false\\\");\\r\\n            $Response =
  $Task.GetAwaiter().GetResult();\\r\\n\\r\\n            if (($null -eq
  $Response) -or ((-not $HeaderOnly) -and (-not
  ($Response.IsSuccessStatusCode)))) {\\r\\n                # The feed
  credential is potentially sensitive info. Do not log FeedCredential to console
  output.\\r\\n                $DownloadException = [System.Exception]
  \\\"Unable to download $Uri.\\\"\\r\\n\\r\\n                if ($null -ne
  $Response)
  {\\r\\n                    $DownloadException.Data[\\\"StatusCode\\\"] = [int]
  $Response.StatusCode\\r\\n                    $DownloadException.Data[\\\"Err\
  orMessage\\\"] = \\\"Unable to download $Uri. Returned HTTP status code: \\\"
  +
  $DownloadException.Data[\\\"StatusCode\\\"]\\r\\n\\r\\n                    if
  (404 -eq [int]
  $Response.StatusCode)\\r\\n                    {\\r\\n                        \
  $cts.Cancel()\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                \
  throw $DownloadException\\r\\n            }\\r\\n\\r\\n            return
  $Response\\r\\n        }\\r\\n        catch
  [System.Net.Http.HttpRequestException] {\\r\\n            $DownloadException =
  [System.Exception] \\\"Unable to download $Uri.\\\"\\r\\n\\r\\n            #
  Pick up the exception message and inner exceptions' messages if they
  exist\\r\\n            $CurrentException =
  $PSItem.Exception\\r\\n            $ErrorMsg = $CurrentException.Message +
  \\\"`r`n\\\"\\r\\n            while ($CurrentException.InnerException)
  {\\r\\n              $CurrentException =
  $CurrentException.InnerException\\r\\n              $ErrorMsg +=
  $CurrentException.Message +
  \\\"`r`n\\\"\\r\\n            }\\r\\n\\r\\n            # Check if there is an
  issue concerning TLS.\\r\\n            if ($ErrorMsg -like \\\"*SSL/TLS*\\\")
  {\\r\\n                $ErrorMsg += \\\"Ensure that TLS 1.2 or higher is
  enabled to use this
  script.`r`n\\\"\\r\\n            }\\r\\n\\r\\n            $DownloadException.\
  Data[\\\"ErrorMessage\\\"] = $ErrorMsg\\r\\n            throw
  $DownloadException\\r\\n        }\\r\\n        finally {\\r\\n             if
  ($null -ne $HttpClient)
  {\\r\\n                $HttpClient.Dispose()\\r\\n            }\\r\\n        }\
  \\r\\n    }\\r\\n\\r\\n    try {\\r\\n        return Invoke-With-Retry
  $downloadScript
  $cts.Token\\r\\n    }\\r\\n    finally\\r\\n    {\\r\\n        if ($null -ne
  $cts)\\r\\n        {\\r\\n            $cts.Dispose()\\r\\n        }\\r\\n    }\
  \\r\\n}\\r\\n\\r\\nfunction
  Get-Version-From-LatestVersion-File([string]$AzureFeed, [string]$Channel)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    $VersionFileUrl =
  $null\\r\\n    if ($Runtime -eq \\\"dotnet\\\") {\\r\\n        $VersionFileUrl
  =
  \\\"$AzureFeed/Runtime/$Channel/latest.version\\\"\\r\\n    }\\r\\n    elseif
  ($Runtime -eq \\\"aspnetcore\\\") {\\r\\n        $VersionFileUrl =
  \\\"$AzureFeed/aspnetcore/Runtime/$Channel/latest.version\\\"\\r\\n    }\\r\\\
  n    elseif ($Runtime -eq \\\"windowsdesktop\\\")
  {\\r\\n        $VersionFileUrl =
  \\\"$AzureFeed/WindowsDesktop/$Channel/latest.version\\\"\\r\\n    }\\r\\n    \
  elseif (-not $Runtime) {\\r\\n        $VersionFileUrl =
  \\\"$AzureFeed/Sdk/$Channel/latest.version\\\"\\r\\n    }\\r\\n    else
  {\\r\\n        throw \\\"Invalid value for
  `$Runtime\\\"\\r\\n    }\\r\\n\\r\\n    Say-Verbose \\\"Constructed
  latest.version URL: $VersionFileUrl\\\"\\r\\n\\r\\n    try
  {\\r\\n        $Response = GetHTTPResponse -Uri
  $VersionFileUrl\\r\\n    }\\r\\n    catch {\\r\\n        Say-Verbose
  \\\"Failed to download latest.version
  file.\\\"\\r\\n        throw\\r\\n    }\\r\\n    $StringContent =
  $Response.Content.ReadAsStringAsync().Result\\r\\n\\r\\n    switch
  ($Response.Content.Headers.ContentType) {\\r\\n        { ($_ -eq
  \\\"application/octet-stream\\\") } { $VersionText = $StringContent
  }\\r\\n        { ($_ -eq \\\"text/plain\\\") } { $VersionText = $StringContent
  }\\r\\n        { ($_ -eq \\\"text/plain; charset=UTF-8\\\") } { $VersionText =
  $StringContent }\\r\\n        default { throw
  \\\"``$Response.Content.Headers.ContentType`` is an unknown .version file
  content type.\\\" }\\r\\n    }\\r\\n\\r\\n    $VersionInfo =
  Get-Version-From-LatestVersion-File-Content $VersionText\\r\\n\\r\\n    return
  $VersionInfo\\r\\n}\\r\\n\\r\\nfunction
  Parse-Jsonfile-For-Version([string]$JSonFile) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    If (-Not (Test-Path $JSonFile))
  {\\r\\n        throw \\\"Unable to find
  '$JSonFile'\\\"\\r\\n    }\\r\\n    try {\\r\\n        $JSonContent =
  Get-Content($JSonFile) -Raw | ConvertFrom-Json | Select-Object -expand
  \\\"sdk\\\" -ErrorAction SilentlyContinue\\r\\n    }\\r\\n    catch
  {\\r\\n        Say-Error \\\"Json file unreadable:
  '$JSonFile'\\\"\\r\\n        throw\\r\\n    }\\r\\n    if ($JSonContent)
  {\\r\\n        try {\\r\\n            $JSonContent.PSObject.Properties |
  ForEach-Object {\\r\\n                $PropertyName =
  $_.Name\\r\\n                if ($PropertyName -eq \\\"version\\\")
  {\\r\\n                    $Version =
  $_.Value\\r\\n                    Say-Verbose \\\"Version =
  $Version\\\"\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        \
  catch {\\r\\n            Say-Error \\\"Unable to parse the SDK node in
  '$JSonFile'\\\"\\r\\n            throw\\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        throw \\\"Unable to find the SDK node in
  '$JSonFile'\\\"\\r\\n    }\\r\\n    If ($Version -eq $null)
  {\\r\\n        throw \\\"Unable to find the SDK:version node in
  '$JSonFile'\\\"\\r\\n    }\\r\\n    return $Version\\r\\n}\\r\\n\\r\\nfunction
  Get-Specific-Version-From-Version([string]$AzureFeed, [string]$Channel,
  [string]$Version, [string]$JSonFile) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if (-not $JSonFile) {\\r\\n        if
  ($Version.ToLowerInvariant() -eq \\\"latest\\\")
  {\\r\\n            $LatestVersionInfo = Get-Version-From-LatestVersion-File
  -AzureFeed $AzureFeed -Channel $Channel\\r\\n            return
  $LatestVersionInfo.Version\\r\\n        }\\r\\n        else
  {\\r\\n            return $Version \\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        return Parse-Jsonfile-For-Version
  $JSonFile\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-Download-Link([string]$AzureFeed, [string]$SpecificVersion,
  [string]$CLIArchitecture) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    # If anything fails in this lookup it will
  default to $SpecificVersion\\r\\n    $SpecificProductVersion =
  Get-Product-Version -AzureFeed $AzureFeed -SpecificVersion
  $SpecificVersion\\r\\n\\r\\n    if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/dotnet-runtime-$SpecificProductVersio\
  n-win-$CLIArchitecture.zip\\\"\\r\\n    }\\r\\n    elseif ($Runtime -eq
  \\\"aspnetcore\\\") {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/aspnetcore/Runtime/$SpecificVersion/aspnetcore-runtime-$Specif\
  icProductVersion-win-$CLIArchitecture.zip\\\"\\r\\n    }\\r\\n    elseif
  ($Runtime -eq \\\"windowsdesktop\\\") {\\r\\n        # The windows desktop
  runtime is part of the core runtime layout prior to
  5.0\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/windowsdesktop-runtime-$SpecificProdu\
  ctVersion-win-$CLIArchitecture.zip\\\"\\r\\n        if ($SpecificVersion
  -match '^(\\\\d+)\\\\.(.*)$')\\r\\n        {\\r\\n            $majorVersion =
  [int]$Matches[1]\\r\\n            if ($majorVersion -ge
  5)\\r\\n            {\\r\\n                $PayloadURL =
  \\\"$AzureFeed/WindowsDesktop/$SpecificVersion/windowsdesktop-runtime-$Specif\
  icProductVersion-win-$CLIArchitecture.zip\\\"\\r\\n            }\\r\\n        \
  }\\r\\n    }\\r\\n    elseif (-not $Runtime) {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Sdk/$SpecificVersion/dotnet-sdk-$SpecificProductVersion-win-$C\
  LIArchitecture.zip\\\"\\r\\n    }\\r\\n    else {\\r\\n        throw
  \\\"Invalid value for `$Runtime\\\"\\r\\n    }\\r\\n\\r\\n    Say-Verbose
  \\\"Constructed primary named payload URL:
  $PayloadURL\\\"\\r\\n\\r\\n    return $PayloadURL,
  $SpecificProductVersion\\r\\n}\\r\\n\\r\\nfunction
  Get-LegacyDownload-Link([string]$AzureFeed, [string]$SpecificVersion,
  [string]$CLIArchitecture) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if (-not $Runtime) {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Sdk/$SpecificVersion/dotnet-dev-win-$CLIArchitecture.$Specific\
  Version.zip\\\"\\r\\n    }\\r\\n    elseif ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n        $PayloadURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/dotnet-win-$CLIArchitecture.$Specific\
  Version.zip\\\"\\r\\n    }\\r\\n    else {\\r\\n        return
  $null\\r\\n    }\\r\\n\\r\\n    Say-Verbose \\\"Constructed legacy named
  payload URL: $PayloadURL\\\"\\r\\n\\r\\n    return
  $PayloadURL\\r\\n}\\r\\n\\r\\nfunction Get-Product-Version([string]$AzureFeed,
  [string]$SpecificVersion, [string]$PackageDownloadLink)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    # Try to get the
  version number, using the productVersion.txt file located next to the
  installer file.\\r\\n    $ProductVersionTxtURLs = (Get-Product-Version-Url
  $AzureFeed $SpecificVersion $PackageDownloadLink -Flattened
  $true),\\r\\n                             (Get-Product-Version-Url $AzureFeed
  $SpecificVersion $PackageDownloadLink -Flattened
  $false)\\r\\n    \\r\\n    Foreach ($ProductVersionTxtURL in
  $ProductVersionTxtURLs) {\\r\\n        Say-Verbose \\\"Checking for the
  existence of $ProductVersionTxtURL\\\"\\r\\n\\r\\n        try
  {\\r\\n            $productVersionResponse =
  GetHTTPResponse($productVersionTxtUrl)\\r\\n\\r\\n            if
  ($productVersionResponse.StatusCode -eq 200)
  {\\r\\n                $productVersion =
  $productVersionResponse.Content.ReadAsStringAsync().Result.Trim()\\r\\n                \
  if ($productVersion -ne
  $SpecificVersion)\\r\\n                {\\r\\n                    Say
  \\\"Using alternate version $productVersion found in
  $ProductVersionTxtURL\\\"\\r\\n                }\\r\\n                return
  $productVersion\\r\\n            }\\r\\n            else
  {\\r\\n                Say-Verbose \\\"Got StatusCode
  $($productVersionResponse.StatusCode) when trying to get productVersion.txt at
  $productVersionTxtUrl.\\\"\\r\\n            }\\r\\n        }
  \\r\\n        catch {\\r\\n            Say-Verbose \\\"Could not read
  productVersion.txt at $productVersionTxtUrl (Exception:
  '$($_.Exception.Message)'. )\\\"\\r\\n        }\\r\\n    }\\r\\n\\r\\n    #
  Getting the version number with productVersion.txt has failed. Try parsing the
  download link for a version number.\\r\\n    if
  ([string]::IsNullOrEmpty($PackageDownloadLink))\\r\\n    {\\r\\n        Say-V\
  erbose \\\"Using the default value '$SpecificVersion' as the product
  version.\\\"\\r\\n        return
  $SpecificVersion\\r\\n    }\\r\\n\\r\\n    $productVersion =
  Get-ProductVersionFromDownloadLink $PackageDownloadLink
  $SpecificVersion\\r\\n    return $productVersion\\r\\n}\\r\\n\\r\\nfunction
  Get-Product-Version-Url([string]$AzureFeed, [string]$SpecificVersion,
  [string]$PackageDownloadLink, [bool]$Flattened) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    $majorVersion=$null\\r\\n    if ($SpecificVersion
  -match '^(\\\\d+)\\\\.(.*)') {\\r\\n        $majorVersion = $Matches[1]
  -as[int]\\r\\n    }\\r\\n\\r\\n    $pvFileName='productVersion.txt'\\r\\n    \
  if($Flattened) {\\r\\n        if(-not $Runtime)
  {\\r\\n            $pvFileName='sdk-productVersion.txt'\\r\\n        }\\r\\n        \
  elseif($Runtime -eq \\\"dotnet\\\")
  {\\r\\n            $pvFileName='runtime-productVersion.txt'\\r\\n        }\\r\
  \\n        else
  {\\r\\n            $pvFileName=\\\"$Runtime-productVersion.txt\\\"\\r\\n        \
  }\\r\\n    }\\r\\n\\r\\n    if ([string]::IsNullOrEmpty($PackageDownloadLink))
  {\\r\\n        if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/$pvFileName\\\"\\r\\n        }\\r\\n        \
  elseif ($Runtime -eq \\\"aspnetcore\\\")
  {\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/aspnetcore/Runtime/$SpecificVersion/$pvFileName\\\"\\r\\n        \
  }\\r\\n        elseif ($Runtime -eq \\\"windowsdesktop\\\")
  {\\r\\n            # The windows desktop runtime is part of the core runtime
  layout prior to 5.0\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/Runtime/$SpecificVersion/$pvFileName\\\"\\r\\n            if
  ($majorVersion -ne $null -and $majorVersion -ge 5)
  {\\r\\n                $ProductVersionTxtURL =
  \\\"$AzureFeed/WindowsDesktop/$SpecificVersion/$pvFileName\\\"\\r\\n            \
  }\\r\\n        }\\r\\n        elseif (-not $Runtime)
  {\\r\\n            $ProductVersionTxtURL =
  \\\"$AzureFeed/Sdk/$SpecificVersion/$pvFileName\\\"\\r\\n        }\\r\\n        \
  else {\\r\\n            throw \\\"Invalid value '$Runtime' specified for
  `$Runtime\\\"\\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        $ProductVersionTxtURL = $PackageDownloadLink.Substring(0,
  $PackageDownloadLink.LastIndexOf(\\\"/\\\"))  +
  \\\"/$pvFileName\\\"\\r\\n    }\\r\\n\\r\\n    Say-Verbose \\\"Constructed
  productVersion link: $ProductVersionTxtURL\\\"\\r\\n\\r\\n    return
  $ProductVersionTxtURL\\r\\n}\\r\\n\\r\\nfunction
  Get-ProductVersionFromDownloadLink([string]$PackageDownloadLink,
  [string]$SpecificVersion)\\r\\n{\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    #product specific version follows the product
  name\\r\\n    #for filename 'dotnet-sdk-3.1.404-win-x64.zip': the product
  version is 3.1.400\\r\\n    $filename =
  $PackageDownloadLink.Substring($PackageDownloadLink.LastIndexOf(\\\"/\\\") +
  1)\\r\\n    $filenameParts = $filename.Split('-')\\r\\n    if
  ($filenameParts.Length -gt 2)\\r\\n    {\\r\\n        $productVersion =
  $filenameParts[2]\\r\\n        Say-Verbose \\\"Extracted product version
  '$productVersion' from download link
  '$PackageDownloadLink'.\\\"\\r\\n    }\\r\\n    else
  {\\r\\n        Say-Verbose \\\"Using the default value '$SpecificVersion' as
  the product version.\\\"\\r\\n        $productVersion =
  $SpecificVersion\\r\\n    }\\r\\n    return $productVersion
  \\r\\n}\\r\\n\\r\\nfunction Get-User-Share-Path() {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    $InstallRoot =
  $env:DOTNET_INSTALL_DIR\\r\\n    if (!$InstallRoot)
  {\\r\\n        $InstallRoot =
  \\\"$env:LocalAppData\\\\Microsoft\\\\dotnet\\\"\\r\\n    }\\r\\n    return
  $InstallRoot\\r\\n}\\r\\n\\r\\nfunction
  Resolve-Installation-Path([string]$InstallDir) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    if ($InstallDir -eq \\\"<auto>\\\")
  {\\r\\n        return Get-User-Share-Path\\r\\n    }\\r\\n    return
  $InstallDir\\r\\n}\\r\\n\\r\\nfunction
  Is-Dotnet-Package-Installed([string]$InstallRoot,
  [string]$RelativePathToPackage, [string]$SpecificVersion)
  {\\r\\n    Say-Invocation $MyInvocation\\r\\n\\r\\n    $DotnetPackagePath =
  Join-Path -Path $InstallRoot -ChildPath $RelativePathToPackage | Join-Path
  -ChildPath $SpecificVersion\\r\\n    Say-Verbose
  \\\"Is-Dotnet-Package-Installed:
  DotnetPackagePath=$DotnetPackagePath\\\"\\r\\n    return Test-Path
  $DotnetPackagePath -PathType Container\\r\\n}\\r\\n\\r\\nfunction
  Get-Absolute-Path([string]$RelativeOrAbsolutePath) {\\r\\n    # Too much
  spam\\r\\n    # Say-Invocation $MyInvocation\\r\\n\\r\\n    return
  $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($Rela\
  tiveOrAbsolutePath)\\r\\n}\\r\\n\\r\\nfunction
  Get-Path-Prefix-With-Version($path) {\\r\\n    # example path with regex:
  shared/1.0.0-beta-12345/somepath\\r\\n    $match = [regex]::match($path,
  \\\"/\\\\d+\\\\.\\\\d+[^/]+/\\\")\\r\\n    if ($match.Success)
  {\\r\\n        return $entry.FullName.Substring(0, $match.Index +
  $match.Length)\\r\\n    }\\r\\n\\r\\n    return
  $null\\r\\n}\\r\\n\\r\\nfunction
  Get-List-Of-Directories-And-Versions-To-Unpack-From-Dotnet-Package([System.IO\
  .Compression.ZipArchive]$Zip, [string]$OutPath) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    $ret = @()\\r\\n    foreach ($entry in
  $Zip.Entries) {\\r\\n        $dir = Get-Path-Prefix-With-Version
  $entry.FullName\\r\\n        if ($null -ne $dir) {\\r\\n            $path =
  Get-Absolute-Path $(Join-Path -Path $OutPath -ChildPath
  $dir)\\r\\n            if (-Not (Test-Path $path -PathType Container))
  {\\r\\n                $ret +=
  $dir\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    $ret = $ret |
  Sort-Object | Get-Unique\\r\\n\\r\\n    $values = ($ret | foreach { \\\"$_\\\"
  }) -join \\\";\\\"\\r\\n    Say-Verbose \\\"Directories to unpack:
  $values\\\"\\r\\n\\r\\n    return $ret\\r\\n}\\r\\n\\r\\n# Example zip content
  and extraction algorithm:\\r\\n# Rule: files if extracted are always being
  extracted to the same relative path locally\\r\\n#
  .\\\\\\r\\n#       a.exe   # file does not exist locally,
  extract\\r\\n#       b.dll   # file exists locally, override only if
  $OverrideFiles set\\r\\n#       aaa\\\\    # same rules as for
  files\\r\\n#           ...\\r\\n#       abc\\\\1.0.0\\\\  # directory contains
  version and exists locally\\r\\n#           ...     # do not extract content
  under versioned part\\r\\n#       abc\\\\asd\\\\    # same rules as for
  files\\r\\n#            ...\\r\\n#       def\\\\ghi\\\\1.0.1\\\\  # directory
  contains version and does not exist locally\\r\\n#           ...         #
  extract content\\r\\nfunction Extract-Dotnet-Package([string]$ZipPath,
  [string]$OutPath) {\\r\\n    Say-Invocation
  $MyInvocation\\r\\n\\r\\n    Load-Assembly -Assembly
  System.IO.Compression.FileSystem\\r\\n    Set-Variable -Name Zip\\r\\n    try
  {\\r\\n        $Zip =
  [System.IO.Compression.ZipFile]::OpenRead($ZipPath)\\r\\n\\r\\n        $Direc\
  toriesToUnpack =
  Get-List-Of-Directories-And-Versions-To-Unpack-From-Dotnet-Package -Zip $Zip
  -OutPath $OutPath\\r\\n\\r\\n        foreach ($entry in $Zip.Entries)
  {\\r\\n            $PathWithVersion = Get-Path-Prefix-With-Version
  $entry.FullName\\r\\n            if (($null -eq $PathWithVersion) -Or
  ($DirectoriesToUnpack -contains $PathWithVersion))
  {\\r\\n                $DestinationPath = Get-Absolute-Path $(Join-Path -Path
  $OutPath -ChildPath $entry.FullName)\\r\\n                $DestinationDir =
  Split-Path -Parent
  $DestinationPath\\r\\n                $OverrideFiles=$OverrideNonVersionedFil\
  es -Or (-Not (Test-Path $DestinationPath))\\r\\n                if ((-Not
  $DestinationPath.EndsWith(\\\"\\\\\\\")) -And $OverrideFiles)
  {\\r\\n                    New-Item -ItemType Directory -Force -Path
  $DestinationDir |
  Out-Null\\r\\n                    [System.IO.Compression.ZipFileExtensions]::\
  ExtractToFile($entry, $DestinationPath,
  $OverrideNonVersionedFiles)\\r\\n                }\\r\\n            }\\r\\n        \
  }\\r\\n    }\\r\\n    catch\\r\\n    {\\r\\n        Say-Error \\\"Failed to
  extract package. Exception:
  $_\\\"\\r\\n        throw;\\r\\n    }\\r\\n    finally {\\r\\n        if
  ($null -ne $Zip)
  {\\r\\n            $Zip.Dispose()\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\\
  nfunction DownloadFile($Source, [string]$OutPath) {\\r\\n    if ($Source
  -notlike \\\"http*\\\") {\\r\\n        #  Using System.IO.Path.GetFullPath to
  get the current directory\\r\\n        #    does not work in this context -
  $pwd gives the current directory\\r\\n        if
  (![System.IO.Path]::IsPathRooted($Source)) {\\r\\n            $Source =
  $(Join-Path -Path $pwd -ChildPath $Source)\\r\\n        }\\r\\n        $Source
  = Get-Absolute-Path $Source\\r\\n        Say \\\"Copying file from $Source to
  $OutPath\\\"\\r\\n        Copy-Item $Source
  $OutPath\\r\\n        return\\r\\n    }\\r\\n\\r\\n    $Stream =
  $null\\r\\n    \\r\\n    try {\\r\\n        $Response = GetHTTPResponse -Uri
  $Source\\r\\n        $Stream =
  $Response.Content.ReadAsStreamAsync().Result\\r\\n        $File =
  [System.IO.File]::Create($OutPath)\\r\\n        $Stream.CopyTo($File)\\r\\n        \
  $File.Close()\\r\\n\\r\\n        ValidateRemoteLocalFileSizes
  -LocalFileOutPath $OutPath -SourceUri $Source\\r\\n    }\\r\\n    finally
  {\\r\\n        if ($null -ne $Stream)
  {\\r\\n            $Stream.Dispose()\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\
  \\nfunction ValidateRemoteLocalFileSizes([string]$LocalFileOutPath,
  $SourceUri) {\\r\\n    try {\\r\\n        $remoteFileSize =
  Get-Remote-File-Size -zipUri $SourceUri\\r\\n        $fileSize =
  [long](Get-Item $LocalFileOutPath).Length\\r\\n        Say \\\"Downloaded file
  $SourceUri size is $fileSize bytes.\\\"\\r\\n    \\r\\n        if
  ((![string]::IsNullOrEmpty($remoteFileSize)) -and
  !([string]::IsNullOrEmpty($fileSize)) ) {\\r\\n            if ($remoteFileSize
  -ne $fileSize) {\\r\\n                Say \\\"The remote and local file sizes
  are not equal. Remote file size is $remoteFileSize bytes and local size is
  $fileSize bytes. The local package may be
  corrupted.\\\"\\r\\n            }\\r\\n            else
  {\\r\\n                Say \\\"The remote and local file sizes are
  equal.\\\"\\r\\n            }   \\r\\n        }\\r\\n        else
  {\\r\\n            Say \\\"Either downloaded or local package size can not be
  measured. One of them may be
  corrupted.\\\"\\r\\n        }\\r\\n    }\\r\\n    catch {\\r\\n        Say
  \\\"Either downloaded or local package size can not be measured. One of them
  may be corrupted.\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  SafeRemoveFile($Path) {\\r\\n    try {\\r\\n        if (Test-Path $Path)
  {\\r\\n            Remove-Item $Path\\r\\n            Say-Verbose \\\"The
  temporary file `\\\"$Path`\\\" was
  removed.\\\"\\r\\n        }\\r\\n        else {\\r\\n            Say-Verbose
  \\\"The temporary file `\\\"$Path`\\\" does not exist, therefore is not
  removed.\\\"\\r\\n        }\\r\\n    }\\r\\n    catch
  {\\r\\n        Say-Warning \\\"Failed to remove the temporary file:
  `\\\"$Path`\\\", remove it manually.\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Prepend-Sdk-InstallRoot-To-Path([string]$InstallRoot) {\\r\\n    $BinPath =
  Get-Absolute-Path $(Join-Path -Path $InstallRoot -ChildPath
  \\\"\\\")\\r\\n    if (-Not $NoPath) {\\r\\n        $SuffixedBinPath =
  \\\"$BinPath;\\\"\\r\\n        if (-Not $env:path.Contains($SuffixedBinPath))
  {\\r\\n            Say \\\"Adding to current process PATH: `\\\"$BinPath`\\\".
  Note: This change will not be visible if PowerShell was run as a child
  process.\\\"\\r\\n            $env:path = $SuffixedBinPath +
  $env:path\\r\\n        } else {\\r\\n            Say-Verbose \\\"Current
  process PATH already contains
  `\\\"$BinPath`\\\"\\\"\\r\\n        }\\r\\n    }\\r\\n    else
  {\\r\\n        Say \\\"Binaries of dotnet can be found in
  $BinPath\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  PrintDryRunOutput($Invocation, $DownloadLinks)\\r\\n{\\r\\n    Say \\\"Payload
  URLs:\\\"\\r\\n    \\r\\n    for ($linkIndex=0; $linkIndex -lt
  $DownloadLinks.count; $linkIndex++) {\\r\\n        Say \\\"URL #$linkIndex -
  $($DownloadLinks[$linkIndex].type):
  $($DownloadLinks[$linkIndex].downloadLink)\\\"\\r\\n    }\\r\\n    $Repeatabl\
  eCommand = \\\".\\\\$ScriptName -Version `\\\"$SpecificVersion`\\\"
  -InstallDir `\\\"$InstallRoot`\\\" -Architecture
  `\\\"$CLIArchitecture`\\\"\\\"\\r\\n    if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n       $RepeatableCommand+=\\\" -Runtime
  `\\\"dotnet`\\\"\\\"\\r\\n    }\\r\\n    elseif ($Runtime -eq
  \\\"aspnetcore\\\") {\\r\\n       $RepeatableCommand+=\\\" -Runtime
  `\\\"aspnetcore`\\\"\\\"\\r\\n    }\\r\\n\\r\\n    foreach ($key in
  $Invocation.BoundParameters.Keys) {\\r\\n        if (-not
  (@(\\\"Architecture\\\",\\\"Channel\\\",\\\"DryRun\\\",\\\"InstallDir\\\",\\\
  \"Runtime\\\",\\\"SharedRuntime\\\",\\\"Version\\\",\\\"Quality\\\",\\\"FeedC\
  redential\\\") -contains $key)) {\\r\\n            $RepeatableCommand+=\\\"
  -$key
  `\\\"$($Invocation.BoundParameters[$key])`\\\"\\\"\\r\\n        }\\r\\n    }\
  \\r\\n    if ($Invocation.BoundParameters.Keys -contains
  \\\"FeedCredential\\\") {\\r\\n        $RepeatableCommand+=\\\"
  -FeedCredential `\\\"<feedCredential>`\\\"\\\"\\r\\n    }\\r\\n    Say
  \\\"Repeatable invocation: $RepeatableCommand\\\"\\r\\n    if
  ($SpecificVersion -ne $EffectiveVersion)\\r\\n    {\\r\\n        Say \\\"NOTE:
  Due to finding a version manifest with this runtime, it would actually install
  with version '$EffectiveVersion'\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-AkaMSDownloadLink([string]$Channel, [string]$Quality, [bool]$Internal,
  [string]$Product, [string]$Architecture) {\\r\\n    Say-Invocation
  $MyInvocation \\r\\n\\r\\n    #quality is not supported for LTS or STS
  channel\\r\\n    if (![string]::IsNullOrEmpty($Quality) -and (@(\\\"LTS\\\",
  \\\"STS\\\") -contains $Channel)) {\\r\\n        $Quality =
  \\\"\\\"\\r\\n        Say-Warning \\\"Specifying quality for STS or LTS
  channel is not supported, the quality will be
  ignored.\\\"\\r\\n    }\\r\\n    Say-Verbose \\\"Retrieving primary payload
  URL from aka.ms link for channel: '$Channel', quality: '$Quality' product:
  '$Product', os: 'win', architecture: '$Architecture'.\\\"
  \\r\\n   \\r\\n    #construct aka.ms link\\r\\n    $akaMsLink =
  \\\"https://aka.ms/dotnet\\\"\\r\\n    if ($Internal)
  {\\r\\n        $akaMsLink += \\\"/internal\\\"\\r\\n    }\\r\\n    $akaMsLink
  += \\\"/$Channel\\\"\\r\\n    if (-not [string]::IsNullOrEmpty($Quality))
  {\\r\\n        $akaMsLink +=\\\"/$Quality\\\"\\r\\n    }\\r\\n    $akaMsLink
  +=\\\"/$Product-win-$Architecture.zip\\\"\\r\\n    Say-Verbose  \\\"Construct\
  ed aka.ms link:
  '$akaMsLink'.\\\"\\r\\n    $akaMsDownloadLink=$null\\r\\n\\r\\n    for
  ($maxRedirections = 9; $maxRedirections -ge 0;
  $maxRedirections--)\\r\\n    {\\r\\n        #get HTTP
  response\\r\\n        #do not pass credentials as a part of the $akaMsLink and
  do not apply credentials in the GetHTTPResponse
  function\\r\\n        #otherwise the redirect link would have credentials as
  well\\r\\n        #it would result in applying credentials twice to the
  resulting link and thus breaking it, and in echoing credentials to the output
  as a part of redirect link\\r\\n        $Response= GetHTTPResponse -Uri
  $akaMsLink -HeaderOnly $true -DisableRedirect $true -DisableFeedCredential
  $true\\r\\n        Say-Verbose \\\"Received
  response:`n$Response\\\"\\r\\n\\r\\n        if
  ([string]::IsNullOrEmpty($Response)) {\\r\\n            Say-Verbose \\\"The
  link '$akaMsLink' is not valid: failed to get redirect location. The resource
  is not available.\\\"\\r\\n            return
  $null\\r\\n        }\\r\\n\\r\\n        #if HTTP code is 301 (Moved
  Permanently), the redirect link exists\\r\\n        if  ($Response.StatusCode
  -eq 301)\\r\\n        {\\r\\n            try
  {\\r\\n                $akaMsDownloadLink =
  $Response.Headers.GetValues(\\\"Location\\\")[0]\\r\\n\\r\\n                if
  ([string]::IsNullOrEmpty($akaMsDownloadLink))
  {\\r\\n                    Say-Verbose \\\"The link '$akaMsLink' is not valid:
  server returned 301 (Moved Permanently), but the headers do not contain the
  redirect location.\\\"\\r\\n                    return
  $null\\r\\n                }\\r\\n\\r\\n                Say-Verbose \\\"The
  redirect location retrieved: '$akaMsDownloadLink'.\\\"\\r\\n                #
  This may yet be a link to another redirection. Attempt to retrieve the page
  again.\\r\\n                $akaMsLink =
  $akaMsDownloadLink\\r\\n                continue\\r\\n            }\\r\\n            \
  catch {\\r\\n                Say-Verbose \\\"The link '$akaMsLink' is not
  valid: failed to get redirect location.\\\"\\r\\n                return
  $null\\r\\n            }\\r\\n        }\\r\\n        elseif
  ((($Response.StatusCode -lt 300) -or ($Response.StatusCode -ge 400)) -and
  (-not
  [string]::IsNullOrEmpty($akaMsDownloadLink)))\\r\\n        {\\r\\n            \
  # Redirections have ended.\\r\\n            return
  $akaMsDownloadLink\\r\\n        }\\r\\n\\r\\n        Say-Verbose \\\"The link
  '$akaMsLink' is not valid: failed to retrieve the redirection
  location.\\\"\\r\\n        return $null\\r\\n    }\\r\\n\\r\\n    Say-Verbose
  \\\"Aka.ms links have redirected more than the maximum allowed redirections.
  This may be caused by a cyclic redirection of aka.ms
  links.\\\"\\r\\n    return $null\\r\\n\\r\\n}\\r\\n\\r\\nfunction
  Get-AkaMsLink-And-Version([string] $NormalizedChannel, [string]
  $NormalizedQuality, [bool] $Internal, [string] $ProductName, [string]
  $Architecture) {\\r\\n    $AkaMsDownloadLink = Get-AkaMSDownloadLink -Channel
  $NormalizedChannel -Quality $NormalizedQuality -Internal $Internal -Product
  $ProductName -Architecture $Architecture\\r\\n   \\r\\n    if
  ([string]::IsNullOrEmpty($AkaMsDownloadLink)){\\r\\n        if (-not
  [string]::IsNullOrEmpty($NormalizedQuality)) {\\r\\n            # if quality
  is specified - exit with error - there is no fallback
  approach\\r\\n            Say-Error \\\"Failed to locate the latest version in
  the channel '$NormalizedChannel' with '$NormalizedQuality' quality for
  '$ProductName', os: 'win', architecture:
  '$Architecture'.\\\"\\r\\n            Say-Error \\\"Refer to:
  https://aka.ms/dotnet-os-lifecycle for information on .NET Core
  support.\\\"\\r\\n            throw \\\"aka.ms link resolution
  failure\\\"\\r\\n        }\\r\\n        Say-Verbose \\\"Falling back to
  latest.version file approach.\\\"\\r\\n        return ($null, $null,
  $null)\\r\\n    }\\r\\n    else {\\r\\n        Say-Verbose \\\"Retrieved
  primary named payload URL from aka.ms link:
  '$AkaMsDownloadLink'.\\\"\\r\\n        Say-Verbose  \\\"Downloading using
  legacy url will not be attempted.\\\"\\r\\n\\r\\n        #get version from the
  path\\r\\n        $pathParts = $AkaMsDownloadLink.Split('/')\\r\\n        if
  ($pathParts.Length -ge 2) { \\r\\n            $SpecificVersion =
  $pathParts[$pathParts.Length - 2]\\r\\n            Say-Verbose \\\"Version:
  '$SpecificVersion'.\\\"\\r\\n        }\\r\\n        else
  {\\r\\n            Say-Error \\\"Failed to extract the version from download
  link '$AkaMsDownloadLink'.\\\"\\r\\n            return ($null, $null,
  $null)\\r\\n        }\\r\\n\\r\\n        #retrieve effective (product)
  version\\r\\n        $EffectiveVersion = Get-Product-Version -SpecificVersion
  $SpecificVersion -PackageDownloadLink
  $AkaMsDownloadLink\\r\\n        Say-Verbose \\\"Product version:
  '$EffectiveVersion'.\\\"\\r\\n\\r\\n        return ($AkaMsDownloadLink,
  $SpecificVersion, $EffectiveVersion);\\r\\n    }\\r\\n}\\r\\n\\r\\nfunction
  Get-Feeds-To-Use()\\r\\n{\\r\\n    $feeds =
  @(\\r\\n    \\\"https://dotnetcli.azureedge.net/dotnet\\\",\\r\\n    \\\"http\
  s://dotnetbuilds.azureedge.net/public\\\"\\r\\n    )\\r\\n\\r\\n    if (-not
  [string]::IsNullOrEmpty($AzureFeed)) {\\r\\n        $feeds =
  @($AzureFeed)\\r\\n    }\\r\\n\\r\\n    if ($NoCdn) {\\r\\n        $feeds =
  @(\\r\\n        \\\"https://dotnetcli.blob.core.windows.net/dotnet\\\",\\r\\n        \
  \\\"https://dotnetbuilds.blob.core.windows.net/public\\\"\\r\\n        )\\r\\n\
  \\r\\n        if (-not [string]::IsNullOrEmpty($UncachedFeed))
  {\\r\\n            $feeds =
  @($UncachedFeed)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return
  $feeds\\r\\n}\\r\\n\\r\\nfunction Resolve-AssetName-And-RelativePath([string]
  $Runtime) {\\r\\n    \\r\\n    if ($Runtime -eq \\\"dotnet\\\")
  {\\r\\n        $assetName = \\\".NET Core
  Runtime\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"shared\\\\Microsoft.NETCore.App\\\"\\r\\n    }\\r\\n    elseif ($Runtime
  -eq \\\"aspnetcore\\\") {\\r\\n        $assetName = \\\"ASP.NET Core
  Runtime\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"shared\\\\Microsoft.AspNetCore.App\\\"\\r\\n    }\\r\\n    elseif
  ($Runtime -eq \\\"windowsdesktop\\\") {\\r\\n        $assetName = \\\".NET
  Core Windows Desktop Runtime\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"shared\\\\Microsoft.WindowsDesktop.App\\\"\\r\\n    }\\r\\n    elseif
  (-not $Runtime) {\\r\\n        $assetName = \\\".NET Core
  SDK\\\"\\r\\n        $dotnetPackageRelativePath =
  \\\"sdk\\\"\\r\\n    }\\r\\n    else {\\r\\n        throw \\\"Invalid value
  for `$Runtime\\\"\\r\\n    }\\r\\n\\r\\n    return ($assetName,
  $dotnetPackageRelativePath)\\r\\n}\\r\\n\\r\\nfunction
  Prepare-Install-Directory {\\r\\n    $diskSpaceWarning = \\\"Failed to check
  the disk space. Installation will continue, but it may fail if you do not have
  enough disk space.\\\";\\r\\n\\r\\n    if ($PSVersionTable.PSVersion.Major -lt
  7) {\\r\\n        Say-Verbose
  $diskSpaceWarning\\r\\n        return\\r\\n    }\\r\\n\\r\\n    New-Item
  -ItemType Directory -Force -Path $InstallRoot |
  Out-Null\\r\\n\\r\\n    $installDrive = $((Get-Item $InstallRoot
  -Force).PSDrive.Name);\\r\\n    $diskInfo = $null\\r\\n    try
  {\\r\\n        $diskInfo = Get-PSDrive -Name
  $installDrive\\r\\n    }\\r\\n    catch {\\r\\n        Say-Warning
  $diskSpaceWarning\\r\\n    }\\r\\n\\r\\n    # The check is relevant for PS
  version >= 7, the result can be irrelevant for older versions. See
  https://github.com/PowerShell/PowerShell/issues/12442.\\r\\n    if ( ($null
  -ne $diskInfo) -and ($diskInfo.Free / 1MB -le 100)) {\\r\\n        throw
  \\\"There is not enough disk space on drive
  ${installDrive}:\\\"\\r\\n    }\\r\\n}\\r\\n\\r\\nSay-Verbose \\\"Note that
  the intended use of this script is for Continuous Integration (CI) scenarios,
  where:\\\"\\r\\nSay-Verbose \\\"- The SDK needs to be installed without user
  interaction and without admin rights.\\\"\\r\\nSay-Verbose \\\"- The SDK
  installation doesn't need to persist across multiple CI
  runs.\\\"\\r\\nSay-Verbose \\\"To set up a development environment or to run
  apps, use installers rather than this script. Visit
  https://dotnet.microsoft.com/download to get the
  installer.`r`n\\\"\\r\\n\\r\\nif ($SharedRuntime -and (-not $Runtime))
  {\\r\\n    $Runtime =
  \\\"dotnet\\\"\\r\\n}\\r\\n\\r\\n$OverrideNonVersionedFiles =
  !$SkipNonVersionedFiles\\r\\n\\r\\nMeasure-Action \\\"Product discovery\\\"
  {\\r\\n    $script:CLIArchitecture = Get-CLIArchitecture-From-Architecture
  $Architecture\\r\\n    $script:NormalizedQuality = Get-NormalizedQuality
  $Quality\\r\\n    Say-Verbose \\\"Normalized quality:
  '$NormalizedQuality'\\\"\\r\\n    $script:NormalizedChannel =
  Get-NormalizedChannel $Channel\\r\\n    Say-Verbose \\\"Normalized channel:
  '$NormalizedChannel'\\\"\\r\\n    $script:NormalizedProduct =
  Get-NormalizedProduct $Runtime\\r\\n    Say-Verbose \\\"Normalized product:
  '$NormalizedProduct'\\\"\\r\\n    $script:FeedCredential =
  ValidateFeedCredential $FeedCredential\\r\\n}\\r\\n\\r\\n$InstallRoot =
  Resolve-Installation-Path $InstallDir\\r\\nSay-Verbose \\\"InstallRoot:
  $InstallRoot\\\"\\r\\n$ScriptName =
  $MyInvocation.MyCommand.Name\\r\\n($assetName, $dotnetPackageRelativePath) =
  Resolve-AssetName-And-RelativePath -Runtime $Runtime\\r\\n\\r\\n$feeds =
  Get-Feeds-To-Use\\r\\n$DownloadLinks = @()\\r\\n\\r\\nif
  ($Version.ToLowerInvariant() -ne \\\"latest\\\" -and -not
  [string]::IsNullOrEmpty($Quality)) {\\r\\n    throw \\\"Quality and Version
  options are not allowed to be specified simultaneously. See https://
  learn.microsoft.com/dotnet/core/tools/dotnet-install-script#options for
  details.\\\"\\r\\n}\\r\\n\\r\\n# aka.ms links can only be used if the user did
  not request a specific version via the command line or a global.json
  file.\\r\\nif ([string]::IsNullOrEmpty($JSonFile) -and ($Version -eq
  \\\"latest\\\")) {\\r\\n    ($DownloadLink, $SpecificVersion,
  $EffectiveVersion) = Get-AkaMsLink-And-Version $NormalizedChannel
  $NormalizedQuality $Internal $NormalizedProduct
  $CLIArchitecture\\r\\n    \\r\\n    if ($null -ne $DownloadLink)
  {\\r\\n        $DownloadLinks += New-Object PSObject -Property
  @{downloadLink=\\\"$DownloadLink\\\";specificVersion=\\\"$SpecificVersion\\\"\
  ;effectiveVersion=\\\"$EffectiveVersion\\\";type='aka.ms'}\\r\\n        Say-V\
  erbose \\\"Generated aka.ms link $DownloadLink with version
  $EffectiveVersion\\\"\\r\\n        \\r\\n        if (-Not $DryRun)
  {\\r\\n            Say-Verbose \\\"Checking if the version $EffectiveVersion
  is already installed\\\"\\r\\n            if (Is-Dotnet-Package-Installed
  -InstallRoot $InstallRoot -RelativePathToPackage $dotnetPackageRelativePath
  -SpecificVersion
  $EffectiveVersion)\\r\\n            {\\r\\n                Say \\\"$assetName
  with version '$EffectiveVersion' is already
  installed.\\\"\\r\\n                Prepend-Sdk-InstallRoot-To-Path
  -InstallRoot
  $InstallRoot\\r\\n                return\\r\\n            }\\r\\n        }\\r\
  \\n    }\\r\\n}\\r\\n\\r\\n# Primary and legacy links cannot be used if a
  quality was specified.\\r\\n# If we already have an aka.ms link, no need to
  search the blob feeds.\\r\\nif ([string]::IsNullOrEmpty($NormalizedQuality)
  -and 0 -eq $DownloadLinks.count)\\r\\n{\\r\\n    foreach ($feed in $feeds)
  {\\r\\n        try {\\r\\n            $SpecificVersion =
  Get-Specific-Version-From-Version -AzureFeed $feed -Channel $Channel -Version
  $Version -JSonFile $JSonFile\\r\\n            $DownloadLink, $EffectiveVersion
  = Get-Download-Link -AzureFeed $feed -SpecificVersion $SpecificVersion
  -CLIArchitecture $CLIArchitecture\\r\\n            $LegacyDownloadLink =
  Get-LegacyDownload-Link -AzureFeed $feed -SpecificVersion $SpecificVersion
  -CLIArchitecture
  $CLIArchitecture\\r\\n            \\r\\n            $DownloadLinks +=
  New-Object PSObject -Property
  @{downloadLink=\\\"$DownloadLink\\\";specificVersion=\\\"$SpecificVersion\\\"\
  ;effectiveVersion=\\\"$EffectiveVersion\\\";type='primary'}\\r\\n            \
  Say-Verbose \\\"Generated primary link $DownloadLink with version
  $EffectiveVersion\\\"\\r\\n    \\r\\n            if (-not
  [string]::IsNullOrEmpty($LegacyDownloadLink))
  {\\r\\n                $DownloadLinks += New-Object PSObject -Property
  @{downloadLink=\\\"$LegacyDownloadLink\\\";specificVersion=\\\"$SpecificVersi\
  on\\\";effectiveVersion=\\\"$EffectiveVersion\\\";type='legacy'}\\r\\n                \
  Say-Verbose \\\"Generated legacy link $LegacyDownloadLink with version
  $EffectiveVersion\\\"\\r\\n            }\\r\\n    \\r\\n            if (-Not
  $DryRun) {\\r\\n                Say-Verbose \\\"Checking if the version
  $EffectiveVersion is already installed\\\"\\r\\n                if
  (Is-Dotnet-Package-Installed -InstallRoot $InstallRoot -RelativePathToPackage
  $dotnetPackageRelativePath -SpecificVersion
  $EffectiveVersion)\\r\\n                {\\r\\n                    Say
  \\\"$assetName with version '$EffectiveVersion' is already
  installed.\\\"\\r\\n                    Prepend-Sdk-InstallRoot-To-Path
  -InstallRoot
  $InstallRoot\\r\\n                    return\\r\\n                }\\r\\n            \
  }\\r\\n        }\\r\\n        catch\\r\\n        {\\r\\n            Say-Verbo\
  se \\\"Failed to acquire download links from feed $feed. Exception:
  $_\\\"\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nif ($DownloadLinks.count
  -eq 0) {\\r\\n    throw \\\"Failed to resolve the exact version
  number.\\\"\\r\\n}\\r\\n\\r\\nif ($DryRun) {\\r\\n    PrintDryRunOutput
  $MyInvocation $DownloadLinks\\r\\n    return\\r\\n}\\r\\n\\r\\nMeasure-Action
  \\\"Installation directory preparation\\\" { Prepare-Install-Directory
  }\\r\\n\\r\\nSay-Verbose \\\"Zip path:
  $ZipPath\\\"\\r\\n\\r\\n$DownloadSucceeded = $false\\r\\n$DownloadedLink =
  $null\\r\\n$ErrorMessages = @()\\r\\n\\r\\nforeach ($link in
  $DownloadLinks)\\r\\n{\\r\\n    Say-Verbose \\\"Downloading
  `\\\"$($link.type)`\\\" link $($link.downloadLink)\\\"\\r\\n\\r\\n    try
  {\\r\\n        Measure-Action \\\"Package download\\\" { DownloadFile -Source
  $link.downloadLink -OutPath $ZipPath }\\r\\n        Say-Verbose \\\"Download
  succeeded.\\\"\\r\\n        $DownloadSucceeded =
  $true\\r\\n        $DownloadedLink =
  $link\\r\\n        break\\r\\n    }\\r\\n    catch {\\r\\n        $StatusCode
  = $null\\r\\n        $ErrorMessage = $null\\r\\n\\r\\n        if
  ($PSItem.Exception.Data.Contains(\\\"StatusCode\\\"))
  {\\r\\n            $StatusCode =
  $PSItem.Exception.Data[\\\"StatusCode\\\"]\\r\\n        }\\r\\n    \\r\\n        \
  if ($PSItem.Exception.Data.Contains(\\\"ErrorMessage\\\"))
  {\\r\\n            $ErrorMessage =
  $PSItem.Exception.Data[\\\"ErrorMessage\\\"]\\r\\n        } else
  {\\r\\n            $ErrorMessage =
  $PSItem.Exception.Message\\r\\n        }\\r\\n\\r\\n        Say-Verbose
  \\\"Download failed with status code $StatusCode. Error message:
  $ErrorMessage\\\"\\r\\n        $ErrorMessages += \\\"Downloading from
  `\\\"$($link.type)`\\\" link has failed with error:`nUri:
  $($link.downloadLink)`nStatusCode: $StatusCode`nError:
  $ErrorMessage\\\"\\r\\n    }\\r\\n\\r\\n    # This link failed. Clean up
  before trying the next one.\\r\\n    SafeRemoveFile -Path
  $ZipPath\\r\\n}\\r\\n\\r\\nif (-not $DownloadSucceeded) {\\r\\n    foreach
  ($ErrorMessage in $ErrorMessages) {\\r\\n        Say-Error
  $ErrorMessages\\r\\n    }\\r\\n\\r\\n    throw \\\"Could not find
  `\\\"$assetName`\\\" with version =
  $($DownloadLinks[0].effectiveVersion)`nRefer to:
  https://aka.ms/dotnet-os-lifecycle for information on .NET
  support\\\"\\r\\n}\\r\\n\\r\\nSay \\\"Extracting the
  archive.\\\"\\r\\nMeasure-Action \\\"Package extraction\\\" {
  Extract-Dotnet-Package -ZipPath $ZipPath -OutPath $InstallRoot
  }\\r\\n\\r\\n#  Check if the SDK version is installed; if not, fail the
  installation.\\r\\n$isAssetInstalled = $false\\r\\n\\r\\n# if the version
  contains \\\"RTM\\\" or \\\"servicing\\\"; check if a 'release-type' SDK
  version is installed.\\r\\nif ($DownloadedLink.effectiveVersion -Match
  \\\"rtm\\\" -or $DownloadedLink.effectiveVersion -Match \\\"servicing\\\")
  {\\r\\n    $ReleaseVersion =
  $DownloadedLink.effectiveVersion.Split(\\\"-\\\")[0]\\r\\n    Say-Verbose
  \\\"Checking installation: version =
  $ReleaseVersion\\\"\\r\\n    $isAssetInstalled = Is-Dotnet-Package-Installed
  -InstallRoot $InstallRoot -RelativePathToPackage $dotnetPackageRelativePath
  -SpecificVersion $ReleaseVersion\\r\\n}\\r\\n\\r\\n#  Check if the SDK version
  is installed.\\r\\nif (!$isAssetInstalled) {\\r\\n    Say-Verbose \\\"Checking
  installation: version =
  $($DownloadedLink.effectiveVersion)\\\"\\r\\n    $isAssetInstalled =
  Is-Dotnet-Package-Installed -InstallRoot $InstallRoot -RelativePathToPackage
  $dotnetPackageRelativePath -SpecificVersion
  $DownloadedLink.effectiveVersion\\r\\n}\\r\\n\\r\\n# Version verification
  failed. More likely something is wrong either with the downloaded content or
  with the verification algorithm.\\r\\nif (!$isAssetInstalled)
  {\\r\\n    Say-Error \\\"Failed to verify the version of installed
  `\\\"$assetName`\\\".`nInstallation source:
  $($DownloadedLink.downloadLink).`nInstallation location: $InstallRoot.`nReport
  the bug at
  https://github.com/dotnet/install-scripts/issues.\\\"\\r\\n    throw
  \\\"`\\\"$assetName`\\\" with version = $($DownloadedLink.effectiveVersion)
  failed to install with an unknown error.\\\"\\r\\n}\\r\\n\\r\\nif (-not
  $KeepZip) {\\r\\n    SafeRemoveFile -Path
  $ZipPath\\r\\n}\\r\\n\\r\\nMeasure-Action \\\"Setting up shell environment\\\"
  { Prepend-Sdk-InstallRoot-To-Path -InstallRoot $InstallRoot }\\r\\n\\r\\nSay
  \\\"Note that the script does not resolve dependencies during
  installation.\\\"\\r\\nSay \\\"To check the list of dependencies, go to
  https://learn.microsoft.com/dotnet/core/install/windows#dependencies\\\"\\r\\\
  nSay \\\"Installed version is $($DownloadedLink.effectiveVersion)\\\"\\r\\nSay
  \\\"Installation finished\\\"\\r\\n# SIG # Begin signature block\\r\\n#
  MIInvwYJKoZIhvcNAQcCoIInsDCCJ6wCAQExDzANBglghkgBZQMEAgEFADB5Bgor\\r\\n#
  BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG\\r\\n#
  KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCACRu+yvG+6rftW\\r\\n#
  7639o2K9YFU32HKgY4Dqe9C3db/p7qCCDXYwggX0MIID3KADAgECAhMzAAADTrU8\\r\\n#
  esGEb+srAAAAAANOMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNVBAYTAlVTMRMwEQYD\\r\\n#
  VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy\\r\\n#
  b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p\\r\\n#
  bmcgUENBIDIwMTEwHhcNMjMwMzE2MTg0MzI5WhcNMjQwMzE0MTg0MzI5WjB0MQsw\\r\\n#
  CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u\\r\\n#
  ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMR4wHAYDVQQDExVNaWNy\\r\\n#
  b3NvZnQgQ29ycG9yYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\\r\\n#
  AQDdCKiNI6IBFWuvJUmf6WdOJqZmIwYs5G7AJD5UbcL6tsC+EBPDbr36pFGo1bsU\\r\\n#
  p53nRyFYnncoMg8FK0d8jLlw0lgexDDr7gicf2zOBFWqfv/nSLwzJFNP5W03DF/1\\r\\n#
  1oZ12rSFqGlm+O46cRjTDFBpMRCZZGddZlRBjivby0eI1VgTD1TvAdfBYQe82fhm\\r\\n#
  WQkYR/lWmAK+vW/1+bO7jHaxXTNCxLIBW07F8PBjUcwFxxyfbe2mHB4h1L4U0Ofa\\r\\n#
  +HX/aREQ7SqYZz59sXM2ySOfvYyIjnqSO80NGBaz5DvzIG88J0+BNhOu2jl6Dfcq\\r\\n#
  jYQs1H/PMSQIK6E7lXDXSpXzAgMBAAGjggFzMIIBbzAfBgNVHSUEGDAWBgorBgEE\\r\\n#
  AYI3TAgBBggrBgEFBQcDAzAdBgNVHQ4EFgQUnMc7Zn/ukKBsBiWkwdNfsN5pdwAw\\r\\n#
  RQYDVR0RBD4wPKQ6MDgxHjAcBgNVBAsTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEW\\r\\n#
  MBQGA1UEBRMNMjMwMDEyKzUwMDUxNjAfBgNVHSMEGDAWgBRIbmTlUAXTgqoXNzci\\r\\n#
  tW2oynUClTBUBgNVHR8ETTBLMEmgR6BFhkNodHRwOi8vd3d3Lm1pY3Jvc29mdC5j\\r\\n#
  b20vcGtpb3BzL2NybC9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3JsMGEG\\r\\n#
  CCsGAQUFBwEBBFUwUzBRBggrBgEFBQcwAoZFaHR0cDovL3d3dy5taWNyb3NvZnQu\\r\\n#
  Y29tL3BraW9wcy9jZXJ0cy9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDctMDguY3J0\\r\\n#
  MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIBAD21v9pHoLdBSNlFAjmk\\r\\n#
  mx4XxOZAPsVxxXbDyQv1+kGDe9XpgBnT1lXnx7JDpFMKBwAyIwdInmvhK9pGBa31\\r\\n#
  TyeL3p7R2s0L8SABPPRJHAEk4NHpBXxHjm4TKjezAbSqqbgsy10Y7KApy+9UrKa2\\r\\n#
  kGmsuASsk95PVm5vem7OmTs42vm0BJUU+JPQLg8Y/sdj3TtSfLYYZAaJwTAIgi7d\\r\\n#
  hzn5hatLo7Dhz+4T+MrFd+6LUa2U3zr97QwzDthx+RP9/RZnur4inzSQsG5DCVIM\\r\\n#
  pA1l2NWEA3KAca0tI2l6hQNYsaKL1kefdfHCrPxEry8onJjyGGv9YKoLv6AOO7Oh\\r\\n#
  JEmbQlz/xksYG2N/JSOJ+QqYpGTEuYFYVWain7He6jgb41JbpOGKDdE/b+V2q/gX\\r\\n#
  UgFe2gdwTpCDsvh8SMRoq1/BNXcr7iTAU38Vgr83iVtPYmFhZOVM0ULp/kKTVoir\\r\\n#
  IpP2KCxT4OekOctt8grYnhJ16QMjmMv5o53hjNFXOxigkQWYzUO+6w50g0FAeFa8\\r\\n#
  5ugCCB6lXEk21FFB1FdIHpjSQf+LP/W2OV/HfhC3uTPgKbRtXo83TZYEudooyZ/A\\r\\n#
  Vu08sibZ3MkGOJORLERNwKm2G7oqdOv4Qj8Z0JrGgMzj46NFKAxkLSpE5oHQYP1H\\r\\n#
  tPx1lPfD7iNSbJsP6LiUHXH1MIIHejCCBWKgAwIBAgIKYQ6Q0gAAAAAAAzANBgkq\\r\\n#
  hkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x\\r\\n#
  EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv\\r\\n#
  bjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5\\r\\n#
  IDIwMTEwHhcNMTEwNzA4MjA1OTA5WhcNMjYwNzA4MjEwOTA5WjB+MQswCQYDVQQG\\r\\n#
  EwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG\\r\\n#
  A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQg\\r\\n#
  Q29kZSBTaWduaW5nIFBDQSAyMDExMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\r\\n#
  CgKCAgEAq/D6chAcLq3YbqqCEE00uvK2WCGfQhsqa+laUKq4BjgaBEm6f8MMHt03\\r\\n#
  a8YS2AvwOMKZBrDIOdUBFDFC04kNeWSHfpRgJGyvnkmc6Whe0t+bU7IKLMOv2akr\\r\\n#
  rnoJr9eWWcpgGgXpZnboMlImEi/nqwhQz7NEt13YxC4Ddato88tt8zpcoRb0Rrrg\\r\\n#
  OGSsbmQ1eKagYw8t00CT+OPeBw3VXHmlSSnnDb6gE3e+lD3v++MrWhAfTVYoonpy\\r\\n#
  4BI6t0le2O3tQ5GD2Xuye4Yb2T6xjF3oiU+EGvKhL1nkkDstrjNYxbc+/jLTswM9\\r\\n#
  sbKvkjh+0p2ALPVOVpEhNSXDOW5kf1O6nA+tGSOEy/S6A4aN91/w0FK/jJSHvMAh\\r\\n#
  dCVfGCi2zCcoOCWYOUo2z3yxkq4cI6epZuxhH2rhKEmdX4jiJV3TIUs+UsS1Vz8k\\r\\n#
  A/DRelsv1SPjcF0PUUZ3s/gA4bysAoJf28AVs70b1FVL5zmhD+kjSbwYuER8ReTB\\r\\n#
  w3J64HLnJN+/RpnF78IcV9uDjexNSTCnq47f7Fufr/zdsGbiwZeBe+3W7UvnSSmn\\r\\n#
  Eyimp31ngOaKYnhfsi+E11ecXL93KCjx7W3DKI8sj0A3T8HhhUSJxAlMxdSlQy90\\r\\n#
  lfdu+HggWCwTXWCVmj5PM4TasIgX3p5O9JawvEagbJjS4NaIjAsCAwEAAaOCAe0w\\r\\n#
  ggHpMBAGCSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBRIbmTlUAXTgqoXNzcitW2o\\r\\n#
  ynUClTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNVHQ8EBAMCAYYwDwYD\\r\\n#
  VR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBRyLToCMZBDuRQFTuHqp8cx0SOJNDBa\\r\\n#
  BgNVHR8EUzBRME+gTaBLhklodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2Ny\\r\\n#
  bC9wcm9kdWN0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3JsMF4GCCsG\\r\\n#
  AQUFBwEBBFIwUDBOBggrBgEFBQcwAoZCaHR0cDovL3d3dy5taWNyb3NvZnQuY29t\\r\\n#
  L3BraS9jZXJ0cy9NaWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3J0MIGfBgNV\\r\\n#
  HSAEgZcwgZQwgZEGCSsGAQQBgjcuAzCBgzA/BggrBgEFBQcCARYzaHR0cDovL3d3\\r\\n#
  dy5taWNyb3NvZnQuY29tL3BraW9wcy9kb2NzL3ByaW1hcnljcHMuaHRtMEAGCCsG\\r\\n#
  AQUFBwICMDQeMiAdAEwAZQBnAGEAbABfAHAAbwBsAGkAYwB5AF8AcwB0AGEAdABl\\r\\n#
  AG0AZQBuAHQALiAdMA0GCSqGSIb3DQEBCwUAA4ICAQBn8oalmOBUeRou09h0ZyKb\\r\\n#
  C5YR4WOSmUKWfdJ5DJDBZV8uLD74w3LRbYP+vj/oCso7v0epo/Np22O/IjWll11l\\r\\n#
  hJB9i0ZQVdgMknzSGksc8zxCi1LQsP1r4z4HLimb5j0bpdS1HXeUOeLpZMlEPXh6\\r\\n#
  I/MTfaaQdION9MsmAkYqwooQu6SpBQyb7Wj6aC6VoCo/KmtYSWMfCWluWpiW5IP0\\r\\n#
  wI/zRive/DvQvTXvbiWu5a8n7dDd8w6vmSiXmE0OPQvyCInWH8MyGOLwxS3OW560\\r\\n#
  STkKxgrCxq2u5bLZ2xWIUUVYODJxJxp/sfQn+N4sOiBpmLJZiWhub6e3dMNABQam\\r\\n#
  ASooPoI/E01mC8CzTfXhj38cbxV9Rad25UAqZaPDXVJihsMdYzaXht/a8/jyFqGa\\r\\n#
  J+HNpZfQ7l1jQeNbB5yHPgZ3BtEGsXUfFL5hYbXw3MYbBL7fQccOKO7eZS/sl/ah\\r\\n#
  XJbYANahRr1Z85elCUtIEJmAH9AAKcWxm6U/RXceNcbSoqKfenoi+kiVH6v7RyOA\\r\\n#
  9Z74v2u3S5fi63V4GuzqN5l5GEv/1rMjaHXmr/r8i+sLgOppO6/8MO0ETI7f33Vt\\r\\n#
  Y5E90Z1WTk+/gFcioXgRMiF670EKsT/7qMykXcGhiJtXcVZOSEXAQsmbdlsKgEhr\\r\\n#
  /Xmfwb1tbWrJUnMTDXpQzTGCGZ8wghmbAgEBMIGVMH4xCzAJBgNVBAYTAlVTMRMw\\r\\n#
  EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVN\\r\\n#
  aWNyb3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNp\\r\\n#
  Z25pbmcgUENBIDIwMTECEzMAAANOtTx6wYRv6ysAAAAAA04wDQYJYIZIAWUDBAIB\\r\\n#
  BQCgga4wGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEO\\r\\n#
  MAwGCisGAQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEIPHo6D4ixtuX2mtmXYtzP7Xh\\r\\n#
  5SbbHtBt9hwIKfR9nNCHMEIGCisGAQQBgjcCAQwxNDAyoBSAEgBNAGkAYwByAG8A\\r\\n#
  cwBvAGYAdKEagBhodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20wDQYJKoZIhvcNAQEB\\r\\n#
  BQAEggEAKaYy0/f2nIWjmd2w2g7hU/pz6ahK3cIahIejHpTW8JXUR3neUB9oFm8x\\r\\n#
  GiAtgKY6zzxKsMGRJfULOEB+jV8y1TK5aAUtNWog8o7i9hl/W3JLsRtcduGhqvR8\\r\\n#
  oYFq4xkYPDwAjklDN96cWNqWmqsUULs/jxx4Ef0o9/2Cy9FWYwvyDK/o0bdfotsl\\r\\n#
  +cr3Aj1fIOSkrMKjEoScITOvfGCDgNqVsu+62itzX0QvIq7yW8aqJ5xd2r94IOry\\r\\n#
  u6iMdQFYSxR7xpIaDjKLHCH8tTmKAlrFFekhaxe1WuTvNBt154Zl1U7ukSO12s1N\\r\\n#
  ezHYEW4AoLd4MO9zmXwDZmo3RLzFHKGCFykwghclBgorBgEEAYI3AwMBMYIXFTCC\\r\\n#
  FxEGCSqGSIb3DQEHAqCCFwIwghb+AgEDMQ8wDQYJYIZIAWUDBAIBBQAwggFZBgsq\\r\\n#
  hkiG9w0BCRABBKCCAUgEggFEMIIBQAIBAQYKKwYBBAGEWQoDATAxMA0GCWCGSAFl\\r\\n#
  AwQCAQUABCCiX6fcUDSacytCBP6o92QnwRIQCE6w6Se15jgm1UebNAIGZN/N9Z2v\\r\\n#
  GBMyMDIzMDkxODEwMDUxOS4zMjJaMASAAgH0oIHYpIHVMIHSMQswCQYDVQQGEwJV\\r\\n#
  UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE\\r\\n#
  ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMS0wKwYDVQQLEyRNaWNyb3NvZnQgSXJl\\r\\n#
  bGFuZCBPcGVyYXRpb25zIExpbWl0ZWQxJjAkBgNVBAsTHVRoYWxlcyBUU1MgRVNO\\r\\n#
  OkQwODItNEJGRC1FRUJBMSUwIwYDVQQDExxNaWNyb3NvZnQgVGltZS1TdGFtcCBT\\r\\n#
  ZXJ2aWNloIIReDCCBycwggUPoAMCAQICEzMAAAG6Hz8Z98F1vXwAAQAAAbowDQYJ\\r\\n#
  KoZIhvcNAQELBQAwfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24x\\r\\n#
  EDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv\\r\\n#
  bjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwHhcNMjIw\\r\\n#
  OTIwMjAyMjE5WhcNMjMxMjE0MjAyMjE5WjCB0jELMAkGA1UEBhMCVVMxEzARBgNV\\r\\n#
  BAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jv\\r\\n#
  c29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0IElyZWxhbmQgT3Bl\\r\\n#
  cmF0aW9ucyBMaW1pdGVkMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjpEMDgyLTRC\\r\\n#
  RkQtRUVCQTElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZTCC\\r\\n#
  AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAIhOFYMzkjWAE9UVnXF9hRGv\\r\\n#
  0xBRxc+I5Hu3hxVFXyK3u38xusEb0pLkwjgGtDsaLLbrlMxqX3tFb/3BgEPEC3L0\\r\\n#
  wX76gD8zHt+wiBV5mq5BWop29qRrgMJKKCPcpQnSjs9B/4XMFFvrpdPicZDv43FL\\r\\n#
  gz9fHqMq0LJDw5JAHGDS30TCY9OF43P4d44Z9lE7CaVS2pJMF3L453MXB5yYK/KD\\r\\n#
  bilhERP1jxn2yl+tGCRguIAsMG0oeOhXaw8uSGOhS6ACSHb+ebi0038MFHyoTNhK\\r\\n#
  f+SYo4OpSY3xP4+swBBTKDoYP1wH+CfxG6h9fymBJQPQZaqfl0riiDLjmDunQtH1\\r\\n#
  GD64Air5k9Jdwhq5wLmSWXjyFVL+IDfOpdixJ6f5o+MhE6H4t31w+prygHmd2UHQ\\r\\n#
  657UGx6FNuzwC+SpAHmV76MZYac4uAhTgaP47P2eeS1ockvyhl9ya+9JzPfMkug3\\r\\n#
  xevzFADWiLRMr066EMV7q3JSRAsnCS9GQ08C4FKPbSh8OPM33Lng0ffxANnHAAX/\\r\\n#
  DE7cHcx7l9jaV3Acmkj7oqir4Eh2u5YxwiaTE37XaMumX2ES3PJ5NBaXq7YdLJwy\\r\\n#
  SD+U9pk/tl4dQ1t/Eeo7uDTliOyQkD8I74xpVB0T31/67KHfkBkFVvy6wye21V+9\\r\\n#
  IC8uSD++RgD3RwtN2kE/AgMBAAGjggFJMIIBRTAdBgNVHQ4EFgQUimLm8QMeJa25\\r\\n#
  j9MWeabI2HSvZOUwHwYDVR0jBBgwFoAUn6cVXQBeYl2D9OXSZacbUzUZ6XIwXwYD\\r\\n#
  VR0fBFgwVjBUoFKgUIZOaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9j\\r\\n#
  cmwvTWljcm9zb2Z0JTIwVGltZS1TdGFtcCUyMFBDQSUyMDIwMTAoMSkuY3JsMGwG\\r\\n#
  CCsGAQUFBwEBBGAwXjBcBggrBgEFBQcwAoZQaHR0cDovL3d3dy5taWNyb3NvZnQu\\r\\n#
  Y29tL3BraW9wcy9jZXJ0cy9NaWNyb3NvZnQlMjBUaW1lLVN0YW1wJTIwUENBJTIw\\r\\n#
  MjAxMCgxKS5jcnQwDAYDVR0TAQH/BAIwADAWBgNVHSUBAf8EDDAKBggrBgEFBQcD\\r\\n#
  CDAOBgNVHQ8BAf8EBAMCB4AwDQYJKoZIhvcNAQELBQADggIBAF/I8U6hbZhvDcn9\\r\\n#
  6nZ6tkbSEjXPvKZ6wroaXcgstEhpgaeEwleLuPXHLzEWtuJuYz4eshmhXqFr49lb\\r\\n#
  AcX5SN5/cEsP0xdFayb7U5P94JZd3HjFvpWRNoNBhF3SDM0A38sI2H+hjhB/VfX1\\r\\n#
  XcZiei1ROPAyCHcBgHLyQrEu6mnb3HhbIdr8h0Ta7WFylGhLSFW6wmzKusP6aOlm\\r\\n#
  nGSac5NMfla6lRvTYHd28rbbCgfSm1RhTgoZj+W8DTKtiEMwubHJ3mIPKmo8xtJI\\r\\n#
  WXPnXq6XKgldrL5cynLMX/0WX65OuWbHV5GTELdfWvGV3DaZrHPUQ/UP31Keqb2x\\r\\n#
  jVCb30LVwgbjIvYS77N1dARkN8F/9pJ1gO4IvZWMwyMlKKFGojO1f1wbjSWcA/57\\r\\n#
  tsc+t2blrMWgSNHgzDr01jbPSupRjy3Ht9ZZs4xN02eiX3eG297NrtC6l4c/gzn2\\r\\n#
  0eqoqWx/uHWxmTgB0F5osBuTHOe77DyEA0uhArGlgKP91jghgt/OVHoH65g0QqCt\\r\\n#
  gZ+36mnCEg6IOhFoFrCc0fJFGVmb1+17gEe+HRMM7jBk4O06J+IooFrI3e3PJjPr\\r\\n#
  Qano/MyE3h+zAuBWGMDRcUlNKCDU7dGnWvH3XWwLrCCIcz+3GwRUMsLsDdPW2OVv\\r\\n#
  7v1eEJiMSIZ2P+M7L20Q8aznU4OAMIIHcTCCBVmgAwIBAgITMwAAABXF52ueAptJ\\r\\n#
  mQAAAAAAFTANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgT\\r\\n#
  Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m\\r\\n#
  dCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJvb3QgQ2VydGlmaWNh\\r\\n#
  dGUgQXV0aG9yaXR5IDIwMTAwHhcNMjEwOTMwMTgyMjI1WhcNMzAwOTMwMTgzMjI1\\r\\n#
  WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH\\r\\n#
  UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD\\r\\n#
  Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCCAiIwDQYJKoZIhvcNAQEB\\r\\n#
  BQADggIPADCCAgoCggIBAOThpkzntHIhC3miy9ckeb0O1YLT/e6cBwfSqWxOdcjK\\r\\n#
  NVf2AX9sSuDivbk+F2Az/1xPx2b3lVNxWuJ+Slr+uDZnhUYjDLWNE893MsAQGOhg\\r\\n#
  fWpSg0S3po5GawcU88V29YZQ3MFEyHFcUTE3oAo4bo3t1w/YJlN8OWECesSq/XJp\\r\\n#
  rx2rrPY2vjUmZNqYO7oaezOtgFt+jBAcnVL+tuhiJdxqD89d9P6OU8/W7IVWTe/d\\r\\n#
  vI2k45GPsjksUZzpcGkNyjYtcI4xyDUoveO0hyTD4MmPfrVUj9z6BVWYbWg7mka9\\r\\n#
  7aSueik3rMvrg0XnRm7KMtXAhjBcTyziYrLNueKNiOSWrAFKu75xqRdbZ2De+JKR\\r\\n#
  Hh09/SDPc31BmkZ1zcRfNN0Sidb9pSB9fvzZnkXftnIv231fgLrbqn427DZM9itu\\r\\n#
  qBJR6L8FA6PRc6ZNN3SUHDSCD/AQ8rdHGO2n6Jl8P0zbr17C89XYcz1DTsEzOUyO\\r\\n#
  ArxCaC4Q6oRRRuLRvWoYWmEBc8pnol7XKHYC4jMYctenIPDC+hIK12NvDMk2ZItb\\r\\n#
  oKaDIV1fMHSRlJTYuVD5C4lh8zYGNRiER9vcG9H9stQcxWv2XFJRXRLbJbqvUAV6\\r\\n#
  bMURHXLvjflSxIUXk8A8FdsaN8cIFRg/eKtFtvUeh17aj54WcmnGrnu3tz5q4i6t\\r\\n#
  AgMBAAGjggHdMIIB2TASBgkrBgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQW\\r\\n#
  BBQqp1L+ZMSavoKRPEY1Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cVXQBeYl2D9OXSZacb\\r\\n#
  UzUZ6XIwXAYDVR0gBFUwUzBRBgwrBgEEAYI3TIN9AQEwQTA/BggrBgEFBQcCARYz\\r\\n#
  aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9Eb2NzL1JlcG9zaXRvcnku\\r\\n#
  aHRtMBMGA1UdJQQMMAoGCCsGAQUFBwMIMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIA\\r\\n#
  QwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2\\r\\n#
  VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwu\\r\\n#
  bWljcm9zb2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEw\\r\\n#
  LTA2LTIzLmNybDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93\\r\\n#
  d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYt\\r\\n#
  MjMuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQCdVX38Kq3hLB9nATEkW+Geckv8qW/q\\r\\n#
  XBS2Pk5HZHixBpOXPTEztTnXwnE2P9pkbHzQdTltuw8x5MKP+2zRoZQYIu7pZmc6\\r\\n#
  U03dmLq2HnjYNi6cqYJWAAOwBb6J6Gngugnue99qb74py27YP0h1AdkY3m2CDPVt\\r\\n#
  I1TkeFN1JFe53Z/zjj3G82jfZfakVqr3lbYoVSfQJL1AoL8ZthISEV09J+BAljis\\r\\n#
  9/kpicO8F7BUhUKz/AyeixmJ5/ALaoHCgRlCGVJ1ijbCHcNhcy4sa3tuPywJeBTp\\r\\n#
  kbKpW99Jo3QMvOyRgNI95ko+ZjtPu4b6MhrZlvSP9pEB9s7GdP32THJvEKt1MMU0\\r\\n#
  sHrYUP4KWN1APMdUbZ1jdEgssU5HLcEUBHG/ZPkkvnNtyo4JvbMBV0lUZNlz138e\\r\\n#
  W0QBjloZkWsNn6Qo3GcZKCS6OEuabvshVGtqRRFHqfG3rsjoiV5PndLQTHa1V1QJ\\r\\n#
  sWkBRH58oWFsc/4Ku+xBZj1p/cvBQUl+fpO+y/g75LcVv7TOPqUxUYS8vwLBgqJ7\\r\\n#
  Fx0ViY1w/ue10CgaiQuPNtq6TPmb/wrpNPgkNWcr4A245oyZ1uEi6vAnQj0llOZ0\\r\\n#
  dFtq0Z4+7X6gMTN9vMvpe784cETRkPHIqzqKOghif9lwY1NNje6CbaUFEMFxBmoQ\\r\\n#
  tB1VM1izoXBm8qGCAtQwggI9AgEBMIIBAKGB2KSB1TCB0jELMAkGA1UEBhMCVVMx\\r\\n#
  EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT\\r\\n#
  FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0IElyZWxh\\r\\n#
  bmQgT3BlcmF0aW9ucyBMaW1pdGVkMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjpE\\r\\n#
  MDgyLTRCRkQtRUVCQTElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2Vy\\r\\n#
  dmljZaIjCgEBMAcGBSsOAwIaAxUAdqNHe113gCJ87aZIGa5QBUqIwvKggYMwgYCk\\r\\n#
  fjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH\\r\\n#
  UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD\\r\\n#
  Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQUFAAIF\\r\\n#
  AOiyf1swIhgPMjAyMzA5MTgxNTQ4NDNaGA8yMDIzMDkxOTE1NDg0M1owdDA6Bgor\\r\\n#
  BgEEAYRZCgQBMSwwKjAKAgUA6LJ/WwIBADAHAgEAAgIJSjAHAgEAAgISJDAKAgUA\\r\\n#
  6LPQ2wIBADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIBAAID\\r\\n#
  B6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBBQUAA4GBAGK+6UVMbVgt4qWdPk/1\\r\\n#
  tYxGjavQWgZ3LPfp9l3mh/tQK2RhpjsBgKJO+VVBXcUW3YQb5qP9g40+jrcIFlfy\\r\\n#
  vrAK3UpbfuIZ6DJ6AayEF30fseVPvwaqjl/BJlKUL3ofsjEMcZPdpfHQv4Zdj3rr\\r\\n#
  cWGEIG68RqDIePRRKRZEJtI0MYIEDTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMx\\r\\n#
  EzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT\\r\\n#
  FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt\\r\\n#
  U3RhbXAgUENBIDIwMTACEzMAAAG6Hz8Z98F1vXwAAQAAAbowDQYJYIZIAWUDBAIB\\r\\n#
  BQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkqhkiG9w0BCQQx\\r\\n#
  IgQgYadrVhYugkNn/ywjh6tJ37ntH5tUO1WvoJ2sa5Mz6LIwgfoGCyqGSIb3DQEJ\\r\\n#
  EAIvMYHqMIHnMIHkMIG9BCApVb08M25w+tYGWsmlGtp1gy1nPcqWfqgMF3nlWYVz\\r\\n#
  BTCBmDCBgKR+MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw\\r\\n#
  DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x\\r\\n#
  JjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAABuh8/\\r\\n#
  GffBdb18AAEAAAG6MCIEIMHkOGC427PqmUI7Oe7xVuezks+e+hMM+17Nfgn9Gbmw\\r\\n#
  MA0GCSqGSIb3DQEBCwUABIICAEKE7ZkmQ1xDsee8ZSZP8Kkt2YJLG3nLR32JBRu3\\r\\n#
  uX7TPTDw9phd40N2ryva3Xjzht/JOPa0F4mg++YIwylXVIR6EqKNVLsIA/X8AGFa\\r\\n#
  ti+AJp6qNe9grV8DBK00whojtMK8JZhufOb7LEon5rBFEnJx3g8JhCvAqXFzxw+M\\r\\n#
  ctqJFm6+1ynuI7mKayA89TOLBmI4RviICjMZlsW3kNXRS1GryKt7H+C8y9kiLEMX\\r\\n#
  efauGyoMO8sToIxgrq2HZF88/b+y8c3cX+Q5iazWLzMYeWUUPrqWcIbjGjIFBMl9\\r\\n#
  weOXEAZVo6TSGDZOQkYi/FZxKWllnxVRN1S2Al5IUUvgXGl9ZpsW2DyM1S8Qxe+a\\r\\n#
  VrxwkOWKzHlnFo1qGz0Iq9ImHVqr2dOC5bDVMu+jlOA1LiZC5aHxuxaHWBN73Wp7\\r\\n#
  Hjy8h73drsmmiXovOWly7lWLatIuPJh00iiyBXdDtjmeDjso3aadUII5FQ1QWZ4F\\r\\n#
  4VWo161Gx+TxGlUt//4Hns5bn4UEGE43g9OCQuQ/WFMqdb3dHCzkkHDhWHbdpBy7\\r\\n#
  oHHEsAdgjMdQHWfnxhCj0ZHEOupc9j1CXpQtN/B6uzsQQ/Mp34Rhsgn+/REVAwpS\\r\\n#
  O7G69KWZrePZJiNrV/+eRn8ya6s8WNQAGB5zIQc8o+K9RGctLBOWcsRya9sqvL6r\\r\\n#
  xUQ2\\r\\n# SIG # End signature
  block\\r\\n\",\"status\":200,\"statusText\":\"OK\",\"headers\":{\"cache-contr\
  ol\":\"public,
  max-age=300\",\"content-length\":\"70226\",\"content-type\":\"application/oct\
  et-stream\",\"last-modified\":\"Wed, 15 Nov 2023 00:07:14
  GMT\",\"accept-ranges\":\"bytes\",\"etag\":\"\\\"1da1757afcfb752\\\"\",\"loca\
  tion\":\"/en-us/download/dotnet/scripts/v1/dotnet-install.ps1\",\"set-cookie\
  \":\"TiPMix=19.01052370855344; path=/; HttpOnly;
  Domain=dotnetwebsite.azurewebsites.net; Max-Age=3600; Secure; SameSite=None,
  x-ms-routing-name=self; path=/; HttpOnly;
  Domain=dotnetwebsite.azurewebsites.net; Max-Age=3600; Secure;
  SameSite=None\",\"request-context\":\"appId=cid-v1:109cec76-ff6c-4be0-97b5-4f\
  02dbac2451\",\"x-powered-by\":\"ASP.NET\",\"x-content-type-options\":\"nosniff\
  \",\"x-cache\":\"CONFIG_NOCACHE\",\"x-azure-ref\":\"0fS9UZQAAAAC5nTTfLrhFR4B9\
  gme2XnARVFlPMDFFREdFMjMxOABlMWRmMDcwYS1hZTQ0LTRjMGItYTU0Yi1jNDkzODA0ZTRkOWY=\
  \",\"date\":\"Wed, 15 Nov 2023 02:39:56
  GMT\",\"x-axios-cache-stale-if-error\":\"300000\"}}},\"axios-cache:1460287405\
  \":{\"state\":\"cached\",\"ttl\":60000000,\"createdAt\":1702610080539,\"data\
  \":{\"data\":{\"$schema\":\"https://json.schemastore.org/dotnet-releases-inde\
  x.json\",\"releases-index\":[{\"channel-version\":\"8.0\",\"latest-release\":\
  \"8.0.0\",\"latest-release-date\":\"2023-11-14\",\"security\":true,\"latest-r\
  untime\":\"8.0.0\",\"latest-sdk\":\"8.0.100\",\"product\":\".NET\",\"release-\
  type\":\"lts\",\"support-phase\":\"active\",\"eol-date\":\"2026-11-10\",\"rel\
  eases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadat\
  a/8.0/releases.json\"},{\"channel-version\":\"7.0\",\"latest-release\":\"7.0.\
  14\",\"latest-release-date\":\"2023-11-14\",\"security\":true,\"latest-runtime\
  \":\"7.0.14\",\"latest-sdk\":\"7.0.404\",\"product\":\".NET\",\"release-type\
  \":\"sts\",\"support-phase\":\"maintenance\",\"eol-date\":\"2024-05-24\",\"re\
  leases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/release-metada\
  ta/7.0/releases.json\"},{\"channel-version\":\"6.0\",\"latest-release\":\"6.0\
  .25\",\"latest-release-date\":\"2023-11-14\",\"security\":true,\"latest-runti\
  me\":\"6.0.25\",\"latest-sdk\":\"6.0.417\",\"product\":\".NET\",\"release-type\
  \":\"lts\",\"support-phase\":\"active\",\"eol-date\":\"2024-11-12\",\"release\
  s.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/6.\
  0/releases.json\"},{\"channel-version\":\"5.0\",\"latest-release\":\"5.0.17\",\
  \"latest-release-date\":\"2022-05-10\",\"security\":true,\"latest-runtime\":\
  \"5.0.17\",\"latest-sdk\":\"5.0.408\",\"product\":\".NET\",\"release-type\":\
  \"sts\",\"support-phase\":\"eol\",\"eol-date\":\"2022-05-10\",\"releases.json\
  \":\"https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/5.0/rele\
  ases.json\"},{\"channel-version\":\"3.1\",\"latest-release\":\"3.1.32\",\"lat\
  est-release-date\":\"2022-12-13\",\"security\":true,\"latest-runtime\":\"3.1.\
  32\",\"latest-sdk\":\"3.1.426\",\"product\":\".NET
  Core\",\"release-type\":\"lts\",\"support-phase\":\"eol\",\"eol-date\":\"2022\
  -12-13\",\"releases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/r\
  elease-metadata/3.1/releases.json\"},{\"channel-version\":\"3.0\",\"latest-re\
  lease\":\"3.0.3\",\"latest-release-date\":\"2020-02-18\",\"security\":false,\
  \"latest-runtime\":\"3.0.3\",\"latest-sdk\":\"3.0.103\",\"product\":\".NET
  Core\",\"release-type\":\"sts\",\"support-phase\":\"eol\",\"eol-date\":\"2020\
  -03-03\",\"releases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/r\
  elease-metadata/3.0/releases.json\"},{\"channel-version\":\"2.1\",\"latest-re\
  lease\":\"2.1.30\",\"latest-release-date\":\"2021-08-19\",\"security\":true,\
  \"latest-runtime\":\"2.1.30\",\"latest-sdk\":\"2.1.818\",\"product\":\".NET
  Core\",\"release-type\":\"lts\",\"support-phase\":\"eol\",\"eol-date\":\"2021\
  -08-21\",\"releases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/r\
  elease-metadata/2.1/releases.json\"},{\"channel-version\":\"2.2\",\"latest-re\
  lease\":\"2.2.8\",\"latest-release-date\":\"2019-11-19\",\"security\":true,\"\
  latest-runtime\":\"2.2.8\",\"latest-sdk\":\"2.2.207\",\"product\":\".NET
  Core\",\"release-type\":\"sts\",\"support-phase\":\"eol\",\"eol-date\":\"2019\
  -12-23\",\"releases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/r\
  elease-metadata/2.2/releases.json\"},{\"channel-version\":\"2.0\",\"latest-re\
  lease\":\"2.0.9\",\"latest-release-date\":\"2018-07-10\",\"security\":true,\"\
  latest-runtime\":\"2.0.9\",\"latest-sdk\":\"2.1.202\",\"product\":\".NET
  Core\",\"release-type\":\"sts\",\"support-phase\":\"eol\",\"eol-date\":\"2018\
  -10-01\",\"releases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/r\
  elease-metadata/2.0/releases.json\"},{\"channel-version\":\"1.1\",\"latest-re\
  lease\":\"1.1.13\",\"latest-release-date\":\"2019-05-14\",\"security\":true,\
  \"latest-runtime\":\"1.1.13\",\"latest-sdk\":\"1.1.14\",\"product\":\".NET
  Core\",\"release-type\":\"lts\",\"support-phase\":\"eol\",\"eol-date\":\"2019\
  -06-27\",\"releases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/r\
  elease-metadata/1.1/releases.json\"},{\"channel-version\":\"1.0\",\"latest-re\
  lease\":\"1.0.16\",\"latest-release-date\":\"2019-05-14\",\"security\":true,\
  \"latest-runtime\":\"1.0.16\",\"latest-sdk\":\"1.1.14\",\"product\":\".NET
  Core\",\"release-type\":\"lts\",\"support-phase\":\"eol\",\"eol-date\":\"2019\
  -06-27\",\"releases.json\":\"https://dotnetcli.blob.core.windows.net/dotnet/r\
  elease-metadata/1.0/releases.json\"}]},\"status\":200,\"statusText\":\"OK\",\
  \"headers\":{\"content-length\":\"5894\",\"content-type\":\"application/json\
  \",\"content-md5\":\"Sj9vVSm3TxOnUZ0PUBEgbg==\",\"last-modified\":\"Tue, 14
  Nov 2023 17:57:32
  GMT\",\"etag\":\"0x8DBE53B2CD112AF\",\"server\":\"Windows-Azure-Blob/1.0
  Microsoft-HTTPAPI/2.0\",\"x-ms-request-id\":\"dc9005e8-a01e-010f-3104-2f93ca0\
  00000\",\"x-ms-version\":\"2009-09-19\",\"x-ms-lease-status\":\"unlocked\",\"\
  x-ms-blob-type\":\"BlockBlob\",\"date\":\"Fri, 15 Dec 2023 03:14:42
  GMT\",\"x-axios-cache-stale-if-error\":\"60000000\"}}}}"
ms-dotnettools.vscodeintellicode-csharp: '{"ms-dotnettools.vscodeintellicode-csharp-visualstudioexptteam.vscodeintellicode-completions/copilotNotificationDoNotShowAgain":true}'
ms-python.python: "{\"VSCode.ABExp.FeatureData\":{\"features\":[\"aa_t_chat\",\
  \"account-aacf\",\"config.editor.experimental.asyncTokenization\",\"config.my\
  py-type-checker.preferDaemoncf\",\"config.python.analysis.disableSemanticOnNo\
  Python\",\"config.python.analysis.enablePytestExtra\",\"config.python.analysi\
  s.gotoDefinitionInStringLiteral\",\"config.python.analysis.persistAllIndices\
  \",\"config.python.createEnvironment.contentButton\",\"config.python.createEn\
  vironment.trigger\",\"config.python.missingPackage.severity\",\"livesharecont\
  inuousaacf\",\"mindaroBinariesVersion-1.0.20210702\",\"mindaroBinariesVersion\
  -1.0.20210723\",\"pythonRecommendTensorboardExt\",\"pythonREPLSmartSend\",\"p\
  ythonTerminalEnvVarActivation\",\"pythonTestAdapter\",\"reusableLinks\"],\"as\
  signmentContext\":\"vsliv368cf:30146710;vsreu685:30147344;bridge0708:30335490\
  ;bridge0723:30353136;vsaa593cf:30376535;py29gd2263:30899288;962ge761:30917236\
  ;pythongtdpath:30769146;pythonnosmt12:30797651;pythonidxpt:30866567;pythonnoc\
  eb:30805159;asynctok:30898717;pythonmpsinfo:30901776;pythontestfixt:30902429;\
  pyreplss1:30897532;pythonmypyd1:30879173;pythoncet0:30885854;pythontbext0:308\
  99298;aa_t_chat:30882232;\",\"configs\":[{\"Id\":\"vscode\",\"Parameters\":{\
  \"aa_t_chat\":true,\"account-aa\":false,\"config.editor.experimental.asyncTok\
  enization\":true,\"config.mypy-type-checker.preferDaemon\":false,\"config.pyt\
  hon.analysis.disableSemanticOnNoPython\":true,\"config.python.analysis.enable\
  PytestExtra\":true,\"config.python.analysis.gotoDefinitionInStringLiteral\":t\
  rue,\"config.python.analysis.persistAllIndices\":true,\"config.python.createE\
  nvironment.contentButton\":\"hide\",\"config.python.createEnvironment.trigger\
  \":\"prompt\",\"config.python.missingPackage.severity\":\"Information\",\"liv\
  esharecontinuousaa\":false,\"mindaroBinariesVersion-1.0.20210702\":\"1.0.2021\
  0708.15\",\"mindaroBinariesVersion-1.0.20210723\":\"1.0.20210723.6\",\"python\
  RecommendTensorboardExt\":true,\"pythonREPLSmartSend\":true,\"pythonTerminalE\
  nvVarActivation\":true,\"pythonTestAdapter\":true,\"reusableLinks\":true}}]},\
  \"pylanceDefaultPromptMemento\":true,\"preferredGlobalPyInterpreter\":{\"id\":\
  \"C:\\\\USERS\\\\ADMINISTRATOR\\\\APPDATA\\\\LOCAL\\\\PROGRAMS\\\\PYTHON\\\\P\
  YTHON310\\\\PYTHON.EXE\",\"sysPrefix\":\"C:\\\\Users\\\\Administrator\\\\AppD\
  ata\\\\Local\\\\Programs\\\\Python\\\\Python310\",\"envType\":\"Global\",\"en\
  vName\":\"\",\"envPath\":\"\",\"path\":\"C:\\\\Users\\\\Administrator\\\\AppD\
  ata\\\\Local\\\\Programs\\\\Python\\\\Python310\\\\python.exe\",\"architecture\
  \":3,\"sysVersion\":\"3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41)
  [MSC v.1929 64 bit
  (AMD64)]\",\"version\":{\"raw\":\"3.10.4\",\"major\":3,\"minor\":10,\"patch\"\
  :4,\"build\":[],\"prerelease\":[\"final\",\"0\"]},\"companyDisplayName\":\"Py\
  thonCore\",\"displayName\":\"Python 3.10.4
  64-bit\",\"detailedDisplayName\":\"Python 3.10.4
  64-bit\"},\"DebuggerLaunchCounter\":39,\"DebuggerLaunchThresholdCounter\":10.\
  60234988937209,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\HOUDINIPROJECTS\\\\PDG\\\
  \\LCL-PDG-UNITY\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\
  \\WORK\\\\NGAME\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_C:\\\\USERS\\\\ADMINI\
  STRATOR\\\\DOCUMENTS\\\\HOUDINI19.0\\\\SIDEFXLABS\\\\19.0.622\":true,\"PYTHON\
  _WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\T2SCENEPROJECT\":true,\
  \"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\PYTHON\\\\WAVEFUNCTION-COLLAPSE\":true,\
  \"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LEARNU\
  NITYSHADER\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\BLENDER\\\\BLENDER-M\
  ASTER\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\\
  APPMODELPROJECT\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\PYTHON\\\\LCL-T\
  OOLS\":true,\"DebuggerUserSelected\":false,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\
  \\\\UNITYPROJECTS\\\\WORK\\\\APPSCENEPROJECT\":true,\"PYTHON_WAS_DISCOVERY_TR\
  IGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\APPTEST\":true,\"PYTHON_WAS_DISCOVERY_\
  TRIGGERED_F:\\\\UNITYPROJECTS\\\\参考工程\\\\UIELEMENTSEXAMPLES-MASTER\\\\UIELEME\
  NTSEXAMPLES-MASTER\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\
  \\\\EMPTY2021\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\\
  WORK\\\\T15SCENEPROJECT\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\PYTHON\\\
  \\TEST\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\TOOLS\\\\BUILTIN-TO-URPT\
  OOL-MASTER\\\\BUILTINTOURPTOOL\":true,\"isRemoteGlobalSettingCopiedKey\":true,\
  \"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\APPSCENEPROJE\
  CTURP\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\\
  APPSCENEPROJECTURP\\\\LIBRARY\\\\PACKAGECACHE\":true,\"PYTHON_WAS_DISCOVERY_T\
  RIGGERED_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LEARNURP\\\\PACKAGES\\\\COM.UN\
  ITY.RENDER-PIPELINES.UNIVERSAL@12.1.6\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED\
  _F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LEARNURP\\\\LIBRARY\\\\PACKAGECACHE\\\
  \\COM.UNITY.RENDER-PIPELINES.CORE@12.1.6\":true,\"PYTHON_WAS_DISCOVERY_TRIGGE\
  RED_E:\\\\UNITYPROJECTS\\\\EXAMPLES\\\\EYESHADER\\\\URP-DEFENDER-CHARACTER-DE\
  MO\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_C:\\\\USERS\\\\ADMINISTRATOR\\\\AP\
  PDATA\\\\ROAMING\\\\BLENDER
  FOUNDATION\\\\BLENDER\\\\3.1\\\\SCRIPTS\\\\ADDONS\\\\EASYIMPORT\":true,\"PYTH\
  ON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\BLENDERADDONS\
  \":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_C:\\\\USERS\\\\ADMINISTRATOR\\\\APPD\
  ATA\\\\ROAMING\\\\BLENDER
  FOUNDATION\\\\BLENDER\\\\3.1\\\\SCRIPTS\\\\ADDONS\\\\DRAGNDROP-MASTER\":true,\
  \"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\BLENDE\
  RADDON\\\\DRAGIMPORTER\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPRO\
  JECTS\\\\参考工程\\\\X-POSTPROCESSING-LIBRARY-MASTER\":true,\"PYTHON_WAS_DISCOVER\
  Y_TRIGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\APPGAMEUNITY\":true,\"PYTHON_WAS_D\
  ISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\HOUDINIHDA\":true,\"PYTHON_WAS_DISC\
  OVERY_TRIGGERED_D:\\\\PROGRAM FILES\\\\ALLEGORITHMIC\\\\SUBSTANCE
  PAINTER\\\\RESOURCES\\\\SHELF\\\\ALLEGORITHMIC\\\\SHADERS\":true,\"PYTHON_WAS\
  _DISCOVERY_TRIGGERED_D:\\\\PROGRAM FILES\\\\ALLEGORITHMIC\\\\SUBSTANCE
  PAINTER\\\\RESOURCES\":true,\"remoteWorkspaceKeysForWhichTheCopyIsDone_Key\":[\
  \"1679396949681\",\"1677207542580\",\"1677034882311\",\"1673956692725\",\"167\
  3336435719\"],\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\参考工程\\\
  \\HIGHQUALITYSHADOWMAP\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_D:\\\\AI\\\\CH\
  UANHUCHATGPT-MAIN\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\
  \\\\LICHANGLONG\\\\LCL-RENDERPIPELINE\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED\
  _F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LEARNURP\":true,\"PYTHON_WAS_DISCOVERY\
  _TRIGGERED_F:\\\\UNITYPROJECTS\\\\REFERENCE\\\\VOLUMETRIC-LIGHT-SCATTERING-AS\
  -A-CUSTOM-RENDER-FEATURE-WITH-URP\\\\VOLUMETRIC LIGHT SCATTERING AS A CUSTOM
  RENDER FEATURE WITH URP
  FINAL\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\LICHANGL\
  ONG\\\\LCL-TOOLS-PYTHON\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_D:\\\\AI\\\\A\
  UTO-GPT\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\REFERE\
  NCE\\\\FOGOFWAR\\\\FOGOFWAR-MASTER\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_E:\
  \\\\UNREALPROJECT\\\\TOOLSPY\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UN\
  ITYPROJECTS\\\\LICHANGLONG\\\\LCL-SOFT-RENDER\":true,\"PYTHON_WAS_DISCOVERY_T\
  RIGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\ATSCENEPROJECT\":true,\"PYTHON_WAS_DI\
  SCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\URPTEST\":true,\"PYTHON_WAS_DISCOVER\
  Y_TRIGGERED_F:\\\\TOOLS\\\\HW_SECKILL\":true,\"PYTHON_WAS_DISCOVERY_TRIGGERED\
  _F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LCL-URP-RENDER\":true,\"PYTHON_WAS_DIS\
  COVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\UNITYSOURCECODE\\\\UNITY2021.3.1\":tr\
  ue,\"PYTHON_WAS_DISCOVERY_TRIGGERED_D:\\\\AI\\\\STABLE-DIFFUSION-WEBUI\":true,\
  \"PYTHON_ENV_INFO_CACHE\":[{\"name\":\"\",\"location\":\"\",\"kind\":\"global\
  -other\",\"executable\":{\"filename\":\"C:\\\\Users\\\\Administrator\\\\AppDa\
  ta\\\\Local\\\\Programs\\\\Python\\\\Python310\\\\python.exe\",\"sysPrefix\":\
  \"C:\\\\Users\\\\Administrator\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\P\
  ython310\",\"ctime\":1701154251598,\"mtime\":1659362398000},\"display\":\"Pyt\
  hon 3.10.6
  64-bit\",\"version\":{\"major\":3,\"minor\":10,\"micro\":6,\"release\":{\"lev\
  el\":\"final\",\"serial\":0},\"sysVersion\":\"3.10.6 (tags/v3.10.6:9c7b4bd,
  Aug  1 2022, 21:53:49) [MSC v.1932 64 bit
  (AMD64)]\"},\"arch\":3,\"distro\":{\"org\":\"PythonCore\",\"defaultDisplayName\
  \":\"Python 3.10 (64-bit)\"},\"source\":[\"path env var\",\"windows
  registry\"],\"id\":\"C:\\\\USERS\\\\ADMINISTRATOR\\\\APPDATA\\\\LOCAL\\\\PROG\
  RAMS\\\\PYTHON\\\\PYTHON310\\\\PYTHON.EXE\",\"detailedDisplayName\":\"Python
  3.10.6
  64-bit\"},{\"name\":\"\",\"location\":\"\",\"kind\":\"unknown\",\"executable\
  \":{\"filename\":\"d:\\\\Program Files\\\\Allegorithmic\\\\Substance
  Painter\\\\resources\\\\pythonsdk\\\\python.exe\",\"sysPrefix\":\"d:\\\\Progr\
  am Files\\\\Allegorithmic\\\\Substance
  Painter\\\\resources\\\\pythonsdk\",\"ctime\":1657509263569,\"mtime\":1614618\
  280000},\"searchLocation\":\"file:///\",\"display\":\"Python 3.7.6
  64-bit\",\"version\":{\"major\":3,\"minor\":7,\"micro\":6,\"release\":{\"level\
  \":\"final\",\"serial\":0},\"sysVersion\":\"3.7.6 (tags/v3.7.6:43364a7ae0, Dec
  19 2019, 00:42:30) [MSC v.1916 64 bit
  (AMD64)]\"},\"arch\":3,\"distro\":{\"org\":\"\"},\"source\":[],\"id\":\"D:\\\
  \\PROGRAM FILES\\\\ALLEGORITHMIC\\\\SUBSTANCE
  PAINTER\\\\RESOURCES\\\\PYTHONSDK\\\\PYTHON.EXE\",\"detailedDisplayName\":\"P\
  ython 3.7.6
  64-bit\"},{\"name\":\"venv\",\"location\":\"d:\\\\AI\\\\stable-diffusion-webui\
  \\\\venv\",\"kind\":\"virt-venv\",\"executable\":{\"filename\":\"d:\\\\AI\\\\\
  stable-diffusion-webui\\\\venv\\\\Scripts\\\\python.exe\",\"sysPrefix\":\"d:\\\
  \\AI\\\\stable-diffusion-webui\\\\venv\",\"ctime\":1701223339544,\"mtime\":17\
  01223339544},\"searchLocation\":\"file:///d%3A/AI/stable-diffusion-webui/venv\
  \",\"display\":\"Python 3.10.6 ('venv':
  venv)\",\"version\":{\"major\":3,\"minor\":10,\"micro\":6,\"release\":{\"level\
  \":\"final\",\"serial\":0},\"sysVersion\":\"3.10.6 (tags/v3.10.6:9c7b4bd,
  Aug  1 2022, 21:53:49) [MSC v.1932 64 bit
  (AMD64)]\"},\"arch\":3,\"distro\":{\"org\":\"\"},\"source\":[],\"type\":\"Vir\
  tual\",\"id\":\"D:\\\\AI\\\\STABLE-DIFFUSION-WEBUI\\\\VENV\\\\SCRIPTS\\\\PYTH\
  ON.EXE\",\"detailedDisplayName\":\"Python 3.10.6 ('venv':
  venv)\"}],\"remoteWorkspaceFolderKeysForWhichTheCopyIsDone_Key\":[\"D:\\\\AI\\\
  \\STABLE-DIFFUSION-WEBUI\",\"F:\\\\UNITYPROJECTS\\\\UNITYSOURCECODE\\\\UNITY2\
  021.3.1\",\"F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LCL-URP-RENDER\",\"F:\\\\TO\
  OLS\\\\HW_SECKILL\",\"F:\\\\UNITYPROJECTS\\\\URPTEST\",\"F:\\\\UNITYPROJECTS\\\
  \\WORK\\\\ATSCENEPROJECT\",\"F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LCL-SOFT-R\
  ENDER\",\"E:\\\\UNREALPROJECT\\\\TOOLSPY\",\"F:\\\\UNITYPROJECTS\\\\REFERENCE\
  \\\\FOGOFWAR\\\\FOGOFWAR-MASTER\",\"D:\\\\AI\\\\AUTO-GPT\",\"F:\\\\UNITYPROJE\
  CTS\\\\LICHANGLONG\\\\LCL-TOOLS-PYTHON\",\"F:\\\\PYTHON\\\\LCL-TOOLS\",\"F:\\\
  \\PYTHON\\\\TEST\",\"F:\\\\UNITYPROJECTS\\\\REFERENCE\\\\VOLUMETRIC-LIGHT-SCA\
  TTERING-AS-A-CUSTOM-RENDER-FEATURE-WITH-URP\\\\VOLUMETRIC LIGHT SCATTERING AS
  A CUSTOM RENDER FEATURE WITH URP
  FINAL\",\"F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LEARNURP\",\"D:\\\\AI\\\\CHUA\
  NHUCHATGPT-MAIN\",\"F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LEARNUNITYSHADER\",\
  \"F:\\\\UNITYPROJECTS\\\\参考工程\\\\HIGHQUALITYSHADOWMAP\",\"D:\\\\PROGRAM
  FILES\\\\ALLEGORITHMIC\\\\SUBSTANCE
  PAINTER\\\\RESOURCES\\\\SHADER-DOC\",\"D:\\\\PROGRAM
  FILES\\\\ALLEGORITHMIC\\\\SUBSTANCE PAINTER\\\\RESOURCES\",\"D:\\\\PROGRAM
  FILES\\\\ALLEGORITHMIC\\\\SUBSTANCE
  PAINTER\\\\RESOURCES\\\\SHELF\\\\ALLEGORITHMIC\\\\SHADERS\",\"F:\\\\UNITYPROJ\
  ECTS\\\\HOUDINIHDA\",\"F:\\\\UNITYPROJECTS\\\\WORK\\\\APPGAMEUNITY\",\"F:\\\\\
  UNITYPROJECTS\\\\参考工程\\\\X-POSTPROCESSING-LIBRARY-MASTER\",\"F:\\\\UNITYPROJE\
  CTS\\\\LICHANGLONG\\\\BLENDERADDON\\\\DRAGIMPORTER\",\"C:\\\\USERS\\\\ADMINIS\
  TRATOR\\\\APPDATA\\\\ROAMING\\\\BLENDER
  FOUNDATION\\\\BLENDER\\\\3.1\\\\SCRIPTS\\\\ADDONS\\\\DRAGNDROP-MASTER\",\"F:\\\
  \\UNITYPROJECTS\\\\LICHANGLONG\\\\BLENDERADDONS\",\"C:\\\\USERS\\\\ADMINISTRA\
  TOR\\\\APPDATA\\\\ROAMING\\\\BLENDER
  FOUNDATION\\\\BLENDER\\\\3.1\\\\SCRIPTS\\\\ADDONS\\\\EASYIMPORT\",\"E:\\\\UNI\
  TYPROJECTS\\\\EXAMPLES\\\\EYESHADER\\\\URP-DEFENDER-CHARACTER-DEMO\",\"F:\\\\\
  UNITYPROJECTS\\\\LICHANGLONG\\\\LEARNURP\\\\PACKAGES\\\\COM.UNITY.RENDER-PIPE\
  LINES.UNIVERSAL@12.1.6\",\"F:\\\\UNITYPROJECTS\\\\WORK\\\\APPSCENEPROJECTURP\\\
  \\LIBRARY\\\\PACKAGECACHE\",\"F:\\\\UNITYPROJECTS\\\\WORK\\\\T2SCENEPROJECT\",\
  \"F:\\\\UNITYPROJECTS\\\\WORK\\\\APPSCENEPROJECTURP\",\"F:\\\\TOOLS\\\\BUILTI\
  N-TO-URPTOOL-MASTER\\\\BUILTINTOURPTOOL\"],\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\
  \\\\UNITYPROJECTS\\\\REFERENCE\\\\VSCODE-SYNC-SETTINGS\":true,\"PYTHON_WAS_DI\
  SCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\VSCODESETTING\":true,\
  \"PYTHON_GLOBAL_STORAGE_KEYS\":[{\"key\":\"TERMINAL_ENV_COLLECTION_PROMPT_KEY\
  \",\"defaultValue\":true},{\"key\":\"WORKSPACE_FOLDER_INTERPRETER_PATH_F:\\\\\
  UNITYPROJECTS\\\\LICHANGLONG\\\\VSCODESETTING\"},{\"key\":\"PYTHON_WAS_DISCOV\
  ERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\VSCODESETTING\",\"default\
  Value\":false},{\"key\":\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\
  \\REFERENCE\\\\VSCODE-SYNC-SETTINGS\",\"defaultValue\":false},{\"key\":\"WORK\
  SPACE_INTERPRETER_PATH_1702556933324\"},{\"key\":\"WORKSPACE_FOLDER_INTERPRET\
  ER_PATH_F:\\\\UNITYPROJECTS\\\\REFERENCE\\\\VSCODE-SYNC-SETTINGS\"},{\"key\":\
  \"PYTHON_WAS_DISCOVERY_TRIGGERED_D:\\\\AI\\\\STABLE-DIFFUSION-WEBUI\",\"defau\
  ltValue\":false},{\"key\":\"WORKSPACE_FOLDER_INTERPRETER_PATH_D:\\\\AI\\\\STA\
  BLE-DIFFUSION-WEBUI\"},{\"key\":\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYP\
  ROJECTS\\\\UNITYSOURCECODE\\\\UNITY2021.3.1\",\"defaultValue\":false},{\"key\
  \":\"WORKSPACE_FOLDER_INTERPRETER_PATH_F:\\\\UNITYPROJECTS\\\\UNITYSOURCECODE\
  \\\\UNITY2021.3.1\"},{\"key\":\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNITYPRO\
  JECTS\\\\LICHANGLONG\\\\LCL-URP-RENDER\",\"defaultValue\":false},{\"key\":\"W\
  ORKSPACE_FOLDER_INTERPRETER_PATH_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LCL-UR\
  P-RENDER\"},{\"key\":\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\TOOLS\\\\HW_SECKI\
  LL\",\"defaultValue\":false},{\"key\":\"WORKSPACE_FOLDER_INTERPRETER_PATH_F:\\\
  \\TOOLS\\\\HW_SECKILL\"},{\"key\":\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\UNIT\
  YPROJECTS\\\\URPTEST\",\"defaultValue\":false},{\"key\":\"WORKSPACE_FOLDER_IN\
  TERPRETER_PATH_F:\\\\UNITYPROJECTS\\\\URPTEST\"},{\"key\":\"PYTHON_WAS_DISCOV\
  ERY_TRIGGERED_F:\\\\UNITYPROJECTS\\\\WORK\\\\ATSCENEPROJECT\",\"defaultValue\
  \":false},{\"key\":\"WORKSPACE_FOLDER_INTERPRETER_PATH_F:\\\\UNITYPROJECTS\\\
  \\WORK\\\\ATSCENEPROJECT\"},{\"key\":\"PYTHON_WAS_DISCOVERY_TRIGGERED_F:\\\\U\
  NITYPROJECTS\\\\LICHANGLONG\\\\LCL-SOFT-RENDER\",\"defaultValue\":false},{\"k\
  ey\":\"PYTHON_EXTENSION_GLOBAL_STORAGE_KEYS\",\"defaultValue\":[]},{\"key\":\
  \"PythonTensorBoardWebviewPreferredViewGroup\",\"defaultValue\":-1},{\"key\":\
  \"WORKSPACE_FOLDER_INTERPRETER_PATH_F:\\\\UNITYPROJECTS\\\\LICHANGLONG\\\\LCL\
  -SOFT-RENDER\"},{\"key\":\"preferredGlobalPyInterpreter\"},{\"key\":\"isRemot\
  eGlobalSettingCopiedKey\",\"defaultValue\":false},{\"key\":\"remoteWorkspaceF\
  olderKeysForWhichTheCopyIsDone_Key\",\"defaultValue\":[]},{\"key\":\"PYTHON_E\
  NV_INFO_CACHE\",\"defaultValue\":[]},{\"key\":\"VSCode.ABExp.FeatureData\",\"\
  defaultValue\":{\"features\":[]}}]}"
ms-python.vscode-pylance: '{"insidersChannel":"off","VSCode.ABExp.FeatureData":{"features":["aa_t_chat","account-aacf","config.editor.experimental.asyncTokenization","config.mypy-type-checker.preferDaemoncf","config.python.analysis.disableSemanticOnNoPython","config.python.analysis.enablePytestExtra","config.python.analysis.gotoDefinitionInStringLiteral","config.python.analysis.persistAllIndices","config.python.createEnvironment.contentButton","config.python.createEnvironment.trigger","config.python.missingPackage.severity","livesharecontinuousaacf","mindaroBinariesVersion-1.0.20210702","mindaroBinariesVersion-1.0.20210723","pythonRecommendTensorboardExt","pythonREPLSmartSend","pythonTerminalEnvVarActivation","pythonTestAdapter","reusableLinks"],"assignmentContext":"vsliv368cf:30146710;vsreu685:30147344;bridge0708:30335490;bridge0723:30353136;vsaa593cf:30376535;py29gd2263:30899288;962ge761:30917236;pythongtdpath:30769146;pythonnosmt12:30797651;pythonidxpt:30866567;pythonnoceb:30805159;asynctok:30898717;pythonmpsinfo:30901776;pythontestfixt:30902429;pyreplss1:30897532;pythonmypyd1:30879173;pythoncet0:30885854;pythontbext0:30899298;aa_t_chat:30882232;","configs":[{"Id":"vscode","Parameters":{"aa_t_chat":true,"account-aa":false,"config.editor.experimental.asyncTokenization":true,"config.mypy-type-checker.preferDaemon":false,"config.python.analysis.disableSemanticOnNoPython":true,"config.python.analysis.enablePytestExtra":true,"config.python.analysis.gotoDefinitionInStringLiteral":true,"config.python.analysis.persistAllIndices":true,"config.python.createEnvironment.contentButton":"hide","config.python.createEnvironment.trigger":"prompt","config.python.missingPackage.severity":"Information","livesharecontinuousaa":false,"mindaroBinariesVersion-1.0.20210702":"1.0.20210708.15","mindaroBinariesVersion-1.0.20210723":"1.0.20210723.6","pythonRecommendTensorboardExt":true,"pythonREPLSmartSend":true,"pythonTerminalEnvVarActivation":true,"pythonTestAdapter":true,"reusableLinks":true}}]}}'
ms-toolsai.jupyter: '{"VSCode.ABExp.FeatureData":{"features":["aa_t_chat","account-aacf","config.editor.experimental.asyncTokenization","config.jupyter.formatStackTracescf","config.jupyter.interactiveWindow.textEditor.normalizeSelectioncf","config.jupyter.showOnlyOneTypeOfKernel","config.mypy-type-checker.preferDaemoncf","config.python.analysis.disableSemanticOnNoPython","config.python.analysis.enablePytestExtra","config.python.analysis.gotoDefinitionInStringLiteral","config.python.analysis.persistAllIndices","config.python.createEnvironment.contentButton","config.python.createEnvironment.trigger","FastKernelPicker","livesharecontinuousaacf","mindaroBinariesVersion","mindaroBinariesVersion-1.0.20210702","mindaroBinariesVersion-1.0.20210723","NativeNotebookEditor","NewJupyterSession","NewRemoteUriStorage","PasswordManager","portForwardingServiceEnabled-development","portForwardingServiceEnabled-production","portForwardingServiceEnabled-staging","pythonRecommendTensorboardExt","pythonREPLSmartSend","pythonTerminalEnvVarActivation","pythonTestAdapter","RemoveKernelToolbarInInteractiveWindowcf","reusableLinks","shouldUseGrpcService"],"assignmentContext":"vsliv368cf:30146710;vsreu685:30147344;python383cf:30185419;vspor879:30202332;vspor708:30202333;vspor363:30204092;vsjup518:30340749;binariesv615:30325510;bridge0708:30335490;bridge0723:30353136;vsaa593cf:30376535;py29gd2263:30899288;c4g48928:30535728;dsvsc012:30540252;962ge761:30917236;pythongtdpath:30769146;pythonnosmt12:30797651;pythonidxpt:30866567;pythonnoceb:30805159;asynctok:30898717;dsvsc013:30795093;dsvsc014:30804076;dsvsc015:30845448;pythontestfixt:30902429;pyreplss1:30897532;pythonmypyd1:30879173;pythoncet0:30885854;pythontbext0:30879054;dsvsc016:30899300;dsvsc017:30899301;aa_t_chat:30882232;","configs":[{"Id":"vscode","Parameters":{"aa_t_chat":true,"account-aa":false,"config.editor.experimental.asyncTokenization":true,"config.jupyter.formatStackTraces":false,"config.jupyter.interactiveWindow.textEditor.normalizeSelection":false,"config.jupyter.showOnlyOneTypeOfKernel":"true","config.mypy-type-checker.preferDaemon":false,"config.python.analysis.disableSemanticOnNoPython":true,"config.python.analysis.enablePytestExtra":true,"config.python.analysis.gotoDefinitionInStringLiteral":true,"config.python.analysis.persistAllIndices":true,"config.python.createEnvironment.contentButton":"hide","config.python.createEnvironment.trigger":"prompt","FastKernelPicker":true,"livesharecontinuousaa":false,"mindaroBinariesVersion":"1.0.20210615.1","mindaroBinariesVersion-1.0.20210702":"1.0.20210708.15","mindaroBinariesVersion-1.0.20210723":"1.0.20210723.6","NativeNotebookEditor":true,"NewJupyterSession":true,"NewRemoteUriStorage":true,"PasswordManager":true,"portForwardingServiceEnabled-development":true,"portForwardingServiceEnabled-production":true,"portForwardingServiceEnabled-staging":true,"pythonRecommendTensorboardExt":true,"pythonREPLSmartSend":true,"pythonTerminalEnvVarActivation":true,"pythonTestAdapter":true,"RemoveKernelToolbarInInteractiveWindow":false,"reusableLinks":true,"shouldUseGrpcService":true}}]},"INTERPRETER_PATH_WAS_SELECTED_FOR_JUPYTER_SERVER":true,"CACHE_KEY_FOR_JUPYTER_KERNELSPEC_ROOT_PATH.":"file:///c%3A/Users/Administrator/AppData/Roaming/jupyter/kernels","JupyterDetectionTelemetrySentMementoKey":true,"NewUserUriMigrationCompleted":"a4bea0b9ba4213e24741eb570ca9c4c946bb28a3ca79ca4b9efcc0cb7715af7a","MEMENTO_KEY_FOR_STORING_USED_JUPYTER_PROVIDERS_a4bea0b9ba4213e24741eb570ca9c4c946bb28a3ca79ca4b9efcc0cb7715af7a":[]}'
ms-vscode.cmake-tools: '{"f:\\UnityProjects\\Reference\\SoftRender\\SRenderactiveVariantSettings":[["buildType","debug"]],"VSCode.ABExp.FeatureData":{"features":["account-aacf","cmake.useProjectViewcf","livesharecontinuousaacf","mindaroBinariesVersion","mindaroBinariesVersion-1.0.20210702","mindaroBinariesVersion-1.0.20210723","portForwardingServiceEnabled-development","portForwardingServiceEnabled-production","portForwardingServiceEnabled-staging","RemoveKernelToolbarInInteractiveWindowcf","reusableLinks","shouldUseGrpcService"],"assignmentContext":"vsliv368cf:30146710;vsreu685:30147344;python383cf:30185419;vspor879:30202332;vspor708:30202333;vspor363:30204092;binariesv615:30325510;bridge0708:30335490;bridge0723:30353136;vsaa593cf:30376535;c4g48928:30535728;dh2dc718:30770000;","configs":[{"Id":"vscode","Parameters":{"account-aa":false,"cmake.useProjectView":false,"livesharecontinuousaa":false,"mindaroBinariesVersion":"1.0.20210615.1","mindaroBinariesVersion-1.0.20210702":"1.0.20210708.15","mindaroBinariesVersion-1.0.20210723":"1.0.20210723.6","portForwardingServiceEnabled-development":true,"portForwardingServiceEnabled-production":true,"portForwardingServiceEnabled-staging":true,"RemoveKernelToolbarInInteractiveWindow":false,"reusableLinks":true,"shouldUseGrpcService":true}}]},"kitsVersionSaved":2,"f:\\UnityProjects\\Reference\\SoftRender\\tinyrendereractiveVariantSettings":[["buildType","debug"]],"f:\\UnityProjects\\Reference\\SoftRender\\rendereractiveVariantSettings":[["buildType","debug"]]}'
ms-vscode.cpptools: '{"CPP.1.10.5.Progress":300,"CPP.1.10.5.ignoreMismatchedCompatibleVsix":false,"VSCode.ABExp.FeatureData":{"features":["aa_t_chat","account-aacf","config.editor.experimental.asyncTokenization","gettingStarted.overrideCategory.ms-vscode.cpptools.cppWelcome.when","installRecovery","invitationLink","livesharecontinuousaacf","mindaroBinariesVersion-1.0.20210702","mindaroBinariesVersion-1.0.20210723","portForwardingServiceEnabled-development","portForwardingServiceEnabled-production","portForwardingServiceEnabled-staging","RemoveKernelToolbarInInteractiveWindowcf","reusableLinks","shouldUseGrpcService","ShowLangStatBar","showStatusBarIntelliSenseIndicator"],"assignmentContext":"vsliv695:30137379;vsins829:30139715;vsliv368cf:30146710;vsreu685:30147344;python383cf:30185419;vspor879:30202332;vspor708:30202333;vspor363:30204092;bridge0708:30335490;bridge0723:30353136;vsaa593cf:30376535;c4g48928:30535728;showlangstatbar:30737417;fixshowwlkth:30771523;showindicator:30805243;asynctok:30898717;aa_t_chat:30882232;","configs":[{"Id":"vscode","Parameters":{"aa_t_chat":true,"account-aa":false,"config.editor.experimental.asyncTokenization":true,"gettingStarted.overrideCategory.ms-vscode.cpptools.cppWelcome.when":"true","installRecovery":true,"invitationLink":true,"livesharecontinuousaa":false,"mindaroBinariesVersion-1.0.20210702":"1.0.20210708.15","mindaroBinariesVersion-1.0.20210723":"1.0.20210723.6","portForwardingServiceEnabled-development":true,"portForwardingServiceEnabled-production":true,"portForwardingServiceEnabled-staging":true,"RemoveKernelToolbarInInteractiveWindow":false,"reusableLinks":true,"shouldUseGrpcService":true,"ShowLangStatBar":true,"showStatusBarIntelliSenseIndicator":true}}]},"CPP.1.10.7.Progress":300,"CPP.machineId":"a4bea0b9ba4213e24741eb570ca9c4c946bb28a3ca79ca4b9efcc0cb7715af7a","CPP.1.10.7.checkForConflictingExtensions":false,"CPP.1.10.8.Progress":300,"CPP.1.10.8.ignoreMismatchedCompatibleVsix":false,"CPP.1.10.8.checkForConflictingExtensions":false,"CPP.1.11.4.Progress":300,"CPP.1.11.4.ignoreMismatchedCompatibleVsix":false,"CPP.1.11.4.checkForConflictingExtensions":false,"CPP.1.11.5.Progress":300,"CPP.1.11.5.ignoreMismatchedCompatibleVsix":false,"CPP.1.11.5.checkForConflictingExtensions":false,"CPP.1.12.4.Progress":300,"CPP.1.12.4.ignoreMismatchedCompatibleVsix":false,"CPP.1.12.4.checkForConflictingExtensions":false,"CPP.1.13.7.Progress":300,"CPP.1.13.7.ignoreMismatchedCompatibleVsix":false,"CPP.1.13.7.checkForConflictingExtensions":false,"CPP.1.13.8.Progress":300,"CPP.1.13.8.ignoreMismatchedCompatibleVsix":false,"CPP.1.13.8.checkForConflictingExtensions":false,"CPP.1.13.8.IntelliSenseProgress":1000,"CPP.1.13.9.Progress":300,"CPP.1.13.9.ignoreMismatchedCompatibleVsix":false,"CPP.1.13.9.checkForConflictingExtensions":false,"CPP.1.14.3.Progress":300,"CPP.1.14.3.ignoreMismatchedCompatibleVsix":false,"CPP.1.14.3.checkForConflictingExtensions":false,"CPP.1.14.4.Progress":300,"CPP.1.14.4.ignoreMismatchedCompatibleVsix":false,"CPP.1.14.4.checkForConflictingExtensions":false,"CPP.1.15.4.Progress":300,"CPP.1.15.4.ignoreMismatchedCompatibleVsix":false,"CPP.1.15.4.checkForConflictingExtensions":false,"CPP.showIntelliSenseFallbackMessage":true,"CPP.1.17.5.Progress":300,"CPP.1.17.5.ignoreMismatchedCompatibleVsix":false,"CPP.1.17.5.checkForConflictingExtensions":false,"CPP.1.18.4.Progress":300,"CPP.1.18.4.ignoreMismatchedCompatibleVsix":false,"CPP.1.18.4.checkForConflictingExtensions":false,"CPP.1.18.5.Progress":300,"CPP.1.18.5.ignoreMismatchedCompatibleVsix":false,"CPP.displayedPreReleasePrompt":true,"CPP.1.18.5.checkForConflictingExtensions":false,"CPP.1.19.1.Progress":300,"CPP.1.19.1.ignoreMismatchedCompatibleVsix":false,"CPP.isOnPreRelease":true,"CPP.1.19.1.checkForConflictingExtensions":false}'
ms-vscode.remote-repositories: '{"version":"0.40.0"}'
PKief.material-icon-theme: '{"material-icon-theme.version":"4.21.0"}'
ritwickdey.LiveServer: '{"liveServer.setup.version":"5.7.9"}'
TabNine.tabnine-vscode: '{"already-opened-welcome":true,"\"preview-notification-1\"_1666665678188":true,"status-bar-first-time-clicked":true,"A-Pro-trial-announcement-46_1666922463331":true,"\"preview-notification-1\"_1666922571349":true,"B-Pro-trial-announcement-46_1669261132998":true,"\"preview-notification-1\"_1672748825064":true,"\"preview-notification-1\"_1672819558183":true,"\"preview-notification-1\"_1673317605075":true,"\"preview-notification-1\"_1673321665071":true}'
VisualStudioExptTeam.intellicode-api-usage-examples: '{"VSCode.ABExp.FeatureData":{"features":["aa_t_chat","account-aacf","config.editor.experimental.asyncTokenization","intellicodeapiexamplesaacf","livesharecontinuousaacf","mindaroBinariesVersion","mindaroBinariesVersion-1.0.20210702","mindaroBinariesVersion-1.0.20210723","portForwardingServiceEnabled-development","portForwardingServiceEnabled-production","portForwardingServiceEnabled-staging","RemoveKernelToolbarInInteractiveWindowcf","reusableLinks","shouldUseGrpcService"],"assignmentContext":"vsliv368cf:30146710;vsreu685:30147344;python383cf:30185419;vspor879:30202332;vspor708:30202333;vspor363:30204092;binariesv615:30325510;bridge0708:30335490;bridge0723:30353136;vsaa593cf:30376535;vsint571cf:30416761;c4g48928:30535728;asynctok:30898717;aa_t_chat:30882232;","configs":[{"Id":"vscode","Parameters":{"aa_t_chat":true,"account-aa":false,"config.editor.experimental.asyncTokenization":true,"intellicodeapiexamplesaa":false,"livesharecontinuousaa":false,"mindaroBinariesVersion":"1.0.20210615.1","mindaroBinariesVersion-1.0.20210702":"1.0.20210708.15","mindaroBinariesVersion-1.0.20210723":"1.0.20210723.6","portForwardingServiceEnabled-development":true,"portForwardingServiceEnabled-production":true,"portForwardingServiceEnabled-staging":true,"RemoveKernelToolbarInInteractiveWindow":false,"reusableLinks":true,"shouldUseGrpcService":true}}]}}'
VisualStudioExptTeam.vscodeintellicode: '{"VSCode.ABExp.FeatureData":{"features":["aa_t_chat","account-aacf","config.editor.experimental.asyncTokenization","intellicodeaacf","livesharecontinuousaacf","mindaroBinariesVersion","mindaroBinariesVersion-1.0.20210702","mindaroBinariesVersion-1.0.20210723","portForwardingServiceEnabled-development","portForwardingServiceEnabled-production","portForwardingServiceEnabled-staging","RemoveKernelToolbarInInteractiveWindowcf","reusableLinks","shouldUseGrpcService"],"assignmentContext":"vsliv368cf:30146710;vsreu685:30147344;python383cf:30185419;vspor879:30202332;vspor708:30202333;vspor363:30204092;binariesv615:30325510;bridge0708:30335490;bridge0723:30353136;vsaa593cf:30376535;vsint734cf:30416763;c4g48928:30535728;asynctok:30898717;aa_t_chat:30882232;","configs":[{"Id":"vscode","Parameters":{"aa_t_chat":true,"account-aa":false,"config.editor.experimental.asyncTokenization":true,"intellicodeaa":false,"livesharecontinuousaa":false,"mindaroBinariesVersion":"1.0.20210615.1","mindaroBinariesVersion-1.0.20210702":"1.0.20210708.15","mindaroBinariesVersion-1.0.20210723":"1.0.20210723.6","portForwardingServiceEnabled-development":true,"portForwardingServiceEnabled-production":true,"portForwardingServiceEnabled-staging":true,"RemoveKernelToolbarInInteractiveWindow":false,"reusableLinks":true,"shouldUseGrpcService":true}}]}}'
vscode-icons-team.vscode-icons: '{"vsicons":{"version":"12.6.0","status":0,"welcomeShown":true}}'
workbench.activity.pinnedViewlets2: '[{"id":"workbench.view.explorer","pinned":true,"visible":true,"order":0},{"id":"workbench.view.search","pinned":true,"visible":true,"order":1},{"id":"workbench.view.scm","pinned":true,"visible":true,"order":2},{"id":"workbench.view.debug","pinned":true,"visible":true,"order":3},{"id":"workbench.view.extensions","pinned":true,"visible":true,"order":4},{"id":"workbench.view.remote","pinned":true,"visible":true,"order":4},{"id":"workbench.view.extension.test","pinned":true,"visible":false,"order":6},{"id":"workbench.view.extension.references-view","pinned":true,"visible":false,"order":7},{"id":"workbench.view.extension.github-pull-requests","pinned":true,"visible":false,"order":8},{"id":"workbench.view.extension.github-pull-request","pinned":true,"visible":false,"order":9},{"id":"workbench.view.extension.gitlensPatch","pinned":true,"visible":false,"order":14},{"id":"workbench.view.extension.cmake-view","pinned":true,"visible":false,"order":18},{"id":"workbench.view.extension.bookmarks","pinned":true,"visible":true,"order":8},{"id":"workbench.view.extension.vscode-notes","pinned":true,"visible":true,"order":10},{"id":"workbench.view.extension.gitlensInspect","pinned":true,"visible":true,"order":13},{"id":"workbench.view.extension.huile8-explorer","pinned":true,"visible":true,"order":16},{"id":"workbench.panel.chatSidebar","pinned":true,"visible":false,"order":100},{"id":"workbench.panel.chatSidebar.copilot","pinned":true,"visible":true,"order":100},{"id":"workbench.view.extension.bluaide-todo","pinned":true,"visible":false,"order":10},{"id":"workbench.view.extension.package-explorer","pinned":true,"visible":true,"order":11},{"id":"workbench.view.extension.jupyter","pinned":true,"visible":false,"order":17},{"id":"workbench.view.extension.cluaide-explorer","pinned":true,"visible":false,"order":11},{"id":"workbench.view.extension.codegeex-sidebar","pinned":true,"visible":false,"order":8},{"id":"workbench.view.extension.gitlens","pinned":true,"visible":true,"order":12},{"id":"workbench.view.extension.CppRenameActivityBar","pinned":true,"visible":false,"order":8},{"id":"workbench.view.extension.svnActivity","pinned":true,"visible":false,"order":10},{"id":"workbench.view.extension.project-manager","pinned":true,"visible":false,"order":8},{"id":"workbench.view.extension.cspell-explorer","pinned":true,"visible":false,"order":19},{"id":"workbench.view.extension.flutter","pinned":true,"visible":false,"order":9},{"id":"workbench.view.extension.zhihu-explorer","pinned":true,"visible":false,"order":12},{"id":"workbench.view.extension.todo-tree-container","pinned":true,"visible":false,"order":12},{"id":"workbench.view.extension.tabnine-access","pinned":true,"visible":false,"order":12},{"id":"workbench.view.extension.anes","pinned":true,"visible":false,"order":11},{"id":"workbench.view.extension.chatgpt-vscode-plugin","pinned":true,"visible":false,"order":15},{"id":"workbench.view.extension.localHistory","pinned":true,"order":20},{"id":"workbench.view.extension.treeView","pinned":true,"visible":true,"order":9},{"id":"workbench.view.extension.chatgpt-china-view-container","pinned":true,"visible":false,"order":14},{"id":"workbench.view.extension.docify","pinned":true,"visible":false,"order":14},{"id":"workbench.view.extension.commands","pinned":true,"visible":false,"order":15},{"id":"workbench.view.extension.cmake__viewContainer","pinned":true,"visible":false,"order":13},{"id":"workbench.view.extension.copilot-labs","pinned":true,"visible":true,"order":15},{"id":"workbench.view.sync","pinned":true,"visible":false},{"id":"workbench.view.editSessions","pinned":true,"visible":false},{"id":"userDataProfiles","pinned":true,"visible":false}]'
workbench.activity.placeholderViewlets: "[{\"id\":\"workbench.view.explorer\",\
  \"themeIcon\":{\"id\":\"explorer-view-icon\"},\"name\":\"资源管理器\",\"isBuiltin\
  \":true,\"views\":[{},{},{},{\"when\":\"timelineHasProvider\"},{\"when\":\"np\
  m:showScriptExplorer\"},{\"when\":\"dart-code:anyProjectLoaded\"},{\"when\":\
  \"git.commit.selected && git.commit.view.show &&
  !config.gitHistory.hideCommitViewExplorer\"},{\"when\":\"git.commit.compare.c\
  ompared && git.commit.compare.view.show &&
  !config.gitHistory.hideCompareCommitViewExplorer\"},{},{},{\"when\":\"solutio\
  nExplorerVisible\"},{\"when\":\"local-history:treeLocation ==
  'explorer'\"}]},{\"id\":\"workbench.view.search\",\"themeIcon\":{\"id\":\"sea\
  rch-view-icon\"},\"name\":\"搜索\",\"isBuiltin\":true,\"views\":[{}]},{\"id\":\
  \"workbench.view.scm\",\"themeIcon\":{\"id\":\"source-control-view-icon\"},\"\
  name\":\"源代码管理\",\"isBuiltin\":true,\"views\":[{\"when\":\"scm.providerCount
  && scm.providerCount !=
  '0'\"},{},{\"when\":\"!gitlens:disabled\"},{\"when\":\"!gitlens:disabled\"},{\
  \"when\":\"!gitlens:disabled\"},{\"when\":\"!gitlens:disabled\"},{\"when\":\"\
  !gitlens:disabled &&
  !gitlens:hasVirtualFolders\"},{\"when\":\"!gitlens:disabled\"},{\"when\":\"gi\
  tlens:plus:enabled && !gitlens:disabled &&
  !gitlens:hasVirtualFolders\"},{\"when\":\"!gitlens:disabled\"}]},{\"id\":\"wo\
  rkbench.view.debug\",\"themeIcon\":{\"id\":\"run-view-icon\"},\"name\":\"运行和调试\
  \",\"isBuiltin\":true,\"views\":[{\"when\":\"debugUx ==
  'simple'\"},{\"when\":\"debugUx == 'default'\"},{\"when\":\"debugUx ==
  'default'\"},{\"when\":\"debugUx ==
  'default'\"},{\"when\":\"loadedScriptsSupported && debugUx ==
  'default'\"},{\"when\":\"breakpointsExist || hasDebugged || debugUx ==
  'default'\"},{\"when\":\"debugType == 'pwa-chrome' || debugType ==
  'pwa-msedge'\"},{\"when\":\"jsDebugHasExcludedCallers && debugType ==
  'node-terminal' || jsDebugHasExcludedCallers && debugType == 'pwa-chrome' ||
  jsDebugHasExcludedCallers && debugType == 'pwa-extensionHost' ||
  jsDebugHasExcludedCallers && debugType == 'pwa-msedge' ||
  jsDebugHasExcludedCallers && debugType ==
  'pwa-node'\"},{\"when\":\"cpptools.enableSshTargetsView\"},{}]},{\"id\":\"wor\
  kbench.view.extensions\",\"themeIcon\":{\"id\":\"extensions-view-icon\"},\"na\
  me\":\"扩展\",\"isBuiltin\":true,\"views\":[{\"when\":\"defaultExtensionViews\"\
  },{\"when\":\"searchExtensionUpdates ||
  searchOutdatedExtensions\"},{\"when\":\"recommendedExtensions &&
  workbenchState != 'empty'\"},{\"when\":\"defaultExtensionViews && hasGallery
  && !hasInstalledExtensions\"},{\"when\":\"searchExtensionUpdates ||
  searchRecentlyUpdatedExtensions\"},{\"when\":\"recommendedExtensions\"},{\"wh\
  en\":\"defaultExtensionViews && hasGallery &&
  !config.extensions.showRecommendationsOnlyOnDemand &&
  !sortByUpdateDate\"},{\"when\":\"defaultExtensionViews &&
  hasInstalledExtensions\"},{\"when\":\"defaultExtensionViews &&
  hasInstalledExtensions\"},{\"when\":\"searchMarketplaceExtensions\"},{\"when\
  \":\"searchInstalledExtensions\"},{\"when\":\"searchEnabledExtensions\"},{\"w\
  hen\":\"searchDisabledExtensions\"},{\"when\":\"searchBuiltInExtensions\"},{\
  \"when\":\"searchWorkspaceUnsupportedExtensions\"},{\"when\":\"builtInExtensi\
  ons\"},{\"when\":\"builtInExtensions\"},{\"when\":\"builtInExtensions\"},{\"w\
  hen\":\"searchUnsupportedWorkspaceExtensions\"},{\"when\":\"searchUnsupported\
  WorkspaceExtensions\"},{\"when\":\"searchUnsupportedWorkspaceExtensions &&
  virtualWorkspace\"},{\"when\":\"searchUnsupportedWorkspaceExtensions &&
  virtualWorkspace\"},{\"when\":\"searchDeprecatedExtensions\"}]},{\"id\":\"wor\
  kbench.view.remote\",\"themeIcon\":{\"id\":\"remote-explorer-view-icon\"},\"n\
  ame\":\"远程资源管理器\",\"isBuiltin\":true,\"views\":[{}]},{\"id\":\"workbench.view\
  .extension.test\",\"themeIcon\":{\"id\":\"test-view-icon\"},\"name\":\"测试\",\
  \"isBuiltin\":true,\"views\":[{\"when\":\"testing.providerCount >
  0\"},{\"when\":\"testing.isTestCoverageOpen\"}]},{\"id\":\"workbench.view.ext\
  ension.references-view\",\"themeIcon\":{\"id\":\"references\"},\"name\":\"引用\
  \",\"isBuiltin\":false,\"views\":[{\"when\":\"reference-list.isActive\"},{\"w\
  hen\":\"cpptools.hasReferencesResults\"}]},{\"id\":\"workbench.view.extension\
  .github-pull-requests\",\"isBuiltin\":false},{\"id\":\"workbench.view.extensi\
  on.github-pull-request\",\"isBuiltin\":false},{\"id\":\"workbench.view.extens\
  ion.gitlensPatch\",\"themeIcon\":{\"id\":\"gitlens-cloud-patch\"},\"name\":\"\
  GitLens
  Patch\",\"isBuiltin\":false,\"views\":[{\"when\":\"config.gitlens.cloudPatche\
  s.enabled && gitlens:views:patchDetails:mode &&
  !gitlens:untrusted\"}]},{\"id\":\"workbench.view.extension.cmake-view\",\"ico\
  nUrl\":{\"$mid\":1,\"path\":\"%%EXTENSION_DATA_PATH%%/ms-vscode.cmake-tools-1\
  .16.32/res/cmake-view-icon2.svg\",\"scheme\":\"file\"},\"name\":\"CMake\",\"i\
  sBuiltin\":false,\"views\":[{\"when\":\"cmake:enableFullFeatureSet\"},{\"when\
  \":\"cmake:enableFullFeatureSet\"}]},{\"id\":\"workbench.view.extension.bookm\
  arks\",\"iconUrl\":{\"$mid\":1,\"path\":\"%%EXTENSION_DATA_PATH%%/alefragnani\
  .bookmarks-13.4.2/images/bookmark-activity-bar.svg\",\"scheme\":\"file\"},\"n\
  ame\":\"书签\",\"isBuiltin\":false,\"views\":[{},{}]},{\"id\":\"workbench.view.\
  extension.vscode-notes\",\"iconUrl\":{\"$mid\":1,\"path\":\"%%EXTENSION_DATA_\
  PATH%%/dionmunk.vscode-notes-1.1.0/resources/notes-light.svg\",\"scheme\":\"f\
  ile\"},\"name\":\"Notes\",\"isBuiltin\":false,\"views\":[{}]},{\"id\":\"workb\
  ench.view.extension.gitlensInspect\",\"themeIcon\":{\"id\":\"gitlens-gitlens-\
  inspect\"},\"name\":\"GitLens
  Inspect\",\"isBuiltin\":false,\"views\":[{\"when\":\"!gitlens:disabled\"},{\"\
  when\":\"!gitlens:disabled &&
  !gitlens:hasVirtualFolders\"},{\"when\":\"!gitlens:disabled\"},{\"when\":\"gi\
  tlens:plus:enabled &&
  !gitlens:disabled\"},{\"when\":\"!gitlens:disabled\"}]},{\"id\":\"workbench.v\
  iew.extension.huile8-explorer\",\"iconUrl\":{\"$mid\":1,\"path\":\"%%EXTENSIO\
  N_DATA_PATH%%/mqycn.huile8-1.0.0/resources/icon.png\",\"scheme\":\"file\"},\"\
  name\":\"会了吧\",\"isBuiltin\":false,\"views\":[{},{}]},{\"id\":\"workbench.pan\
  el.chatSidebar\",\"themeIcon\":{\"id\":\"comment-discussion\"},\"name\":\"聊天\
  \",\"isBuiltin\":true,\"views\":[{\"when\":\"!github.copilot.interactiveSessi\
  on.disabled\"}]},{\"id\":\"workbench.panel.chatSidebar.copilot\",\"isBuiltin\
  \":false},{\"id\":\"workbench.view.extension.bluaide-todo\",\"isBuiltin\":fal\
  se},{\"id\":\"workbench.view.extension.package-explorer\",\"iconUrl\":{\"$mid\
  \":1,\"path\":\"%%EXTENSION_DATA_PATH%%/donjayamanne.python-environment-manag\
  er-1.2.4/resources/logo.svg\",\"scheme\":\"file\"},\"name\":\"Python\",\"isBu\
  iltin\":false,\"views\":[{\"when\":\"workspaceFolderCount >=
  1\"},{}]},{\"id\":\"workbench.view.extension.jupyter\",\"themeIcon\":{\"id\":\
  \"notebook\"},\"name\":\"Jupyter\",\"isBuiltin\":false,\"views\":[]},{\"id\":\
  \"workbench.view.extension.cluaide-explorer\",\"isBuiltin\":false},{\"id\":\"\
  workbench.view.extension.codegeex-sidebar\",\"isBuiltin\":false},{\"id\":\"wo\
  rkbench.view.extension.gitlens\",\"themeIcon\":{\"id\":\"gitlens-gitlens\"},\
  \"name\":\"GitLens\",\"isBuiltin\":false,\"views\":[{},{\"when\":\"config.git\
  lens.cloudPatches.enabled && !gitlens:hasVirtualFolders &&
  !gitlens:untrusted\"},{\"when\":\"!gitlens:hasVirtualFolders &&
  !gitlens:untrusted\"},{}]},{\"id\":\"workbench.view.extension.CppRenameActivi\
  tyBar\",\"isBuiltin\":false},{\"id\":\"workbench.view.extension.svnActivity\",\
  \"isBuiltin\":false},{\"id\":\"workbench.view.extension.project-manager\",\"i\
  sBuiltin\":false},{\"id\":\"workbench.view.extension.cspell-explorer\",\"icon\
  Url\":{\"$mid\":1,\"path\":\"%%EXTENSION_DATA_PATH%%/streetsidesoftware.code-\
  spell-checker-3.0.1/resources/dark/check_circle.svg\",\"scheme\":\"file\"},\"\
  name\":\"Spell Checker
  Info\",\"isBuiltin\":false,\"views\":[{\"when\":\"config.cSpell.experimental.\
  enableRegexpView\"}]},{\"id\":\"workbench.view.extension.flutter\",\"iconUrl\
  \":{\"$mid\":1,\"path\":\"%%EXTENSION_DATA_PATH%%/dart-code.dart-code-3.78.2/\
  media/icons/flutter_activity_bar.svg\",\"scheme\":\"file\"},\"name\":\"Flutter\
  \",\"isBuiltin\":false,\"views\":[{\"when\":\"dart-code:anyFlutterProjectLoad\
  ed &&
  dart-code:flutterSidebarSupported\"},{\"when\":\"dart-code:anyFlutterProjectL\
  oaded\"}]},{\"id\":\"workbench.view.extension.zhihu-explorer\",\"isBuiltin\":\
  false},{\"id\":\"workbench.view.extension.todo-tree-container\",\"isBuiltin\"\
  :false},{\"id\":\"workbench.view.extension.tabnine-access\",\"isBuiltin\":fal\
  se},{\"id\":\"workbench.view.extension.anes\",\"isBuiltin\":false},{\"id\":\"\
  workbench.view.extension.chatgpt-vscode-plugin\",\"isBuiltin\":false},{\"id\":\
  \"workbench.view.extension.localHistory\",\"iconUrl\":{\"$mid\":1,\"path\":\"\
  %%EXTENSION_DATA_PATH%%/xyz.local-history-1.8.1/resources/images/history.svg\
  \",\"scheme\":\"file\"},\"name\":\"Local
  history\",\"isBuiltin\":false,\"views\":[{\"when\":\"local-history:treeLocati\
  on ==
  'localHistory'\"}]},{\"id\":\"workbench.view.extension.treeView\",\"name\":\"\
  小说\",\"isBuiltin\":false},{\"id\":\"workbench.view.extension.chatgpt-china-vi\
  ew-container\",\"isBuiltin\":false},{\"id\":\"workbench.view.extension.docify\
  \",\"isBuiltin\":false},{\"id\":\"workbench.view.extension.commands\",\"isBui\
  ltin\":false},{\"id\":\"workbench.view.extension.cmake__viewContainer\",\"isB\
  uiltin\":false},{\"id\":\"workbench.view.extension.copilot-labs\",\"iconUrl\"\
  :{\"$mid\":1,\"path\":\"%%EXTENSION_DATA_PATH%%/github.copilot-labs-0.17.1121\
  /assets/head.svg\",\"scheme\":\"file\"},\"name\":\"GitHub Copilot
  Labs\",\"isBuiltin\":false,\"views\":[{},{},{},{}]},{\"id\":\"workbench.view.\
  sync\",\"themeIcon\":{\"id\":\"settings-sync-view-icon\"},\"name\":\"设置同步\",\
  \"isBuiltin\":true,\"views\":[{\"when\":\"enableSyncConflictsView &&
  hasConflicts\"},{\"when\":\"enableSyncActivityViews &&
  userDataSyncAccountStatus == 'available' && syncStatus !=
  'uninitialized'\"},{\"when\":\"enableSyncActivityViews &&
  userDataSyncAccountStatus == 'available' && syncStatus !=
  'uninitialized'\"},{\"when\":\"enableSyncActivityViews &&
  userDataSyncAccountStatus == 'available' && syncStatus !=
  'uninitialized'\"},{\"when\":\"enableSyncActivityViews\"},{\"when\":\"enableS\
  yncActivityViews\"}]},{\"id\":\"workbench.view.editSessions\",\"themeIcon\":{\
  \"id\":\"edit-sessions-view-icon\"},\"name\":\"云更改\",\"isBuiltin\":true,\"vie\
  ws\":[{\"when\":\"editSessionsShowView\"}]},{\"id\":\"userDataProfiles\",\"th\
  emeIcon\":{\"id\":\"defaultProfile-icon\"},\"name\":\"个人资料\",\"isBuiltin\":tr\
  ue,\"views\":[]}]"
workbench.activityBar.location: side
workbench.auxiliarybar.pinnedPanels: "[]"
workbench.auxiliaryBar.size: "256"
workbench.editor.languageDetectionOpenedLanguages.global: '[["shellscript",true],["css",true],["javascript",true],["markdown",true],["yaml",true],["typescript",true],["json",true],["plaintext",true],["ignore",true],["jsonc",true],["snippets",true],["shaderlab",true]]'
workbench.explorer.views.state.hidden: '[{"id":"workbench.explorer.fileView","isHidden":false},{"id":"outline","isHidden":false},{"id":"workbench.explorer.openEditorsView","isHidden":false},{"id":"workbench.explorer.emptyView","isHidden":false},{"id":"npm","isHidden":false},{"id":"timeline","isHidden":false},{"id":"gitlens.views.repositories:explorer","isHidden":false},{"id":"gitlens.views.fileHistory:explorer","isHidden":false},{"id":"gitlens.views.lineHistory:explorer","isHidden":false},{"id":"gitlens.views.compare:explorer","isHidden":false},{"id":"gitlens.views.search:explorer","isHidden":false},{"id":"svn","isHidden":false},{"id":"todo-tree-view-explorer","isHidden":false},{"id":"todo-tree-view","isHidden":false},{"id":"zhihu-feed","isHidden":false},{"id":"zhihu-hotStories","isHidden":false},{"id":"zhihu-collection","isHidden":false},{"id":"luaide_todo","isHidden":false},{"id":"luaide_setting","isHidden":false},{"id":"luaide_user","isHidden":false},{"id":"luaide_faq","isHidden":false},{"id":"dartDependencyTree","isHidden":false},{"id":"commitViewProvider","isHidden":false},{"id":"compareCommitViewProvider","isHidden":false},{"id":"chatgpt-china.view","isHidden":false},{"id":"cell-tag","isHidden":false},{"id":"chatgpt-vscode-plugin.view","isHidden":false},{"id":"jupyterViewVariables","isHidden":false},{"id":"romLocal","isHidden":false},{"id":"romRemote","isHidden":false},{"id":"opencl-devices-explorer","isHidden":false},{"id":"solutionExplorer","isHidden":false},{"id":"huile8-will-mastering-main","isHidden":false},{"id":"treeLocalHistoryExplorer","isHidden":false}]'
workbench.grid.size: '{"height":768,"width":1024}'
workbench.panel.alignment: center
workbench.panel.chatSidebar.copilot.hidden: '[{"id":"workbench.panel.chat.view.copilot","isHidden":false}]'
workbench.panel.chatSidebar.hidden: '[{"id":"workbench.panel.chat.view.copilot","isHidden":false}]'
workbench.panel.lastNonMaximizedHeight: "300"
workbench.panel.lastNonMaximizedWidth: "300"
workbench.panel.markers.hidden: '[{"id":"workbench.panel.markers.view","isHidden":false}]'
workbench.panel.output.hidden: '[{"id":"workbench.panel.output","isHidden":false}]'
workbench.panel.pinnedPanels: '[{"id":"workbench.panel.testResults","pinned":true,"visible":false,"order":3},{"id":"terminal","pinned":true,"visible":true,"order":3},{"id":"workbench.panel.markers","pinned":true,"visible":true,"order":0},{"id":"workbench.panel.output","pinned":true,"visible":true,"order":1},{"id":"workbench.panel.repl","pinned":true,"visible":true,"order":2},{"id":"~remote.forwardedPortsContainer","pinned":true,"visible":true,"order":5},{"id":"workbench.view.extension.gitlensPanel","pinned":true,"visible":false,"order":6},{"id":"workbench.view.extension.copilot-message-panel","pinned":true,"visible":false,"order":7},{"id":"workbench.view.extension.jupyter-variables","pinned":true,"visible":false,"order":7},{"id":"workbench.panel.comments","pinned":true,"visible":false,"order":10},{"id":"refactorPreview","pinned":true,"visible":false}]'
workbench.panel.placeholderPanels: '[{"id":"workbench.panel.testResults","themeIcon":{"id":"test-results-icon"},"name":"测试结果","isBuiltin":true,"views":[{"when":"testing.hasAnyResults"}]},{"id":"terminal","themeIcon":{"id":"terminal-view-icon"},"name":"终端","isBuiltin":true,"views":[{}]},{"id":"workbench.panel.markers","themeIcon":{"id":"markers-view-icon"},"name":"问题","isBuiltin":true,"views":[{}]},{"id":"workbench.panel.output","themeIcon":{"id":"output-view-icon"},"name":"输出","isBuiltin":true,"views":[{}]},{"id":"workbench.panel.repl","themeIcon":{"id":"debug-console-view-icon"},"name":"调试控制台","isBuiltin":true,"views":[{"when":"debuggersAvailable"}]},{"id":"~remote.forwardedPortsContainer","themeIcon":{"id":"ports-view-icon"},"name":"端口","isBuiltin":true,"views":[]},{"id":"workbench.view.extension.gitlensPanel","themeIcon":{"id":"gitlens-graph"},"name":"GitLens","isBuiltin":false,"views":[{"when":"gitlens:plus:enabled
  && !gitlens:disabled"},{"when":"gitlens:plus:enabled &&
  !gitlens:disabled"}]},{"id":"workbench.view.extension.copilot-message-panel","name":"Copilot","isBuiltin":false},{"id":"workbench.view.extension.jupyter-variables","themeIcon":{"id":"notebook"},"name":"Jupyter","isBuiltin":false,"views":[{"when":"jupyter.hasNativeNotebookOrInteractiveWindowOpen"},{"when":"jupyter.hasNativeNotebookOrInteractiveWindowOpen
  &&
  jupyter:showTagsExplorer"}]},{"id":"workbench.panel.comments","name":"注释","isBuiltin":false},{"id":"refactorPreview","themeIcon":{"id":"refactor-preview-view-icon"},"name":"重构预览","isBuiltin":true,"views":[{"when":"refactorPreview.enabled"}]}]'
workbench.panel.repl.hidden: '[{"id":"workbench.panel.repl.view","isHidden":false}]'
workbench.panel.size: "213"
workbench.scm.views.state.hidden: '[{"id":"scm.mainPanel","isHidden":false},{"id":"scm:repository:Git:file:///e%3A/UnityProject/UnityShader","isHidden":false},{"id":"scm:repository:Git:file:///e%3A/UnityProject/Temp/Lockstep-Tutorial","isHidden":false},{"id":"scm.mainPane","isHidden":false},{"id":"scm:repository:1726188227","isHidden":false},{"id":"scm:repository:1037538449","isHidden":false},{"id":"scm:repository:1253083532","isHidden":false},{"id":"workbench.scm","isHidden":false},{"id":"scm:repository:-1669896353","isHidden":false},{"id":"scm:repository:1578261071","isHidden":false},{"id":"scm:repository:-214709516","isHidden":false},{"id":"gitlens.views.repositories:scm","isHidden":false},{"id":"gitlens.views.fileHistory:scm","isHidden":false},{"id":"gitlens.views.lineHistory:scm","isHidden":false},{"id":"gitlens.views.compare:scm","isHidden":false},{"id":"gitlens.views.search:scm","isHidden":false},{"id":"workbench.scm.repositories","isHidden":false},{"id":"gitlens.views.repositories","isHidden":true},{"id":"gitlens.views.commits","isHidden":false},{"id":"gitlens.views.fileHistory","isHidden":false},{"id":"gitlens.views.lineHistory","isHidden":true},{"id":"gitlens.views.branches","isHidden":false},{"id":"gitlens.views.remotes","isHidden":false},{"id":"gitlens.views.stashes","isHidden":false},{"id":"gitlens.views.tags","isHidden":false},{"id":"gitlens.views.contributors","isHidden":true},{"id":"gitlens.views.searchAndCompare","isHidden":false},{"id":"gitlens.views.worktrees","isHidden":false},{"id":"gitlens.views.commitDetails","isHidden":false},{"id":"workbench.scm.sync","isHidden":false}]'
workbench.sideBar.size: "236"
workbench.statusbar.hidden: '["status.workspaceTrust.0d19d4cb35f5bfaa9d7a2cb0d25b7259","status.workspaceTrust.fa020f1c477511d99e99ce5dd38475ac","status.workspaceTrust.7391202f2f5e9cce0cff8ebedc7592f7","status.workspaceTrust.a69376e419004ed23d3b53ce278b9c10","status.workspaceTrust.b7cbac26cd72abee61e2425fd3ee826b","status.workspaceTrust.1627711252739","status.workspaceTrust.908a94c1532662c022b585c3d33f6382","status.workspaceTrust.1627721713733","status.workspaceTrust.1627792427441","status.workspaceTrust.a53b91f7b2927aef9bb043d4ff59ab75","status.workspaceTrust.1627792536569","status.workspaceTrust.91968a2f5abb1ecc028cbd4bf607c526","status.workspaceTrust.1627817908693","status.workspaceTrust.1628335132442","status.workspaceTrust.6ebdcf2f0f279f0069378476beaf994f","status.workspaceTrust.e32a973bd0aac017eef23dc75c27d3f9","status.workspaceTrust.1628606578252","status.workspaceTrust.1628686861196","status.workspaceTrust.1628777423531","status.workspaceTrust.1628779740941","status.workspaceTrust.44d2fc6fd9e8458c34448ce057f09f60","status.workspaceTrust.5d794c275ab43c0969004829fe6e8e9a","status.workspaceTrust.1628850532150","status.workspaceTrust.08b3fc4d9e60aa4a95f2cde0f3031077","status.workspaceTrust.1629206669831","status.workspaceTrust.1629292970973","status.workspaceTrust.1629515971649","status.workspaceTrust.2aebf95215a9e85c0e4c6694b7875a0f","status.workspaceTrust.1629540649811","status.workspaceTrust.2bc2989a358fb2fb387917d3545a759c","status.workspaceTrust.1629597978371","status.workspaceTrust.1629643453613","status.workspaceTrust.1629646787849","status.workspaceTrust.1629811921590","status.workspaceTrust.1630073239780","status.workspaceTrust.1630423172623","status.workspaceTrust.1630501582253","status.workspaceTrust.1630504100843","status.workspaceTrust.1630626798116","status.workspaceTrust.ffcb61b29c07a55333d7d097f24bb115","status.workspaceTrust.1630736107036","status.workspaceTrust.c06c8ec8f3737094f60c0dcd3c0ea775","status.workspaceTrust.1630815821096","status.workspaceTrust.1630818941365","status.workspaceTrust.1631106758387","status.workspaceTrust.3a7eba3cded951ee41badfd9b2e2557d","status.workspaceTrust.1631325356924","status.workspaceTrust.4b000de3f60ee71a61da193aededdb20","status.workspaceTrust.1631544647529","status.workspaceTrust.be831e0771a1d76e46d4dd6b1f6e168e","status.workspaceTrust.40bff648965c3e625265002fcda6a637","status.workspaceTrust.518b9ea532ec0681ddeb863c1426a713","status.workspaceTrust.4771e14fddbe17d550aadc980a05315d","status.workspaceTrust.1631703935005","status.workspaceTrust.1631704597361","status.workspaceTrust.1631717838668","status.workspaceTrust.1631786799615","status.workspaceTrust.1631797091153","status.workspaceTrust.b83378294fbf4fff47ddea97900af16a","status.workspaceTrust.1631887049991","status.workspaceTrust.680b3b701c208d7adda2b1e02db3f1df","status.workspaceTrust.1631887956190","status.workspaceTrust.1631890496952","status.workspaceTrust.1631938356074","status.workspaceTrust.1631947687252","status.workspaceTrust.7fcf1ec336c17d49b0deeca1d84d4eb1","status.workspaceTrust.1632275983732","status.workspaceTrust.1632278765499","status.workspaceTrust.1632291368184","status.workspaceTrust.1632299273470","status.workspaceTrust.6bff7ebc0c85a4c874f567964f2ab600","status.workspaceTrust.1632365031171","status.workspaceTrust.29d896d68da6c9561d4916b18b997249","status.workspaceTrust.1632386216547","status.workspaceTrust.d2de9e5b85f4d3d3369a08c1f2053c06","status.workspaceTrust.1632386282145","status.workspaceTrust.19787a80d8db4c71558010e022ed769d","status.workspaceTrust.e7f6a1c5ffdb747e4b4dbc3b467436ba","status.workspaceTrust.1632448398402","status.workspaceTrust.1632449138273","status.workspaceTrust.1632533269834","status.workspaceTrust.1632561491493","status.workspaceTrust.3ac7aba28e3f14a56ed1e484d5766031","status.workspaceTrust.1632621353822","status.workspaceTrust.1632646737051","status.workspaceTrust.a1023b2d4eba5554494e08a38e7f6e82","status.workspaceTrust.1633858374520","status.workspaceTrust.1634051066121","status.workspaceTrust.1634051297254","status.workspaceTrust.1634279348644","status.workspaceTrust.1634366779183","status.workspaceTrust.1634452617325","status.workspaceTrust.1634716469157","status.workspaceTrust.1635055945015","status.workspaceTrust.f0350786c0eb923ae6e0fc13dce83459","status.workspaceTrust.1635211765968","status.workspaceTrust.1635260522358","status.workspaceTrust.2cf5032fc72a8577b9c2ff86ebd282a6","status.workspaceTrust.1635317916456","status.workspaceTrust.a683e16fe16ab66b7307bb1658a9f538","status.workspaceTrust.6d3980ca39dc881ebe7e76326e542e10","status.workspaceTrust.1635323822379","status.workspaceTrust.1635391553543","status.workspaceTrust.1635426550274","status.workspaceTrust.1635478406721","status.workspaceTrust.60a79cb66659bc33bbe43a8339cffbbc","status.workspaceTrust.1635662405398","status.workspaceTrust.1635672717377","status.workspaceTrust.2be1e3468c6e73640e68246e6c8b0eb6","status.workspaceTrust.1635681999411","status.workspaceTrust.1635738523030","status.workspaceTrust.1635756883790","status.workspaceTrust.1635775613118","status.workspaceTrust.1635825961477","status.workspaceTrust.92b437d4000e1ce4fb1288ef798ce495","status.workspaceTrust.1635837837154","status.workspaceTrust.1635858207157","status.workspaceTrust.1635866496375","status.workspaceTrust.91939b7e9679a7cb0e4c639a60c741dc","status.workspaceTrust.1635918791701","status.workspaceTrust.1635927315862","status.workspaceTrust.11ca16337765b875692d7b93c60ea122","status.workspaceTrust.1636009656161","status.workspaceTrust.1636011480868","status.workspaceTrust.1636013256596","status.workspaceTrust.ace2420bb891b48f658f5cb51a652e3f","status.workspaceTrust.8a84389fbe9d0b1fb4f7857b60f83158","status.workspaceTrust.1636189912074","status.workspaceTrust.1636337474788","status.workspaceTrust.54fa647720f61c6b2eb586da8a134946","status.workspaceTrust.1636375588170","status.workspaceTrust.1636427992690","status.workspaceTrust.1636513723455","status.workspaceTrust.b793dc0bf1971a4d85500e5e113d2c07","status.workspaceTrust.de12b296c97b697aa400f850b4b3f8d3","status.workspaceTrust.1636533827008","status.workspaceTrust.46c34f8f83de20150b124e7f07884b5d","status.workspaceTrust.1636533856183","status.workspaceTrust.1636613695934","status.workspaceTrust.474c4ac5fa7f11deb04bba04e3bc57fe","status.workspaceTrust.e590eb3d26db2e875955b62fb944d92e","status.workspaceTrust.5a27e5782445f18be1c0e109b98ee378","status.workspaceTrust.be6a8b46b2cba8f9ef77a5e36aa6c5b1","status.workspaceTrust.1636703916872","status.workspaceTrust.d20ca7d01cfecc1b48719662180fb95e","status.workspaceTrust.1636706120262","status.workspaceTrust.1636707800373","status.workspaceTrust.1636946096404","status.workspaceTrust.1636946790423","status.workspaceTrust.44770237e8f05665f0b72532f3ef6021","status.workspaceTrust.0cbc217ef714a0923d0529f4de7d8b8d","status.workspaceTrust.89031e47710172a28599628519d81f9f","status.workspaceTrust.1637050413079","status.workspaceTrust.1637050605881","status.workspaceTrust.1637064747308","status.workspaceTrust.1637064771258","status.workspaceTrust.574f191a6227ea67ff887ca2c8588e17","status.workspaceTrust.1637116482684","status.workspaceTrust.1637131082943","status.workspaceTrust.1637131662200","status.workspaceTrust.bd842c684bd49a153945f051b02fb23e","status.workspaceTrust.b0abbd833b7483b1bc0a7117f88bff7b","status.workspaceTrust.1637135437689","status.workspaceTrust.454ce47d3be2c1cf892483f84e951994","status.workspaceTrust.1637548474890","status.workspaceTrust.1637549138894","status.workspaceTrust.a8babc459ff6d19459c38a02b002c9d3","status.workspaceTrust.b0348aa9275939c45f03799eb96037cc","status.workspaceTrust.1637990001917","status.workspaceTrust.77f0a259bbc4c353189f7b91210afd07","status.workspaceTrust.3db39419818feef596778aa3f267c58c","status.workspaceTrust.1638102584827","status.workspaceTrust.ecb89308bc7d8ce16df3c9635e21ea7e","status.workspaceTrust.f61aad6e5e740ea5d7cdb9f86b45a1ba","status.workspaceTrust.1638245008569","status.workspaceTrust.9e3aa58f47908b7469a2ff82bf7b4267","status.workspaceTrust.1638363756647","status.workspaceTrust.fe8ae1fac475ce434f9048ff7054c4a1","status.workspaceTrust.9004be0e8f83bd7fc0161107a5dce053","status.workspaceTrust.c712db116f8fc2c88e3a8a3c0b662477","status.workspaceTrust.1639102944682","status.workspaceTrust.1639104321596","status.workspaceTrust.dc5e17ff585e28ef3770543bc5239557","status.workspaceTrust.cb700b7b3047318ad50785c41b211f02","status.workspaceTrust.1639317607010","status.workspaceTrust.66194c0da6c457f72908251ac42497b5","status.workspaceTrust.f539c175b7b0415d492cfdddaa875a18","status.workspaceTrust.1639377381263","status.workspaceTrust.1639463174295","status.workspaceTrust.8b04487e666d6e296e97a30aa3bd36fd","status.workspaceTrust.1639466114944","status.workspaceTrust.1ca85c3f384e31c99cfb337c9a807bee","status.workspaceTrust.5f431b70669361b408ca09e82c0828ac","status.workspaceTrust.1639469161134","status.workspaceTrust.1639484602024","status.workspaceTrust.1639485092283","status.workspaceTrust.1639548780601","status.workspaceTrust.1639558076119","status.workspaceTrust.e14ac8fc2a1e8c98ac9bcbfcc2f68612","status.workspaceTrust.1fa96f807a44a63ac303be2bf0bf2e1c","status.workspaceTrust.1639639637799","status.workspaceTrust.195a6b13fdf2dc9d7436a47e27c0c9bd","status.workspaceTrust.1639645433235","status.workspaceTrust.1639728953021","status.workspaceTrust.1639820737014","status.workspaceTrust.1639821818006","status.workspaceTrust.1639822270783","status.workspaceTrust.b768eea2c745d4850790c84fb29170c4","status.workspaceTrust.1639835575919","status.workspaceTrust.1639967295791","status.workspaceTrust.1dda0559fc2037d1de922c6c4365e19c","status.workspaceTrust.1639983444359","status.workspaceTrust.1640091500093","status.workspaceTrust.0ef1802eea18ddd81b57efe633a63038","status.workspaceTrust.1640497914132","status.workspaceTrust.1640511049202","status.workspaceTrust.58eeb5eec3b891c68db26b63ece0ee0c","status.workspaceTrust.1640656589360","status.workspaceTrust.da5bdc9471f96f2ffa761d0d9df04468","status.workspaceTrust.4851e138a11070f0b989c1ef57b209fc","status.workspaceTrust.1640677022614","status.workspaceTrust.459b980dac0d8ae19ce5aa2144170576","status.workspaceTrust.9987f415423639d3785dd9fe02b561e5","status.workspaceTrust.0bb78ff1d0e5548cd2632bc11b97e089","status.workspaceTrust.1640681786204","status.workspaceTrust.6acee9efa307c4359fe2b1df22ac537c","status.workspaceTrust.1640684523537","status.workspaceTrust.1640693684340","status.workspaceTrust.1640760062207","status.workspaceTrust.1640828923223","status.workspaceTrust.1640832128131","status.workspaceTrust.1640917513776","status.workspaceTrust.1640919913967","status.workspaceTrust.1641259862279","status.workspaceTrust.0c85214c1840d4191976cf4c14df677a","status.workspaceTrust.1641371071886","status.workspaceTrust.6e086c94fac46acbdf50011cd3e6a518","status.workspaceTrust.1641468803627","status.workspaceTrust.50274ee6b732ab4123905420f0920cd0","status.workspaceTrust.1642044815556","status.workspaceTrust.461931e7697217b58b7f36eeca98cda9","status.workspaceTrust.1642995037358","status.workspaceTrust.d1e6406c5ceba8cee24de975f29a8a5a","status.workspaceTrust.8275315c5e0820e2bafc2c9b7688dfcf","status.workspaceTrust.1643075433023","status.workspaceTrust.1643179965980","status.workspaceTrust.1643180005048","status.workspaceTrust.4abafa400d97f69421d987b9027d93a6","status.workspaceTrust.1645248625779","status.workspaceTrust.1645252582319","status.workspaceTrust.1645412327744","status.workspaceTrust.1645425835237","status.workspaceTrust.1645513978848","status.workspaceTrust.f6b4c347823ac293951d87c1090ddfc1","status.workspaceTrust.1645586439174","status.workspaceTrust.1645586818654","status.workspaceTrust.1645673242628","status.workspaceTrust.1989bb1d056a3a8dbdcd1989528306eb","status.workspaceTrust.1645755138242","status.workspaceTrust.ccbd83fb32c108e727b989735ede53ca","status.workspaceTrust.1645778607263","status.workspaceTrust.1645779362465","status.workspaceTrust.1645779649817","status.workspaceTrust.1646117566135","status.workspaceTrust.1646209815999","status.workspaceTrust.1646277611313","status.workspaceTrust.1646291628060","status.workspaceTrust.1646552350779","status.workspaceTrust.1646619059388","status.workspaceTrust.1646625554100","status.workspaceTrust.f0cbf442526dc0910d955b103f7f474d","status.workspaceTrust.1646887372305","status.workspaceTrust.1646893521822","status.workspaceTrust.274428b7a32cf9b63e56d09dfde283a0","status.workspaceTrust.1646899175135","status.workspaceTrust.785e0bac10e0c58cb638ff6ea68929b6","status.workspaceTrust.a3b70dc6c043d4e7bf01d0e0cc55a7e1","status.workspaceTrust.94dd6483d7579ff519b271250c912827","status.workspaceTrust.6b58cc59f58561126b383432ad4e128c","status.workspaceTrust.1646917674875","status.workspaceTrust.1646964145936","status.workspaceTrust.1646976107436","status.workspaceTrust.9421d657ff05f81ef493a905d9b0747b","status.workspaceTrust.1646978816586","status.workspaceTrust.1646980928578","status.workspaceTrust.486e473dfdf2ce99ac36a74e0d878769","status.workspaceTrust.0b1d896635e407aa878eb8067f95766a","status.workspaceTrust.1666995414315138a904f1738a29d3bd","status.workspaceTrust.18fe32ac50cd7d5d9f8cda71f7ad4eb7","status.workspaceTrust.1647058980509","status.workspaceTrust.009d64272233cd874dc0a58ffaa19e94","status.workspaceTrust.8ec61632b351c501b0acdc8e2d63cdcb","status.workspaceTrust.f3590afeaeb8205b4aee9057fa3484dc","status.workspaceTrust.1647065663033","status.workspaceTrust.471451a452565ff34a866c07a6a201d7","status.workspaceTrust.1647074619145","status.workspaceTrust.1647097413962","status.workspaceTrust.7a4c379cb3eec3b39cae12dd4f9f42c7","status.workspaceTrust.1647097495036","status.workspaceTrust.1647100236133","status.workspaceTrust.1647103568622","status.workspaceTrust.1647222907251","status.workspaceTrust.ab3ec5ab414b812c6b91f62f2c632961","status.workspaceTrust.61b88040d30566807c404d0316001716","status.workspaceTrust.38de7961b908bcba0a32087bacc097e2","status.workspaceTrust.1647245432741","status.workspaceTrust.1647254350549","status.workspaceTrust.1647263635548","status.workspaceTrust.1647307363952","status.workspaceTrust.1647308749814","status.workspaceTrust.1647396097804","status.workspaceTrust.1647401948383","status.workspaceTrust.1647416812721","status.workspaceTrust.1647482275869","status.workspaceTrust.b52280e0a21830eed7b489cd218f2ac0","status.workspaceTrust.1647917929973","status.workspaceTrust.1648173210437","status.workspaceTrust.1648176933260","status.workspaceTrust.1648433394051","status.workspaceTrust.09be9fe0578749992b3dbd80d118b692","status.workspaceTrust.233a16835f891a767f4f28c1bfc9b2e9","status.workspaceTrust.1648542678446","status.workspaceTrust.1648612430208","status.workspaceTrust.1648729323238","status.workspaceTrust.73a75af43ed341629a786947e56fc159","status.workspaceTrust.1d5aec581eddf03eb7acc4e1a9b06c06","status.workspaceTrust.1648795675855","status.workspaceTrust.1648802727479","status.workspaceTrust.1648802833161","status.workspaceTrust.a8c8d00d5a9f15eedff6f7f17a7759bb","status.workspaceTrust.1648863628668","status.workspaceTrust.1648869547242","status.workspaceTrust.1649232166974","status.workspaceTrust.1649300173801","status.workspaceTrust.33c94aea8c186d1d98eecf2ab561805c","status.workspaceTrust.1649319122801","status.workspaceTrust.516f5a62021beec33db204e7caadc61e","status.workspaceTrust.1649383439575","status.workspaceTrust.98c36ab907eeff7b679ae63292a9edf5","status.workspaceTrust.1649643549300","status.workspaceTrust.1649730340041","status.workspaceTrust.1c8cda5ac220e54f2c0ecc90559c77f7","status.workspaceTrust.1649753860751","status.workspaceTrust.42211aba032f61e1cb6c2ee4d2563cb3","status.workspaceTrust.1649902726813","status.workspaceTrust.1649985394504","status.workspaceTrust.1649994179637","status.workspaceTrust.1650246049523","status.workspaceTrust.2590b29eb293a2d94005d8ae369fc1c2","status.workspaceTrust.1650286440130","status.workspaceTrust.1650336082712","status.workspaceTrust.1650460575751","status.workspaceTrust.1650524422749","status.workspaceTrust.1650526667205","status.workspaceTrust.1650531546011","status.workspaceTrust.1650591280579","status.workspaceTrust.1650591299239","status.workspaceTrust.1650602979438","status.workspaceTrust.ce3cc497fee7c3a54329c19e6f19ed77","status.workspaceTrust.1650615754044","status.workspaceTrust.78c282933e73bb4b9a1c5752e4402bd4","status.workspaceTrust.1650855281430","status.workspaceTrust.1650946217981","status.workspaceTrust.1651047089352","status.workspaceTrust.1652184805593","status.workspaceTrust.67f48c15065cfe187f05d571dc93ce22","status.workspaceTrust.1652754562143","status.workspaceTrust.64d5f20ad99c5c597304bdf095908969","status.workspaceTrust.1653304033517","status.workspaceTrust.1653304474593","status.workspaceTrust.1653305773942","status.workspaceTrust.695e13fa9f8ecad6eee4abc98c96364c","status.workspaceTrust.03d5946da75fd25d40246d3a51b361bf","status.workspaceTrust.1658836034738","status.workspaceTrust.231b0dbef85a7bbe0a9d7c5fd57be3e7","status.workspaceTrust.05f667b2f21f9308438bd1ffeadb3ceb","status.workspaceTrust.e2809c918b7784095c9d4aa77e0a6d69","status.workspaceTrust.1658886400555","status.workspaceTrust.1658887062022","status.workspaceTrust.9375bbd1f21e4f1dbda19f5c2eeb59af","status.workspaceTrust.1658890184768","status.workspaceTrust.1658894970781","status.workspaceTrust.4e924a4f613a1f91c09d436525074f51","status.workspaceTrust.3f0bfc91fe117965c83ffd9dc0ca4dcd","status.workspaceTrust.c4f970913da59e86faec2475c0ff6034","status.workspaceTrust.1658973666197","status.workspaceTrust.1658979020783","status.workspaceTrust.cad0df7b0dbe024b82ef386ed1555a41","status.workspaceTrust.aaae502b180bcd1db1fdaeb8feec31fc","status.workspaceTrust.1659080392307","status.workspaceTrust.a437d9fa60aeb3e48b019405902e308c","status.workspaceTrust.1659325315651","status.workspaceTrust.1659325778974","status.workspaceTrust.1659337825656","status.workspaceTrust.7f001f5d194510be6e921d634ae6be08","status.workspaceTrust.1348405f74d176f65ba77e455d27e656","status.workspaceTrust.2a8d8b57c9ea911269e52a44f7301123","status.workspaceTrust.1659442936232","status.workspaceTrust.f25e2a5dc36f0cce62d1ba0ed4a5fbb0","status.workspaceTrust.edb31587683cf91dc076ab5ac8dd9f5e","status.workspaceTrust.5e4db2935eabffe0c52769d0514ae9e3","status.workspaceTrust.1659492218618","status.workspaceTrust.1659492628880","status.workspaceTrust.437fd222828ab5a3a0b63dafff98239b","status.workspaceTrust.061add7cd598a96fda31c6fbc3cd94b2","status.workspaceTrust.474b6737f8413697c0a2051ec5f44ca0","status.workspaceTrust.0a56585445b3cba1e32e5f4c5e8d81b9","status.workspaceTrust.1659528040680","status.workspaceTrust.1659578061743","status.workspaceTrust.1659579769952","status.workspaceTrust.1659598110233","status.workspaceTrust.6dfba1dfdfc33086b123d585af8ed00b","status.workspaceTrust.1659598645727","status.workspaceTrust.1659600493288","status.workspaceTrust.1659669551151","status.workspaceTrust.1659682074429","status.workspaceTrust.1179cf4b00cb9d761f5b12d11d82d604","status.workspaceTrust.1659690970513","status.workspaceTrust.e2ea075f1e60d383a32798e9d8af6d8c","status.workspaceTrust.1659923832471","status.workspaceTrust.1659924590518","status.workspaceTrust.1659940544886","status.workspaceTrust.53500d086cfa414f4654cef56cf86227","status.workspaceTrust.5b3383f425b4ca2fb9d01b7c582e7ef5","status.workspaceTrust.1660015673109","status.workspaceTrust.1660016631378","status.workspaceTrust.1660018621341","status.workspaceTrust.1660097886002","status.workspaceTrust.1660208565927","status.workspaceTrust.1660268652063","status.workspaceTrust.1660529194306","status.workspaceTrust.f12d84d90bc2884f1543e5c6a6a4890b","status.workspaceTrust.1660562334474","status.workspaceTrust.8079ba49842355bb2bd0aa9faee0ff18","status.workspaceTrust.1660621154010","status.workspaceTrust.1660635139358","status.workspaceTrust.fc0309bbb43a1a4156ce8a72cbebdeed","status.workspaceTrust.1660717102034","status.workspaceTrust.1660738157744","status.workspaceTrust.27f2efcdb41c3f326a81e324bf4d5c25","status.workspaceTrust.1660815119776","status.workspaceTrust.1660894134321","status.workspaceTrust.1660895659331","status.workspaceTrust.1661135232770","status.workspaceTrust.2602375851b007bbd148b1ef0e1d3ba9","status.workspaceTrust.e2394f17948820b3303515efe5253425","status.workspaceTrust.1661155315968","status.workspaceTrust.1661157554552","status.workspaceTrust.89d3ffa26eff5bc22e4d93ded6111626","status.workspaceTrust.90101fabe17d6f83de789ce4312c7646","status.workspaceTrust.adb310da095a6f23b57476af2050e643","status.workspaceTrust.24a302044f75bb1ce221aec680eeca0f","status.workspaceTrust.c8c19e4e4787e0724b07b646b79f1058","status.workspaceTrust.1661220137706","status.workspaceTrust.96652979b6fa99d053d6a9380aa2445f","status.workspaceTrust.1661391738391","status.workspaceTrust.1661421594681","status.workspaceTrust.1661742622739","status.workspaceTrust.13c74854a8ad9669e757fae10d30cf7f","status.workspaceTrust.1661773498080","status.workspaceTrust.1661823374655","status.workspaceTrust.1661918203405","status.workspaceTrust.1661918222415","status.workspaceTrust.1661950407672","status.workspaceTrust.38d7e73d8c2658846452ab63ce99d9df","status.workspaceTrust.1662000561193","status.workspaceTrust.1662005739297","status.workspaceTrust.1662606192577","status.workspaceTrust.1662713250034","status.workspaceTrust.1663034388919","status.workspaceTrust.1663126146928","status.workspaceTrust.ae196d24a6edff9195fb7e5b274518a9","status.workspaceTrust.1663213306361","status.workspaceTrust.1663559743912","status.workspaceTrust.1663638094799","status.workspaceTrust.1663646018272","status.workspaceTrust.f37783ceb13714105a0b9da4ed4b1de7","status.workspaceTrust.1663743116439","status.workspaceTrust.ac4198cfaffb536ee75c719033f6a3e8","status.workspaceTrust.621b5545e8dc95aff65cb01885d638d5","status.workspaceTrust.907f47d483cbabe54ac3906f112043d5","status.workspaceTrust.fe78f0603030b14993d187d7ae0f528e","status.workspaceTrust.1663762143787","status.workspaceTrust.1663818103539","status.workspaceTrust.1663818380281","status.workspaceTrust.1663915997387","status.workspaceTrust.1664156578831","status.workspaceTrust.b29aa855b1c274887f263ae7f1d1d18b","status.workspaceTrust.1664191907639","status.workspaceTrust.1664192247524","status.workspaceTrust.1664352903309","status.workspaceTrust.1664352971237","status.workspaceTrust.1664358448697","status.workspaceTrust.60fcc1d727f76fca95181172c8f0e766","status.workspaceTrust.1664439766603","status.workspaceTrust.1664502973476","status.workspaceTrust.1665195387896","status.workspaceTrust.e599b02f01b84b9354092166374c2e0f","status.workspaceTrust.1665222952045","status.workspaceTrust.08174c1b22f7dc1710d7b60d1b233e99","status.workspaceTrust.1665371162453","status.workspaceTrust.1665372305077","status.workspaceTrust.1665387964361","status.workspaceTrust.1665392460116","status.workspaceTrust.1665453753434","status.workspaceTrust.adc990f3b1bb08ebe17c3a9b55589b27","status.workspaceTrust.1665453979101","status.workspaceTrust.262bc5676eab6e9d22450b8ee76c1f2b","status.workspaceTrust.baaa5b338da8dc2498ea323b40792344","status.workspaceTrust.1665492158986","status.workspaceTrust.1665626036659","status.workspaceTrust.1665626999735","status.workspaceTrust.27ddf33acb0325bf0a20c68c7e0711e9","status.workspaceTrust.1665715139180","status.workspaceTrust.1665718179749","status.workspaceTrust.1665971075563","status.workspaceTrust.1665971477961","status.workspaceTrust.1665977124997","status.workspaceTrust.1665996378589","status.workspaceTrust.1665997366967","status.workspaceTrust.1666083210626","status.workspaceTrust.1666167799963","status.workspaceTrust.1666339874292","status.workspaceTrust.1666577474004","status.workspaceTrust.1666584684143","status.workspaceTrust.1666597410107","status.workspaceTrust.9f6d6e205f279cd59c3ccccd2e45f8fc","status.workspaceTrust.1666604425850","status.workspaceTrust.e393db9d734ee35ac9217a297f6b99d6","status.workspaceTrust.1666698885078","status.workspaceTrust.1666699915959","status.workspaceTrust.1666841532796","status.workspaceTrust.1666937522445","status.workspaceTrust.26f251a47bc51322c0f37ff2b354bcc4","status.workspaceTrust.1667360332708","status.workspaceTrust.cd8d14455e128863df11722003eac25b","status.workspaceTrust.1667467082122","status.workspaceTrust.1667525974244","status.workspaceTrust.1667533668228","status.workspaceTrust.1667614260445","status.workspaceTrust.1667641788086","status.workspaceTrust.1667803255041","status.workspaceTrust.d67bc3b534ae389adfb95e8540e57fe1","status.workspaceTrust.1667959791349","status.workspaceTrust.1668085435360","status.workspaceTrust.1668220145190","status.workspaceTrust.3f48260959906197311d09cd95dc3907","status.workspaceTrust.1668594627244","status.workspaceTrust.1668599518894","status.workspaceTrust.1668761905994","status.workspaceTrust.1668844541597","status.workspaceTrust.1668844721308","status.workspaceTrust.1668850089931","status.workspaceTrust.6a1ed67f1f2c6553d45f4c0635af0fbe","status.workspaceTrust.1669688510777","status.workspaceTrust.1669790990458","status.workspaceTrust.1669791388987","status.workspaceTrust.1669968793572","status.workspaceTrust.48a4f7a5b44212d6905456e86d9dad07","status.workspaceTrust.1670571952268","status.workspaceTrust.1670571960055","status.workspaceTrust.1670811787749","status.workspaceTrust.1670814809809","status.workspaceTrust.6b1f0ace0290ca8f9459ea0e36d33b32","status.workspaceTrust.1670837420359","status.workspaceTrust.1670837758184","status.workspaceTrust.7d70820f616abb0f3386a26cbca84adf","status.workspaceTrust.ed235b643146c9f809129b1e02d63d6f","status.workspaceTrust.1670922752038","status.workspaceTrust.1670931777256","status.workspaceTrust.1671000491748","status.workspaceTrust.1671089044398","status.workspaceTrust.1671443808427","status.workspaceTrust.1671519596240","status.workspaceTrust.01e47e40a1e6c876e86ddc9d554dcf7a","status.workspaceTrust.1671614660393","status.workspaceTrust.1672027218013","status.workspaceTrust.1672027299392","status.workspaceTrust.1672105997404","status.workspaceTrust.1672109757928","status.workspaceTrust.1672198304530","status.workspaceTrust.1672211131922","status.workspaceTrust.1672214171601","status.workspaceTrust.90955c66170ded229918f55bebb76900","status.workspaceTrust.6ed6a25dfb481e12b901b9aeabffc990","status.workspaceTrust.1672391101834","status.workspaceTrust.1672729822681","status.workspaceTrust.1672812828739","status.workspaceTrust.1672902939184","status.workspaceTrust.91dcf2ab5841feec2e03faae42add935","status.workspaceTrust.2c9df17cf74603ecd26c9a597e2113a3","status.workspaceTrust.b88082ff055ab540d3898c3c380cee84","status.workspaceTrust.4c800f79546fa7ed61b84be2ee8d2dca","status.workspaceTrust.e4c614907dc0fe126755f339559d57fb","status.workspaceTrust.dbf07dd913288100e2608bb9bfe88744","status.workspaceTrust.1672970306725","status.workspaceTrust.94e20e18ec79f99ddbc827680d70fed5","status.workspaceTrust.1672972989678","status.workspaceTrust.68a8ec0987ff46e437f67de5d88ff6c8","status.workspaceTrust.e75a5113586d2f0152bffae9b5c494c2","status.workspaceTrust.1672987711941","status.workspaceTrust.3354cf7831c1b5aa584379b0363b9848","status.workspaceTrust.1673351692536","status.workspaceTrust.1673405733543","status.workspaceTrust.1673424533156","status.workspaceTrust.46128e27cc5560ac4019874f7bd6bb1c","status.workspaceTrust.1673435393317","status.workspaceTrust.1673488454397","status.workspaceTrust.1673488617633","status.workspaceTrust.1673488777492","status.workspaceTrust.1673517608475","status.workspaceTrust.20eeb7649603abad3adf6f4b018e9ad6","status.workspaceTrust.1673582945591","status.workspaceTrust.1673592220877","status.workspaceTrust.b1569ee2da64edede6f0aa9d5d986559","status.workspaceTrust.1673592275642","status.workspaceTrust.658aaacc73da510408477bc1b243949a","status.workspaceTrust.1673835709874","status.workspaceTrust.cc0086fe23565921d378be01ba2d041f","status.workspaceTrust.1673956120654","status.workspaceTrust.1673956164117","status.workspaceTrust.1673956513323","status.workspaceTrust.1673956522494","status.workspaceTrust.1674024833128","status.workspaceTrust.1674024956027","status.workspaceTrust.ec6da54441b16eb988913fb3b3777d6b","status.workspaceTrust.af8aee17d8e0d5089d2a3d028faee862","status.workspaceTrust.1674027677500","status.workspaceTrust.1675146521863","status.workspaceTrust.1675151376460","status.workspaceTrust.7bb5a560969beebe91e3042b1be27d72","status.workspaceTrust.1675237167617","status.workspaceTrust.1675253105681","status.workspaceTrust.1675327236178","status.workspaceTrust.8f2d0d60278eea5a8c591ea21b80ffdc","status.workspaceTrust.1675677657578","status.workspaceTrust.1675762684888","status.workspaceTrust.2109f73114522380b0f94809158d64c0","status.workspaceTrust.1675770197999","status.workspaceTrust.1675770498289","status.workspaceTrust.1675771187261","status.workspaceTrust.1675847448729","status.workspaceTrust.e7f42d223d06eb13a042f22a9417c9a2","status.workspaceTrust.1675941586592","status.workspaceTrust.1675947014682","status.workspaceTrust.1676256520815","status.workspaceTrust.1676279894699","status.workspaceTrust.9d3d3b7982760e23316d4ba9d5a3205f","status.workspaceTrust.1676377566479","status.workspaceTrust.cfb959c658418679adcbd0fd83829f6b","status.workspaceTrust.1676378281375","status.workspaceTrust.dae17dd04d74df2c8a9cf4d8dc36c25e","status.workspaceTrust.1676429844279","status.workspaceTrust.1676533354979","status.workspaceTrust.1676540472122","status.workspaceTrust.1676602330161","status.workspaceTrust.1676620159703","status.workspaceTrust.1676624426374","status.workspaceTrust.b783b633f114886aedd27692b44ce0f4","status.workspaceTrust.1676781455786","status.workspaceTrust.1b65d5243b42aadefa193241b492eed9","status.workspaceTrust.1676812683489","status.workspaceTrust.b869bed96dd116b188c0c1628dc7d49d","status.workspaceTrust.1676877385898","status.workspaceTrust.3c5099e36b260d69248e23d25c569d82","status.workspaceTrust.1676885418249","status.workspaceTrust.1676895843872","status.workspaceTrust.1676948796316","status.workspaceTrust.fc6eeb37737dc1a7d87483e196ce5067","status.workspaceTrust.1676981396567","status.workspaceTrust.1677036595172","status.workspaceTrust.97dbb2d5147358d334b33971f61d9023","status.workspaceTrust.1677143338560","status.workspaceTrust.1677143621181","status.workspaceTrust.1677143625563","status.workspaceTrust.1677146174159","status.workspaceTrust.272bfd27e5a9c7334ae02d9e5131d5a8","status.workspaceTrust.1677207502041","status.workspaceTrust.1677470106841","status.workspaceTrust.1677497301651","status.workspaceTrust.1677497982742","status.workspaceTrust.1677554409185","status.workspaceTrust.1677655609002","status.workspaceTrust.a0a43bc015d1d520269bc1dff3349106","status.workspaceTrust.1677659495360","status.workspaceTrust.5d694b6dac6073c0fa12f5f635a32237","status.workspaceTrust.1678088791794","status.workspaceTrust.1678094612746","status.workspaceTrust.1678104022713","status.workspaceTrust.1678158663614","status.workspaceTrust.dfd81dd6ac5d81655324d8419e3ad3a5","status.workspaceTrust.1678259221528","status.workspaceTrust.1678268471269","status.workspaceTrust.1678330745397","status.workspaceTrust.d8737f01907889e31940a00ed11c3d1d","status.workspaceTrust.1678439681993","status.workspaceTrust.1678797477970","kiteco.kite","status.workspaceTrust.1678852413553","status.workspaceTrust.1678871126139","status.workspaceTrust.1678939937018","status.workspaceTrust.2a99f601e17e01efe41e4a95c01bf43f","status.workspaceTrust.1b7dabed1e128b92114234dc02f8cbda","status.workspaceTrust.d42294994ced9854695f03c11e62be99","status.workspaceTrust.1679278568357","status.workspaceTrust.1679297227896","status.workspaceTrust.971067241218b856bdb816754cab2919","status.workspaceTrust.1679370174613","status.workspaceTrust.1679382654724","status.workspaceTrust.f74f66b17e606c038a7b404d972dd495","status.workspaceTrust.148faf9f264b09176ec2ffe8456822c4","status.workspaceTrust.1679451751264","status.workspaceTrust.4337c9921be86b59423922beeb4242dc","status.workspaceTrust.1679813242682","status.workspaceTrust.1679814256741","status.workspaceTrust.ea6f9be02bbf6b7c3e4c28af6f461256","status.workspaceTrust.1679817050437","status.workspaceTrust.1679817305359","status.workspaceTrust.1679819911182","status.workspaceTrust.78dc46b5f045c7561ca713d6161034f6","status.workspaceTrust.81ab1b9b0e372dcb0f7aa1abfa583487","status.workspaceTrust.1679843703408","status.workspaceTrust.1679898977359","status.workspaceTrust.71c26a99dc715a5f993318575e01a7f2","status.workspaceTrust.72ed673f9c165e179bc02710a8f399e1","status.workspaceTrust.1679971207626","status.workspaceTrust.1679973079845","status.workspaceTrust.1680000969068","status.workspaceTrust.1680075448077","status.workspaceTrust.1680081380615","status.workspaceTrust.1680096980365","status.workspaceTrust.83917b7673716ffdf8c2b418fc9853a9","status.workspaceTrust.1680141707331","status.workspaceTrust.1680230861722","status.workspaceTrust.1680255494653","status.workspaceTrust.1680267545758","status.workspaceTrust.60a124e47b0e0d68fe657f83d4167293","status.workspaceTrust.8fb7d061987293c7bc568ef30d6f59cc","status.workspaceTrust.98cda2b3639cd25471228935f6664375","status.workspaceTrust.1680333152721","status.workspaceTrust.e8e099127a10c0d81c0502d2c4603977","status.workspaceTrust.1680578811024","status.workspaceTrust.1680616629791","status.workspaceTrust.1680662407716","status.workspaceTrust.1680663914241","status.workspaceTrust.95e81c8461d327d4f949b6d1b95dfe91","status.workspaceTrust.1680668153075","status.workspaceTrust.1680707541239","status.workspaceTrust.7479baca8bcc4e20378ca0664c7bf85c","status.workspaceTrust.1680765589593","status.workspaceTrust.1680767062316","status.workspaceTrust.1680767982043","status.workspaceTrust.fd0a3c57780d64e928fa5909b92cb8cd","status.workspaceTrust.1680861680940","status.workspaceTrust.1680861686955","status.workspaceTrust.e931a73aad933c41cfef89674168f984","status.workspaceTrust.1681093935980","status.workspaceTrust.1681096753209","status.workspaceTrust.1681110903257","status.workspaceTrust.1681183323117","status.workspaceTrust.fecca9a63ceb2a85d134a5e752c28dfa","status.workspaceTrust.1681184890767","status.workspaceTrust.7121c7b2dd0c477332dae45f4906d483","status.workspaceTrust.45acc1e26abc7c20c2ab321597a8a7c7","status.workspaceTrust.5dd38f2e4ac47d1d42518aeab917e2b6","status.workspaceTrust.d5669b4565a7806379e5222691617bec","status.workspaceTrust.1681197239038","status.workspaceTrust.1681202210552","status.workspaceTrust.719e1db22d12c885b46ba9c096695c3b","status.workspaceTrust.1682134209958","status.workspaceTrust.35d196292b4bf6697ea41be286311418","status.workspaceTrust.fee852da4a807868509f7bc2e349f81e","status.workspaceTrust.f5615ebdeca4464e438547586dee9234","status.workspaceTrust.1684502875568","status.workspaceTrust.fb73530a6ec6a312b268a4cfd0ade322","status.workspaceTrust.1684504744454","status.workspaceTrust.1685256479722","status.workspaceTrust.fec20f4e9075387643f73759a4cc653f","status.workspaceTrust.ebb686a197aa571dbde3fb3831e29faf","status.workspaceTrust.1a286e15b3cd8f1040547093c1bf37f1","status.workspaceTrust.1685766203042","status.workspaceTrust.1685766218291","status.workspaceTrust.35d53d52281ff5d22be225b549342409","status.workspaceTrust.4b4aa48369eaaed4ae907aaaf9aa1116","status.workspaceTrust.1685772418730","status.workspaceTrust.6af11fcea3dfc353d5f241a62fc1b52f","status.workspaceTrust.1685861929435","status.workspaceTrust.1685870923851","status.workspaceTrust.4eb73d50059c6639345f96d54549fd4b","status.workspaceTrust.1685888472359","status.workspaceTrust.1685890515540","status.workspaceTrust.6a2b55183766f7911312e607718d8996","status.workspaceTrust.1685893660114","status.workspaceTrust.1685894272431","status.workspaceTrust.1686317371580","status.workspaceTrust.1686319209310","status.workspaceTrust.1686456843953","status.workspaceTrust.1686456890531","status.workspaceTrust.1686475453439","status.workspaceTrust.1686476270069","status.workspaceTrust.1686923886645","status.workspaceTrust.00832c7dc67f09134cf63635ab0817d6","status.workspaceTrust.1686923900739","status.workspaceTrust.1686964924870","status.workspaceTrust.1687057226845","status.workspaceTrust.1687058745033","status.workspaceTrust.83fc346cacfa35ac6bcb6291d48afe8d","status.workspaceTrust.23a6d3fee071927534ff602833a21938","status.workspaceTrust.4553b939ae2669a21fb5d531a124da08","status.workspaceTrust.6535c3bec97c81227fcd6180ec062e6c","status.workspaceTrust.1687076726599","status.workspaceTrust.1687396971303","status.workspaceTrust.1687398045385","status.workspaceTrust.25f60526edb3bab86abfab875cc97dee","status.workspaceTrust.2ac230b6611bd55724972b08ac22f583","status.workspaceTrust.1687483081804","status.workspaceTrust.86c66f976a597974d43dee0339f1ac1d","status.workspaceTrust.1687485004936","status.workspaceTrust.b5c15d3ca14ac5c8a50a681cd8b1cb09","status.workspaceTrust.1687485030155","status.workspaceTrust.8398fb2ef7ad0d2311d9cb60bed02e7a","status.workspaceTrust.1690000778486","status.workspaceTrust.be9e26b62056175c5aab8d65571c449f","status.workspaceTrust.87b53f78ad88eee12c74593621608465","status.workspaceTrust.1693016991447","status.workspaceTrust.1693017669272","status.workspaceTrust.1693115259113","status.workspaceTrust.1693121183937","status.workspaceTrust.0a0878deb924ca1f105b650c05e1e3e3","status.workspaceTrust.6da1e2a9b3188c6be46c590c863fc610","status.workspaceTrust.1693625473657","status.workspaceTrust.76288912ff9eeb55dfeed61781d94645","status.workspaceTrust.767263cea6ee684251512f75a560850b","status.workspaceTrust.1699181383188","status.workspaceTrust.2fef724ddc3e8e1905a3fe544ac5ebfd","status.workspaceTrust.4ba38c194a3faf9842b35f27f06d1f0a","status.workspaceTrust.1699772824339","status.workspaceTrust.163c9cf308f3cc9e2e9d3f833744c576","status.workspaceTrust.f7932962621ae7e561749b9bf91a89a9","status.workspaceTrust.02b932b6305d4c8fcac99a067657499d","status.workspaceTrust.1700056475478","status.workspaceTrust.be402760bace91f69c27b62159ba320f","status.workspaceTrust.108745fc9aad8ffdb65efefcf5ae9b2e","status.workspaceTrust.1700314585303","status.workspaceTrust.576436cf47f792591fb2e4b56d32fa21","status.workspaceTrust.1700922458121","status.workspaceTrust.1700923934263","status.workspaceTrust.d24660dfc618d1b4d51bb41b4be05f53","status.workspaceTrust.b24618b622f8bfb36a4d5b23ad082ce2","status.workspaceTrust.1702181997064","status.workspaceTrust.79075dcd799f51fe06a9485ac9b11387","status.workspaceTrust.774417ce80d525fd034bc84b90f63009","status.workspaceTrust.1702546034216","status.workspaceTrust.282360f50aa4a9b4740178fd3b0f6994","status.workspaceTrust.ext-dev","status.workspaceTrust.c6839c9024c2d8198bd9973a7438cd07","status.workspaceTrust.5dcbb58ff3a67a465b284c07f7de842e","status.workspaceTrust.1702609508356","status.workspaceTrust.1702609527713","status.workspaceTrust.1702611040866","status.workspaceTrust.1702626664182","status.workspaceTrust.1cb78a97b16e930b9a89f099f7a4fc09"]'
workbench.telemetryOptOutShown: "true"
workbench.view.debug.state.hidden: '[{"id":"workbench.debug.welcome","isHidden":false},{"id":"workbench.debug.variablesView","isHidden":false},{"id":"workbench.debug.watchExpressionsView","isHidden":false},{"id":"workbench.debug.callStackView","isHidden":false},{"id":"workbench.debug.loadedScriptsView","isHidden":false},{"id":"workbench.debug.breakPointsView","isHidden":false},{"id":"jsBrowserBreakpoints","isHidden":false},{"id":"jsExcludedCallers","isHidden":false},{"id":"exceptions","isHidden":false},{"id":"CppSshTargetsView","isHidden":false}]'
workbench.view.extension.anes.state.hidden: '[{"id":"romLocal","isHidden":false},{"id":"romRemote","isHidden":false}]'
workbench.view.extension.bito-activitybar.state.hidden: '[{"id":"activateBito.sidebar","isHidden":false}]'
workbench.view.extension.bookmarks.state.hidden: '[{"id":"bookmarksExplorer","isHidden":false},{"id":"bookmarksHelpAndFeedback","isHidden":false}]'
workbench.view.extension.chatgpt-vscode-plugin.state.hidden: '[{"id":"chatgpt-vscode-plugin.view","isHidden":false}]'
workbench.view.extension.cmake-view.state.hidden: '[{"id":"cmake.projectStatus","isHidden":false},{"id":"cmake.outline","isHidden":false}]'
workbench.view.extension.codegeex-sidebar.state.hidden: '[{"id":"codegeex-translate","isHidden":false}]'
workbench.view.extension.commands.state.hidden: '[{"id":"commands.tree","isHidden":false}]'
workbench.view.extension.copilot-labs.state.hidden: '[{"id":"copilotSidebar.explain","isHidden":false},{"id":"copilotSidebar.translate","isHidden":false},{"id":"copilotSidebar.toolbox","isHidden":false},{"id":"copilotSidebar.generateTests","isHidden":false}]'
workbench.view.extension.github-pull-request.state.hidden: '[{"id":"github:createPullRequest","isHidden":false},{"id":"github:compareChanges","isHidden":false},{"id":"prStatus:github","isHidden":false},{"id":"github:activePullRequest","isHidden":false},{"id":"github:activePullRequest:welcome","isHidden":false},{"id":"github:createPullRequestWebview","isHidden":false},{"id":"github:compareChangesFiles","isHidden":false},{"id":"github:compareChangesCommits","isHidden":false}]'
workbench.view.extension.github-pull-requests.state.hidden: '[{"id":"github:login","isHidden":false},{"id":"pr:github","isHidden":false},{"id":"issues:github","isHidden":false}]'
workbench.view.extension.gitlens.state.hidden: '[{"id":"gitlens.views.home","isHidden":false},{"id":"gitlens.views.contributors","isHidden":false},{"id":"gitlens.views.workspaces","isHidden":false},{"id":"gitlens.views.account","isHidden":false},{"id":"gitlens.views.drafts","isHidden":false}]'
workbench.view.extension.gitlensInspect.state.hidden: '[{"id":"gitlens.views.commitDetails","isHidden":false},{"id":"gitlens.views.lineHistory","isHidden":false},{"id":"gitlens.views.fileHistory","isHidden":false},{"id":"gitlens.views.timeline","isHidden":false},{"id":"gitlens.views.searchAndCompare","isHidden":false}]'
workbench.view.extension.gitlensPanel.state.hidden: '[{"id":"gitlens.views.graph","isHidden":false},{"id":"gitlens.views.graphDetails","isHidden":false},{"id":"gitlens.views.timeline","isHidden":false}]'
workbench.view.extension.huile8-explorer.state.hidden: '[{"id":"huile8-will-mastering","isHidden":false},{"id":"huile8-mastered","isHidden":false}]'
workbench.view.extension.ilspySearchResultsContainer.state.hidden: '[{"id":"ilspySearchResultsContainer","isHidden":false}]'
workbench.view.extension.jupyter.state.hidden: '[{"id":"cell-tag","isHidden":false}]'
workbench.view.extension.package-explorer.state.hidden: '[{"id":"pythonEnvironments","isHidden":false},{"id":"workspaceEnvironments","isHidden":false}]'
workbench.view.extension.project-manager.state.hidden: '[{"id":"projectsExplorerFavorites","isHidden":false},{"id":"projectsExplorerGit","isHidden":false},{"id":"projectsExplorerSVN","isHidden":false},{"id":"projectsExplorerAny","isHidden":false},{"id":"projectsExplorerMercurial","isHidden":false},{"id":"projectsExplorerVSCode","isHidden":false},{"id":"projectManagerHelpAndFeedback","isHidden":false}]'
workbench.view.extension.references-view.state.hidden: '[{"id":"references-view.tree","isHidden":false},{"id":"CppReferencesView","isHidden":false}]'
workbench.view.extension.sln_explorer.state.hidden: '[{"id":"slnbrw","isHidden":false}]'
workbench.view.extension.sourcegraph-view.state.hidden: '[{"id":"sourcegraph.searchSidebar","isHidden":false},{"id":"sourcegraph.files","isHidden":false},{"id":"sourcegraph.helpSidebar","isHidden":false}]'
workbench.view.extension.svnActivity.state.hidden: '[{"id":"repolog","isHidden":false},{"id":"itemlog","isHidden":false},{"id":"branchchanges","isHidden":false}]'
workbench.view.extension.tabnine-access.state.hidden: '[{"id":"tabnine-today","isHidden":false},{"id":"tabnine-home","isHidden":false},{"id":"tabnine-notifications","isHidden":false}]'
workbench.view.extension.test.state.hidden: '[{"id":"workbench.view.testing","isHidden":false},{"id":"workbench.view.testCoverage","isHidden":false}]'
workbench.view.extension.treeView.state.hidden: '[{"id":"z-reader-menu","isHidden":false}]'
workbench.view.extension.vscode-notes.state.hidden: '[{"id":"notes","isHidden":false}]'
workbench.view.extensions.state.hidden: '[{"id":"workbench.views.extensions.installed","isHidden":false},{"id":"workbench.views.extensions.searchOutdated","isHidden":false},{"id":"workbench.views.extensions.workspaceRecommendations","isHidden":false},{"id":"workbench.views.extensions.popular","isHidden":false},{"id":"workbench.views.extensions.searchRecentlyUpdated","isHidden":false},{"id":"workbench.views.extensions.otherRecommendations","isHidden":false},{"id":"extensions.recommendedList","isHidden":false},{"id":"workbench.views.extensions.enabled","isHidden":true},{"id":"workbench.views.extensions.disabled","isHidden":true},{"id":"workbench.views.extensions.marketplace","isHidden":false},{"id":"workbench.views.extensions.searchInstalled","isHidden":false},{"id":"workbench.views.extensions.searchEnabled","isHidden":false},{"id":"workbench.views.extensions.searchDisabled","isHidden":false},{"id":"workbench.views.extensions.searchBuiltin","isHidden":false},{"id":"workbench.views.extensions.searchWorkspaceUnsupported","isHidden":false},{"id":"workbench.views.extensions.builtinFeatureExtensions","isHidden":false},{"id":"workbench.views.extensions.builtinThemeExtensions","isHidden":false},{"id":"workbench.views.extensions.builtinProgrammingLanguageExtensions","isHidden":false},{"id":"workbench.views.extensions.untrustedUnsupportedExtensions","isHidden":false},{"id":"workbench.views.extensions.untrustedPartiallySupportedExtensions","isHidden":false},{"id":"workbench.views.extensions.virtualUnsupportedExtensions","isHidden":false},{"id":"workbench.views.extensions.virtualPartiallySupportedExtensions","isHidden":false},{"id":"workbench.views.extensions.deprecatedExtensions","isHidden":false}]'
workbench.view.remote.state.hidden: '[{"id":"remoteHub.views.workspaceRepositories","isHidden":false},{"id":"github.codespaces.explorer","isHidden":false},{"id":"github.codespaces.warnExplorer","isHidden":false},{"id":"github.codespaces.performanceExplorer","isHidden":false},{"id":"~remote.helpPanel","isHidden":false}]'
workbench.view.search.state.hidden: '[{"id":"workbench.view.search","isHidden":false}]'
workbench.view.sync.state.hidden: '[{"id":"workbench.views.sync.merges","isHidden":false},{"id":"workbench.views.sync.remoteActivity","isHidden":false},{"id":"workbench.views.sync.machines","isHidden":false},{"id":"workbench.views.sync.localActivity","isHidden":true},{"id":"workbench.views.sync.troubleshoot","isHidden":true},{"id":"workbench.views.sync.conflicts","isHidden":false},{"id":"workbench.views.sync.externalActivity","isHidden":false}]'
workbench.views.extensions.installed.size: "108"
workbench.welcomePage.hiddenCategories: '["github.copilot"]'
workbench.welcomePage.walkthroughMetadata: '[["vscode.typescript-language-features#nodejsWelcome",{"firstSeen":1676781456204,"stepIDs":["walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows","walkthroughs.nodejsWelcome.downloadNode.forLinux","walkthroughs.nodejsWelcome.makeJsFile","walkthroughs.nodejsWelcome.debugJsFile","walkthroughs.nodejsWelcome.learnMoreAboutJs"],"manaullyOpened":false}],["ms-vscode.cpptools#cppWelcome",{"firstSeen":1676782173375,"stepIDs":["verify.compiler.mac","verify.compiler.linux","verify.compiler.windows","open.project","setup.intellisense","run.project.mac","run.project.linux","run.project.windows","install.cmake.tools","watch.tutorials"],"manaullyOpened":false}],["ms-python.python#pythonWelcome",{"firstSeen":1676782390171,"stepIDs":["python.createPythonFile","python.installPythonWin8","python.installPythonMac","python.installPythonLinux","python.selectInterpreter","python.createEnvironment","python.runAndDebug","python.learnMoreWithDS"],"manaullyOpened":false}],["ms-python.python#pythonDataScienceWelcome",{"firstSeen":1676782390171,"stepIDs":["python.installJupyterExt","python.createNewNotebook","python.openInteractiveWindow","python.dataScienceLearnMore"],"manaullyOpened":false}],["ms-toolsai.jupyter#jupyterWelcome",{"firstSeen":1676782397123,"stepIDs":["ipynb.newUntitledIpynb","jupyter.selectKernel","jupyter.exploreAndDebug","jupyter.dataScienceLearnMore"],"manaullyOpened":false}],["ms-vscode.remote-repositories#remoteRepositoriesWalkthrough",{"firstSeen":1686317439116,"stepIDs":["editCommitRepo","createGitHubPullRequest","continueOn","openRepo","remoteIndicator"],"manaullyOpened":false}],["eamodio.gitlens#gitlens.welcome",{"firstSeen":1687398045615,"stepIDs":["gitlens.welcome.tutorial","gitlens.welcome.sidebars","gitlens.welcome.currentLineBlame","gitlens.welcome.fileAnnotations","gitlens.welcome.revisionHistory","gitlens.welcome.commitGraph","gitlens.welcome.workspaces","gitlens.welcome.hostingServiceIntegrations","gitlens.welcome.labs","gitlens.welcome.preview","gitlens.welcome.trial","gitlens.welcome.services","gitlens.welcome.additional"],"manaullyOpened":false}],["alefragnani.Bookmarks#bookmarksWelcome",{"firstSeen":1690000780853,"stepIDs":["toggle","navigateToBookmarks","defineLabelsForYourBookmarks","exclusiveSideBar","workingWithRemotes","customizingAppearance"],"manaullyOpened":false}],["ms-python.python#pythonWelcome2",{"firstSeen":1690000780853,"stepIDs":["python.createPythonFolder","python.createPythonFile","python.installPythonWin8","python.installPythonMac","python.installPythonLinux","python.createEnvironment2","python.runAndDebug","python.learnMoreWithDS2"],"manaullyOpened":false}],["GitHub.copilot#copilotWelcome",{"firstSeen":1691816973151,"stepIDs":["copilot.signin","copilot.firstsuggest","copilot.realfiles.openrecent","copilot.realfiles.quickopen","copilot.iterate","copilot.creativity"],"manaullyOpened":false}],["eamodio.gitlens#gitlens.plus",{"firstSeen":1693755572769,"stepIDs":["gitlens.plus.intro","gitlens.plus.commitGraph","gitlens.plus.visualFileHistory","gitlens.plus.worktrees","gitlens.plus.richIntegrations","gitlens.plus.tryNow","gitlens.plus.trial","gitlens.plus.trial.extend","gitlens.plus.trial.upgrade"],"manaullyOpened":false}],["ms-dotnettools.csdevkit#csdevkit.gettingStarted",{"firstSeen":1699181383299,"stepIDs":["csdevkit.signInStep","csdevkit.setupEnvironmentStep","csdevkit.openWorkspaceStep","csdevkit.createNewProjectStep","csdevkit.launchDebugAndTestStep","csdevkit.learnMoreStep"],"manaullyOpened":false}]]'
zokugun.cron-tasks: '{"version":"0.1.2"}'
